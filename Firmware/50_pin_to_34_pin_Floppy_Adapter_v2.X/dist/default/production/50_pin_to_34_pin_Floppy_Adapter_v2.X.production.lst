

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Dec 07 18:52:55 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F26K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	eeprom_data
    67  F00000  00 4C 00 00 2C 63 4C 00 	db	0,76,0,0,44,99,76,0	;# 
    68  F00008  00 2C 63 00 00 00 00 00 	db	0,44,99,0,0,0,0,0	;# 
    69                           
    70                           	psect	idataBANK0
    71  001594                     __pidataBANK0:
    72                           	callstack 0
    73                           
    74                           ;initializer for _driveParams
    75  001594  77                 	db	low _driveParams_A
    76  001595  00                 	db	high _driveParams_A
    77                           
    78                           	psect	nvBANK0
    79  00008D                     __pnvBANK0:
    80                           	callstack 0
    81  00008D                     main@eepromValue:
    82                           	callstack 0
    83  00008D                     	ds	1
    84  00008E                     main@displayMode:
    85                           	callstack 0
    86  00008E                     	ds	1
    87  00008F                     main@startDisplayMode:
    88                           	callstack 0
    89  00008F                     	ds	1
    90  0000                     _CCP5CON	set	3924
    91  0000                     _CCP3CON	set	3933
    92  0000                     _CCPTMRS1	set	3912
    93  0000                     _CCPTMRS0	set	3913
    94  0000                     _T4CON	set	3921
    95  0000                     _PR4	set	3922
    96  0000                     _ANSELC	set	3898
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELA	set	3896
    99  0000                     _EECON2	set	4007
   100  0000                     _EEDATA	set	4008
   101  0000                     _EECON1bits	set	4006
   102  0000                     _EEADRH	set	4010
   103  0000                     _EEADR	set	4009
   104  0000                     _PIR2bits	set	4001
   105  0000                     _TMR2	set	4028
   106  0000                     _PIR4bits	set	3963
   107  0000                     _PIR5bits	set	3966
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PIE4bits	set	3962
   110  0000                     _PIE2bits	set	4000
   111  0000                     _PIE5bits	set	3965
   112  0000                     _INTCON3bits	set	4080
   113  0000                     _IPR4bits	set	3964
   114  0000                     _CCP2CON	set	3942
   115  0000                     _IPR2bits	set	4002
   116  0000                     _IPR5bits	set	3967
   117  0000                     _T2CON	set	4026
   118  0000                     _PR2	set	4027
   119  0000                     _T1CON	set	4045
   120  0000                     _IPR1bits	set	3999
   121  0000                     _PIE1bits	set	3997
   122  0000                     _PORTAbits	set	3968
   123  0000                     _PORTBbits	set	3969
   124  0000                     _PORTC	set	3970
   125  0000                     _PORTA	set	3968
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISA	set	3986
   129  0000                     _T0CON	set	4053
   130  0000                     _INTCON2bits	set	4081
   131  0000                     _OSCTUNE	set	3995
   132  0000                     _OSCCON	set	4051
   133  0000                     _RCONbits	set	4048
   134  0000                     _INTCONbits	set	4082
   135                           
   136                           ; #config settings
   137                           
   138                           	psect	cinit
   139  00150E                     __pcinit:
   140                           	callstack 0
   141  00150E                     start_initialization:
   142                           	callstack 0
   143  00150E                     __initialization:
   144                           	callstack 0
   145                           
   146                           ; Initialize objects allocated to BANK0 (2 bytes)
   147                           ; load TBLPTR registers with __pidataBANK0
   148  00150E  0E94               	movlw	low __pidataBANK0
   149  001510  6EF6               	movwf	tblptrl,c
   150  001512  0E15               	movlw	high __pidataBANK0
   151  001514  6EF7               	movwf	tblptrh,c
   152  001516  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   153  001518  6EF8               	movwf	tblptru,c
   154  00151A  0009               	tblrd		*+	;fetch initializer
   155  00151C  CFF5 F090          	movff	tablat,__pdataBANK0
   156  001520  0009               	tblrd		*+	;fetch initializer
   157  001522  CFF5 F091          	movff	tablat,__pdataBANK0+1
   158                           
   159                           ; Clear objects allocated to BANK0 (30 bytes)
   160  001526  EE00  F060         	lfsr	0,__pbssBANK0
   161  00152A  0E1E               	movlw	30
   162  00152C                     clear_0:
   163  00152C  6AEE               	clrf	postinc0,c
   164  00152E  06E8               	decf	wreg,f,c
   165  001530  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   168  001532  6A38               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   169  001534  6A37               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   170                           
   171                           ; Clear objects allocated to COMRAM (9 bytes)
   172  001536  EE00  F039         	lfsr	0,__pbssCOMRAM
   173  00153A  0E09               	movlw	9
   174  00153C                     clear_1:
   175  00153C  6AEE               	clrf	postinc0,c
   176  00153E  06E8               	decf	wreg,f,c
   177  001540  E1FD               	bnz	clear_1
   178  001542                     end_of_initialization:
   179                           	callstack 0
   180  001542                     __end_of__initialization:
   181                           	callstack 0
   182  001542  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183  001544  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184  001546  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  001548  6EF8               	movwf	tblptru,c
   186  00154A  0100               	movlb	0
   187  00154C  EF54  F001         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bitbssCOMRAM
   190  0001B8                     __pbitbssCOMRAM:
   191                           	callstack 0
   192  0001B8                     main@menuEdit:
   193                           	callstack 0
   194  0001B8                     	ds	1
   195  0001B9                     main@cmdSwitchLong:
   196                           	callstack 0
   197  0001B9                     	ds	1
   198  0001BA                     main@cmdSwitchShort:
   199                           	callstack 0
   200  0001BA                     	ds	1
   201  0001BB                     main@cmdSwitchLast:
   202                           	callstack 0
   203  0001BB                     	ds	1
   204  0001BC                     main@dot2:
   205                           	callstack 0
   206  0001BC                     	ds	1
   207  0001BD                     main@dot1:
   208                           	callstack 0
   209  0001BD                     	ds	1
   210  0001BE                     main@tg43:
   211                           	callstack 0
   212  0001BE                     	ds	1
   213  0001BF                     main@headLoad:
   214                           	callstack 0
   215  0001BF                     	ds	1
   216  0001C0                     main@cmdSwitch:
   217                           	callstack 0
   218  0001C0                     	ds	1
   219  0001C1                     main@externalSignal:
   220                           	callstack 0
   221  0001C1                     	ds	1
   222  0001C2                     _blink:
   223                           	callstack 0
   224  0001C2                     	ds	1
   225                           
   226                           	psect	bssCOMRAM
   227  000039                     __pbssCOMRAM:
   228                           	callstack 0
   229  000039                     isrLowPrio@counter500:
   230                           	callstack 0
   231  000039                     	ds	4
   232  00003D                     isrLowPrio@clockDivider:
   233                           	callstack 0
   234  00003D                     	ds	1
   235  00003E                     _counter6000Hz:
   236                           	callstack 0
   237  00003E                     	ds	4
   238                           
   239                           	psect	bssBANK0
   240  000060                     __pbssBANK0:
   241                           	callstack 0
   242  000060                     main@eepromAddress:
   243                           	callstack 0
   244  000060                     	ds	4
   245  000064                     main@cmdSwitchStartCount:
   246                           	callstack 0
   247  000064                     	ds	4
   248  000068                     _counter1000Hz:
   249                           	callstack 0
   250  000068                     	ds	4
   251  00006C                     main@menuMode:
   252                           	callstack 0
   253  00006C                     	ds	1
   254  00006D                     main@speed:
   255                           	callstack 0
   256  00006D                     	ds	1
   257  00006E                     main@bcd2:
   258                           	callstack 0
   259  00006E                     	ds	1
   260  00006F                     main@bcd1:
   261                           	callstack 0
   262  00006F                     	ds	1
   263  000070                     _driveParams_B:
   264                           	callstack 0
   265  000070                     	ds	7
   266  000077                     _driveParams_A:
   267                           	callstack 0
   268  000077                     	ds	7
   269                           
   270                           	psect	dataBANK0
   271  000090                     __pdataBANK0:
   272                           	callstack 0
   273  000090                     _driveParams:
   274                           	callstack 0
   275  000090                     	ds	2
   276                           
   277                           	psect	cstackBANK0
   278  00007E                     __pcstackBANK0:
   279                           	callstack 0
   280  00007E                     ?___awdiv:
   281                           	callstack 0
   282  00007E                     ?___awmod:
   283                           	callstack 0
   284  00007E                     ___awdiv@dividend:
   285                           	callstack 0
   286  00007E                     ___awmod@dividend:
   287                           	callstack 0
   288  00007E                     EepromRead@address:
   289                           	callstack 0
   290  00007E                     EepromWrite@address:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0x0
   294  00007E                     	ds	2
   295  000080                     ___awdiv@divisor:
   296                           	callstack 0
   297  000080                     ___awmod@divisor:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x2
   301  000080                     	ds	2
   302  000082                     EepromWrite@data:
   303                           	callstack 0
   304  000082                     ___awdiv@counter:
   305                           	callstack 0
   306  000082                     ___awmod@counter:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x4
   310  000082                     	ds	1
   311  000083                     ___awdiv@sign:
   312                           	callstack 0
   313  000083                     ___awmod@sign:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x5
   317  000083                     	ds	1
   318  000084                     ___awdiv@quotient:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x6
   322  000084                     	ds	2
   323  000086                     ??_main:
   324                           
   325                           ; 1 bytes @ 0x8
   326  000086                     	ds	3
   327  000089                     main@counts:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0xB
   331  000089                     	ds	4
   332                           
   333                           	psect	cstackCOMRAM
   334  000001                     __pcstackCOMRAM:
   335                           	callstack 0
   336  000001                     ??_isrHighPrio:
   337  000001                     
   338                           ; 2 bytes @ 0x0
   339  000001                     	ds	7
   340  000008                     ?___lmul:
   341                           	callstack 0
   342  000008                     ___lmul@multiplier:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x7
   346  000008                     	ds	4
   347  00000C                     ___lmul@multiplicand:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0xB
   351  00000C                     	ds	4
   352  000010                     ___lmul@product:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0xF
   356  000010                     	ds	4
   357  000014                     ?___lldiv:
   358                           	callstack 0
   359  000014                     ___lldiv@dividend:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x13
   363  000014                     	ds	4
   364  000018                     ___lldiv@divisor:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x17
   368  000018                     	ds	4
   369  00001C                     ___lldiv@quotient:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x1B
   373  00001C                     	ds	4
   374  000020                     ___lldiv@counter:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1F
   378  000020                     	ds	1
   379  000021                     ??_isrLowPrio:
   380                           
   381                           ; 1 bytes @ 0x20
   382  000021                     	ds	9
   383  00002A                     _isrLowPrio$1074:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x29
   387  00002A                     	ds	4
   388  00002E                     isrLowPrio@deviation:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x2D
   392  00002E                     	ds	4
   393  000032                     isrLowPrio@percent:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x31
   397  000032                     	ds	4
   398  000036                     isrLowPrio@sign:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x35
   402  000036                     	ds	1
   403                           
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 112 in file "avr-main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  counts          4   11[BANK0 ] unsigned long 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  2  112[None  ] int 
   416 ;; Registers used:
   417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;Total ram usage:        7 bytes
   428 ;; Hardware stack levels required when called:    4
   429 ;; This function calls:
   430 ;;		_EepromRead
   431 ;;		_EepromWrite
   432 ;;		___awdiv
   433 ;;		___awmod
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text0
   440  0002A8                     __ptext0:
   441                           	callstack 0
   442  0002A8                     _main:
   443                           	callstack 27
   444  0002A8                     
   445                           ;avr-main.c: 114:     INTCONbits.PEIE = 0;
   446  0002A8  9CF2               	bcf	242,6,c	;volatile
   447                           
   448                           ;avr-main.c: 115:     INTCONbits.GIE = 0;
   449  0002AA  9EF2               	bcf	242,7,c	;volatile
   450                           
   451                           ;avr-main.c: 116:     RCONbits.IPEN = 1;
   452  0002AC  8ED0               	bsf	208,7,c	;volatile
   453  0002AE                     
   454                           ;avr-main.c: 119:     OSCCON = 0b01110000;
   455  0002AE  0E70               	movlw	112
   456  0002B0  6ED3               	movwf	211,c	;volatile
   457                           
   458                           ;avr-main.c: 120:     OSCTUNE = 0b01000000;
   459  0002B2  0E40               	movlw	64
   460  0002B4  6E9B               	movwf	155,c	;volatile
   461  0002B6                     
   462                           ;avr-main.c: 123:     INTCONbits.T0IE = 0;
   463  0002B6  9AF2               	bcf	242,5,c	;volatile
   464  0002B8                     
   465                           ;avr-main.c: 124:     INTCON2bits.TMR0IP = 0;
   466  0002B8  94F1               	bcf	241,2,c	;volatile
   467                           
   468                           ;avr-main.c: 125:     T0CON = 0x00;
   469  0002BA  0E00               	movlw	0
   470  0002BC  6ED5               	movwf	213,c	;volatile
   471                           
   472                           ;avr-main.c: 128:     ANSELA = 0x00;
   473  0002BE  0E00               	movlw	0
   474  0002C0  010F               	movlb	15	; () banked
   475  0002C2  6F38               	movwf	56,b	;volatile
   476                           
   477                           ;avr-main.c: 129:     ANSELB = 0x00;
   478  0002C4  0E00               	movlw	0
   479  0002C6  6F39               	movwf	57,b	;volatile
   480                           
   481                           ;avr-main.c: 130:     ANSELC = 0x00;
   482  0002C8  0E00               	movlw	0
   483  0002CA  6F3A               	movwf	58,b	;volatile
   484                           
   485                           ;avr-main.c: 132:     TRISA = 0b01011101;
   486  0002CC  0E5D               	movlw	93
   487  0002CE  6E92               	movwf	146,c	;volatile
   488                           
   489                           ;avr-main.c: 133:     TRISB = 0b11101111;
   490  0002D0  0EEF               	movlw	239
   491  0002D2  6E93               	movwf	147,c	;volatile
   492                           
   493                           ;avr-main.c: 134:     TRISC = 0b00000000;
   494  0002D4  0E00               	movlw	0
   495  0002D6  6E94               	movwf	148,c	;volatile
   496  0002D8                     
   497                           ; BSR set to: 15
   498                           ;avr-main.c: 137:     PORTA &= 0b11111111;
   499  0002D8  5080               	movf	128,w,c	;volatile
   500  0002DA                     
   501                           ; BSR set to: 15
   502                           ;avr-main.c: 140:     PORTC = 0x00;
   503  0002DA  0E00               	movlw	0
   504  0002DC  6E82               	movwf	130,c	;volatile
   505  0002DE                     
   506                           ; BSR set to: 15
   507                           ;avr-main.c: 141:     PORTBbits.RB4 = 0;
   508  0002DE  9881               	bcf	129,4,c	;volatile
   509  0002E0                     
   510                           ; BSR set to: 15
   511                           ;avr-main.c: 142:     PORTAbits.RA1 = 0;
   512  0002E0  9280               	bcf	128,1,c	;volatile
   513  0002E2                     
   514                           ; BSR set to: 15
   515                           ;avr-main.c: 145:     PIE1bits.TMR1IE = 0;
   516  0002E2  909D               	bcf	157,0,c	;volatile
   517  0002E4                     
   518                           ; BSR set to: 15
   519                           ;avr-main.c: 146:     IPR1bits.TMR1IP = 0;
   520  0002E4  909F               	bcf	159,0,c	;volatile
   521  0002E6                     
   522                           ; BSR set to: 15
   523                           ;avr-main.c: 147:     T1CON = 0b00000011;
   524  0002E6  0E03               	movlw	3
   525  0002E8  6ECD               	movwf	205,c	;volatile
   526  0002EA                     
   527                           ; BSR set to: 15
   528                           ;avr-main.c: 150:     IPR1bits.TMR2IP = 0;
   529  0002EA  929F               	bcf	159,1,c	;volatile
   530  0002EC                     
   531                           ; BSR set to: 15
   532                           ;avr-main.c: 151:     PR2 = 166 - 1;
   533  0002EC  0EA5               	movlw	165
   534  0002EE  6EBB               	movwf	187,c	;volatile
   535  0002F0                     
   536                           ; BSR set to: 15
   537                           ;avr-main.c: 152:     T2CON = 0b01111100;
   538  0002F0  0E7C               	movlw	124
   539  0002F2  6EBA               	movwf	186,c	;volatile
   540  0002F4                     
   541                           ; BSR set to: 15
   542                           ;avr-main.c: 155:     IPR5bits.TMR4IP = 0;
   543  0002F4  907F               	bcf	127,0,c	;volatile
   544  0002F6                     
   545                           ; BSR set to: 15
   546                           ;avr-main.c: 156:     PR4 = 250 - 1;
   547  0002F6  0EF9               	movlw	249
   548  0002F8  6F52               	movwf	82,b	;volatile
   549  0002FA                     
   550                           ; BSR set to: 15
   551                           ;avr-main.c: 157:     T4CON = 0b01111100;
   552  0002FA  0E7C               	movlw	124
   553  0002FC  6F51               	movwf	81,b	;volatile
   554  0002FE                     
   555                           ; BSR set to: 15
   556                           ;avr-main.c: 160:     CCPTMRS0 = 0b00000000;
   557  0002FE  0E00               	movlw	0
   558  000300  6F49               	movwf	73,b	;volatile
   559  000302                     
   560                           ; BSR set to: 15
   561                           ;avr-main.c: 161:     CCPTMRS1 = 0b00000000;
   562  000302  0E00               	movlw	0
   563  000304  6F48               	movwf	72,b	;volatile
   564  000306                     
   565                           ; BSR set to: 15
   566                           ;avr-main.c: 164:     IPR2bits.CCP2IP = 1;
   567  000306  80A2               	bsf	162,0,c	;volatile
   568  000308                     
   569                           ; BSR set to: 15
   570                           ;avr-main.c: 165:     CCP2CON = 0b00000100;
   571  000308  0E04               	movlw	4
   572  00030A  6E66               	movwf	102,c	;volatile
   573  00030C                     
   574                           ; BSR set to: 15
   575                           ;avr-main.c: 168:     IPR4bits.CCP3IP = 0;
   576  00030C  907C               	bcf	124,0,c	;volatile
   577  00030E                     
   578                           ; BSR set to: 15
   579                           ;avr-main.c: 169:     CCP3CON = 0b00000100;
   580  00030E  0E04               	movlw	4
   581  000310  6F5D               	movwf	93,b	;volatile
   582  000312                     
   583                           ; BSR set to: 15
   584                           ;avr-main.c: 172:     IPR4bits.CCP5IP = 1;
   585  000312  847C               	bsf	124,2,c	;volatile
   586  000314                     
   587                           ; BSR set to: 15
   588                           ;avr-main.c: 173:     CCP5CON = 0b00000100;
   589  000314  0E04               	movlw	4
   590  000316  6F54               	movwf	84,b	;volatile
   591  000318                     
   592                           ; BSR set to: 15
   593                           ;avr-main.c: 176:     INTCON2bits.INTEDG0 = 0;
   594  000318  9CF1               	bcf	241,6,c	;volatile
   595  00031A                     
   596                           ; BSR set to: 15
   597                           ;avr-main.c: 180:     INTCON2bits.INTEDG2 = 0;
   598  00031A  98F1               	bcf	241,4,c	;volatile
   599  00031C                     
   600                           ; BSR set to: 15
   601                           ;avr-main.c: 181:     INTCON3bits.INT2IP = 1;
   602  00031C  8EF0               	bsf	240,7,c	;volatile
   603  00031E                     
   604                           ; BSR set to: 15
   605                           ;avr-main.c: 185:     static __bit externalSignal = 0;;avr-main.c: 186:     static __bit
      +                           cmdSwitch = 0;;avr-main.c: 189:     static __bit headLoad = 0;;avr-main.c: 190:     sta
      +                          tic __bit tg43 = 0;;avr-main.c: 191:     static uint_fast8_t bcd1 = 0;;avr-main.c: 192: 
      +                              static uint_fast8_t bcd2 = 0;;avr-main.c: 193:     static __bit dot1 = 0;;avr-main.c
      +                          : 194:     static __bit dot2 = 0;;avr-main.c: 197:     static uint_fast16_t cmdSwitchSta
      +                          rtCount = 0;;avr-main.c: 198:     static __bit cmdSwitchLast = 0;;avr-main.c: 199:     s
      +                          tatic __bit cmdSwitchShort = 0;
   606  00031E  0E00               	movlw	0
   607  000320  0100               	movlb	0	; () banked
   608  000322  6F77               	movwf	_driveParams_A& (0+255),b	;volatile
   609  000324                     
   610                           ; BSR set to: 0
   611                           ;avr-main.c: 214:     driveParams_A.maxTrack = 76;
   612  000324  0E4C               	movlw	76
   613  000326  6F78               	movwf	(_driveParams_A+1)& (0+255),b	;volatile
   614  000328                     
   615                           ; BSR set to: 0
   616                           ;avr-main.c: 215:     driveParams_A.speedDeviationPercentTenths = 0;
   617  000328  0E00               	movlw	0
   618  00032A  6F79               	movwf	(_driveParams_A+2)& (0+255),b	;volatile
   619  00032C                     
   620                           ; BSR set to: 0
   621                           ;avr-main.c: 216:     driveParams_A.headLoadMode = HL_FromMotorEnable;
   622  00032C  0E00               	movlw	0
   623  00032E  6F7A               	movwf	(_driveParams_A+3)& (0+255),b	;volatile
   624  000330                     
   625                           ; BSR set to: 0
   626                           ;avr-main.c: 217:     driveParams_A.tgXXMode = TG_UseThresholds;
   627  000330  0E00               	movlw	0
   628  000332  6F7B               	movwf	(_driveParams_A+4)& (0+255),b	;volatile
   629  000334                     
   630                           ; BSR set to: 0
   631                           ;avr-main.c: 218:     driveParams_A.tgWriteThreshold = 44;
   632  000334  0E2C               	movlw	44
   633  000336  6F7C               	movwf	(_driveParams_A+5)& (0+255),b	;volatile
   634  000338                     
   635                           ; BSR set to: 0
   636                           ;avr-main.c: 219:     driveParams_A.tgReadThreshold = 99;
   637  000338  0E63               	movlw	99
   638  00033A  6F7D               	movwf	(_driveParams_A+6)& (0+255),b	;volatile
   639  00033C                     
   640                           ; BSR set to: 0
   641                           ;avr-main.c: 220:     driveParams_B.track = 0;
   642  00033C  0E00               	movlw	0
   643  00033E  6F70               	movwf	_driveParams_B& (0+255),b	;volatile
   644  000340                     
   645                           ; BSR set to: 0
   646                           ;avr-main.c: 221:     driveParams_B.maxTrack = 76;
   647  000340  0E4C               	movlw	76
   648  000342  6F71               	movwf	(_driveParams_B+1)& (0+255),b	;volatile
   649  000344                     
   650                           ; BSR set to: 0
   651                           ;avr-main.c: 222:     driveParams_B.speedDeviationPercentTenths = 0;
   652  000344  0E00               	movlw	0
   653  000346  6F72               	movwf	(_driveParams_B+2)& (0+255),b	;volatile
   654  000348                     
   655                           ; BSR set to: 0
   656                           ;avr-main.c: 223:     driveParams_B.headLoadMode = HL_FromMotorEnable;
   657  000348  0E00               	movlw	0
   658  00034A  6F73               	movwf	(_driveParams_B+3)& (0+255),b	;volatile
   659  00034C                     
   660                           ; BSR set to: 0
   661                           ;avr-main.c: 224:     driveParams_B.tgXXMode = TG_UseThresholds;
   662  00034C  0E00               	movlw	0
   663  00034E  6F74               	movwf	(_driveParams_B+4)& (0+255),b	;volatile
   664  000350                     
   665                           ; BSR set to: 0
   666                           ;avr-main.c: 225:     driveParams_B.tgWriteThreshold = 44;
   667  000350  0E2C               	movlw	44
   668  000352  6F75               	movwf	(_driveParams_B+5)& (0+255),b	;volatile
   669  000354                     
   670                           ; BSR set to: 0
   671                           ;avr-main.c: 226:     driveParams_B.tgReadThreshold = 99;
   672  000354  0E63               	movlw	99
   673  000356  6F76               	movwf	(_driveParams_B+6)& (0+255),b	;volatile
   674  000358                     
   675                           ; BSR set to: 0
   676                           ;avr-main.c: 231:     eepromValue = EepromRead(eepromAddress++);
   677  000358  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   678  00035C  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   679  000360  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   680  000364  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   681  000368  ECC1  F00A         	call	_EepromRead	;wreg free
   682  00036C  0100               	movlb	0	; () banked
   683  00036E  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   684  000370                     
   685                           ; BSR set to: 0
   686  000370  0E01               	movlw	1
   687  000372  2760               	addwf	main@eepromAddress& (0+255),f,b
   688  000374  0E00               	movlw	0
   689  000376  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   690  000378  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   691  00037A  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   692  00037C                     
   693                           ; BSR set to: 0
   694                           ;avr-main.c: 232:     startDisplayMode = (enum DisplayMode)eepromValue;
   695  00037C  C08D  F08F         	movff	main@eepromValue,main@startDisplayMode	;volatile
   696  000380                     
   697                           ; BSR set to: 0
   698                           ;avr-main.c: 235:     eepromValue = EepromRead(eepromAddress++);
   699  000380  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   700  000384  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   701  000388  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   702  00038C  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   703  000390  ECC1  F00A         	call	_EepromRead	;wreg free
   704  000394  0100               	movlb	0	; () banked
   705  000396  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   706  000398                     
   707                           ; BSR set to: 0
   708  000398  0E01               	movlw	1
   709  00039A  2760               	addwf	main@eepromAddress& (0+255),f,b
   710  00039C  0E00               	movlw	0
   711  00039E  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   712  0003A0  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   713  0003A2  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   714  0003A4                     
   715                           ; BSR set to: 0
   716                           ;avr-main.c: 236:     driveParams_A.maxTrack = (int_fast8_t)eepromValue;
   717  0003A4  C08D  F078         	movff	main@eepromValue,_driveParams_A+1	;volatile
   718  0003A8                     
   719                           ; BSR set to: 0
   720                           ;avr-main.c: 238:     eepromValue = EepromRead(eepromAddress++);
   721  0003A8  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   722  0003AC  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   723  0003B0  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   724  0003B4  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   725  0003B8  ECC1  F00A         	call	_EepromRead	;wreg free
   726  0003BC  0100               	movlb	0	; () banked
   727  0003BE  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   728  0003C0                     
   729                           ; BSR set to: 0
   730  0003C0  0E01               	movlw	1
   731  0003C2  2760               	addwf	main@eepromAddress& (0+255),f,b
   732  0003C4  0E00               	movlw	0
   733  0003C6  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   734  0003C8  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   735  0003CA  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   736  0003CC                     
   737                           ; BSR set to: 0
   738                           ;avr-main.c: 239:     driveParams_A.tgXXMode = (enum TGXXMode)eepromValue;
   739  0003CC  C08D  F07B         	movff	main@eepromValue,_driveParams_A+4	;volatile
   740  0003D0                     
   741                           ; BSR set to: 0
   742                           ;avr-main.c: 241:     eepromValue = EepromRead(eepromAddress++);
   743  0003D0  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   744  0003D4  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   745  0003D8  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   746  0003DC  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   747  0003E0  ECC1  F00A         	call	_EepromRead	;wreg free
   748  0003E4  0100               	movlb	0	; () banked
   749  0003E6  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   750  0003E8                     
   751                           ; BSR set to: 0
   752  0003E8  0E01               	movlw	1
   753  0003EA  2760               	addwf	main@eepromAddress& (0+255),f,b
   754  0003EC  0E00               	movlw	0
   755  0003EE  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   756  0003F0  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   757  0003F2  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   758  0003F4                     
   759                           ; BSR set to: 0
   760                           ;avr-main.c: 242:     driveParams_A.headLoadMode = (enum HeadLoadMode)eepromValue;
   761  0003F4  C08D  F07A         	movff	main@eepromValue,_driveParams_A+3	;volatile
   762  0003F8                     
   763                           ; BSR set to: 0
   764                           ;avr-main.c: 244:     eepromValue = EepromRead(eepromAddress++);
   765  0003F8  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   766  0003FC  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   767  000400  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   768  000404  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   769  000408  ECC1  F00A         	call	_EepromRead	;wreg free
   770  00040C  0100               	movlb	0	; () banked
   771  00040E  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   772  000410                     
   773                           ; BSR set to: 0
   774  000410  0E01               	movlw	1
   775  000412  2760               	addwf	main@eepromAddress& (0+255),f,b
   776  000414  0E00               	movlw	0
   777  000416  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   778  000418  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   779  00041A  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   780  00041C                     
   781                           ; BSR set to: 0
   782                           ;avr-main.c: 245:     driveParams_A.tgWriteThreshold = (int_fast8_t)eepromValue;
   783  00041C  C08D  F07C         	movff	main@eepromValue,_driveParams_A+5	;volatile
   784  000420                     
   785                           ; BSR set to: 0
   786                           ;avr-main.c: 247:     eepromValue = EepromRead(eepromAddress++);
   787  000420  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   788  000424  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   789  000428  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   790  00042C  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   791  000430  ECC1  F00A         	call	_EepromRead	;wreg free
   792  000434  0100               	movlb	0	; () banked
   793  000436  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   794  000438                     
   795                           ; BSR set to: 0
   796  000438  0E01               	movlw	1
   797  00043A  2760               	addwf	main@eepromAddress& (0+255),f,b
   798  00043C  0E00               	movlw	0
   799  00043E  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   800  000440  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   801  000442  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   802  000444                     
   803                           ; BSR set to: 0
   804                           ;avr-main.c: 248:     driveParams_A.tgReadThreshold = (int_fast8_t)eepromValue;
   805  000444  C08D  F07D         	movff	main@eepromValue,_driveParams_A+6	;volatile
   806  000448                     
   807                           ; BSR set to: 0
   808                           ;avr-main.c: 251:     eepromValue = EepromRead(eepromAddress++);
   809  000448  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   810  00044C  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   811  000450  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   812  000454  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   813  000458  ECC1  F00A         	call	_EepromRead	;wreg free
   814  00045C  0100               	movlb	0	; () banked
   815  00045E  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   816  000460                     
   817                           ; BSR set to: 0
   818  000460  0E01               	movlw	1
   819  000462  2760               	addwf	main@eepromAddress& (0+255),f,b
   820  000464  0E00               	movlw	0
   821  000466  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   822  000468  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   823  00046A  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   824  00046C                     
   825                           ; BSR set to: 0
   826                           ;avr-main.c: 252:     driveParams_B.maxTrack = (int_fast8_t)eepromValue;
   827  00046C  C08D  F071         	movff	main@eepromValue,_driveParams_B+1	;volatile
   828  000470                     
   829                           ; BSR set to: 0
   830                           ;avr-main.c: 254:     eepromValue = EepromRead(eepromAddress++);
   831  000470  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   832  000474  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   833  000478  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   834  00047C  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   835  000480  ECC1  F00A         	call	_EepromRead	;wreg free
   836  000484  0100               	movlb	0	; () banked
   837  000486  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   838  000488                     
   839                           ; BSR set to: 0
   840  000488  0E01               	movlw	1
   841  00048A  2760               	addwf	main@eepromAddress& (0+255),f,b
   842  00048C  0E00               	movlw	0
   843  00048E  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   844  000490  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   845  000492  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   846  000494                     
   847                           ; BSR set to: 0
   848                           ;avr-main.c: 255:     driveParams_B.tgXXMode = (enum TGXXMode)eepromValue;
   849  000494  C08D  F074         	movff	main@eepromValue,_driveParams_B+4	;volatile
   850  000498                     
   851                           ; BSR set to: 0
   852                           ;avr-main.c: 257:     eepromValue = EepromRead(eepromAddress++);
   853  000498  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   854  00049C  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   855  0004A0  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   856  0004A4  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   857  0004A8  ECC1  F00A         	call	_EepromRead	;wreg free
   858  0004AC  0100               	movlb	0	; () banked
   859  0004AE  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   860  0004B0                     
   861                           ; BSR set to: 0
   862  0004B0  0E01               	movlw	1
   863  0004B2  2760               	addwf	main@eepromAddress& (0+255),f,b
   864  0004B4  0E00               	movlw	0
   865  0004B6  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   866  0004B8  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   867  0004BA  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   868  0004BC                     
   869                           ; BSR set to: 0
   870                           ;avr-main.c: 258:     driveParams_B.headLoadMode = (enum HeadLoadMode)eepromValue;
   871  0004BC  C08D  F073         	movff	main@eepromValue,_driveParams_B+3	;volatile
   872  0004C0                     
   873                           ; BSR set to: 0
   874                           ;avr-main.c: 260:     eepromValue = EepromRead(eepromAddress++);
   875  0004C0  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   876  0004C4  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   877  0004C8  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   878  0004CC  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   879  0004D0  ECC1  F00A         	call	_EepromRead	;wreg free
   880  0004D4  0100               	movlb	0	; () banked
   881  0004D6  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   882  0004D8                     
   883                           ; BSR set to: 0
   884  0004D8  0E01               	movlw	1
   885  0004DA  2760               	addwf	main@eepromAddress& (0+255),f,b
   886  0004DC  0E00               	movlw	0
   887  0004DE  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   888  0004E0  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   889  0004E2  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   890  0004E4                     
   891                           ; BSR set to: 0
   892                           ;avr-main.c: 261:     driveParams_B.tgWriteThreshold = (int_fast8_t)eepromValue;
   893  0004E4  C08D  F075         	movff	main@eepromValue,_driveParams_B+5	;volatile
   894  0004E8                     
   895                           ; BSR set to: 0
   896                           ;avr-main.c: 263:     eepromValue = EepromRead(eepromAddress++);
   897  0004E8  C060  F07E         	movff	main@eepromAddress,EepromRead@address
   898  0004EC  C061  F07F         	movff	main@eepromAddress+1,EepromRead@address+1
   899  0004F0  C062  F080         	movff	main@eepromAddress+2,EepromRead@address+2
   900  0004F4  C063  F081         	movff	main@eepromAddress+3,EepromRead@address+3
   901  0004F8  ECC1  F00A         	call	_EepromRead	;wreg free
   902  0004FC  0100               	movlb	0	; () banked
   903  0004FE  6F8D               	movwf	main@eepromValue& (0+255),b	;volatile
   904  000500                     
   905                           ; BSR set to: 0
   906  000500  0E01               	movlw	1
   907  000502  2760               	addwf	main@eepromAddress& (0+255),f,b
   908  000504  0E00               	movlw	0
   909  000506  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   910  000508  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   911  00050A  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   912  00050C                     
   913                           ; BSR set to: 0
   914                           ;avr-main.c: 264:     driveParams_B.tgReadThreshold = (int_fast8_t)eepromValue;
   915  00050C  C08D  F076         	movff	main@eepromValue,_driveParams_B+6	;volatile
   916  000510                     
   917                           ; BSR set to: 0
   918                           ;avr-main.c: 266:     displayMode = startDisplayMode;
   919  000510  C08F  F08E         	movff	main@startDisplayMode,main@displayMode
   920  000514                     
   921                           ; BSR set to: 0
   922                           ;avr-main.c: 268:     INTCONbits.PEIE = 1;
   923  000514  8CF2               	bsf	242,6,c	;volatile
   924  000516                     
   925                           ; BSR set to: 0
   926                           ;avr-main.c: 269:     INTCONbits.GIE = 1;
   927  000516  8EF2               	bsf	242,7,c	;volatile
   928  000518                     
   929                           ; BSR set to: 0
   930                           ;avr-main.c: 271:     PIE1bits.TMR2IE = 1;
   931  000518  829D               	bsf	157,1,c	;volatile
   932  00051A                     
   933                           ; BSR set to: 0
   934                           ;avr-main.c: 272:     PIE5bits.TMR4IE = 1;
   935  00051A  807D               	bsf	125,0,c	;volatile
   936  00051C                     
   937                           ; BSR set to: 0
   938                           ;avr-main.c: 274:     PIE2bits.CCP2IE = 1;
   939  00051C  80A0               	bsf	160,0,c	;volatile
   940  00051E                     
   941                           ; BSR set to: 0
   942                           ;avr-main.c: 275:     PIE4bits.CCP3IE = 1;
   943  00051E  807A               	bsf	122,0,c	;volatile
   944  000520                     
   945                           ; BSR set to: 0
   946                           ;avr-main.c: 276:     PIE4bits.CCP4IE = 1;
   947  000520  827A               	bsf	122,1,c	;volatile
   948  000522                     
   949                           ; BSR set to: 0
   950                           ;avr-main.c: 277:     PIE4bits.CCP5IE = 1;
   951  000522  847A               	bsf	122,2,c	;volatile
   952  000524                     
   953                           ; BSR set to: 0
   954                           ;avr-main.c: 279:     INTCONbits.INT0IE = 1;
   955  000524  88F2               	bsf	242,4,c	;volatile
   956  000526                     
   957                           ; BSR set to: 0
   958                           ;avr-main.c: 280:     INTCON3bits.INT2IE = 1;
   959  000526  88F0               	bsf	240,4,c	;volatile
   960  000528                     l2288:
   961                           
   962                           ; BSR set to: 0
   963                           ;avr-main.c: 283:     {;avr-main.c: 284:         if (!PORTBbits.RB0 || !PORTBbits.RB2)
   964  000528  A081               	btfss	129,0,c	;volatile
   965  00052A  EF99  F002         	goto	u1401
   966  00052E  EF9B  F002         	goto	u1400
   967  000532                     u1401:
   968  000532  EFA2  F002         	goto	l154
   969  000536                     u1400:
   970  000536                     
   971                           ; BSR set to: 0
   972  000536  B481               	btfsc	129,2,c	;volatile
   973  000538  EFA0  F002         	goto	u1411
   974  00053C  EFA2  F002         	goto	u1410
   975  000540                     u1411:
   976  000540  EF93  F003         	goto	l152
   977  000544                     u1410:
   978  000544                     l154:
   979                           
   980                           ; BSR set to: 0
   981                           ;avr-main.c: 285:         {;avr-main.c: 286:             externalSignal = PORTBbits.RB7;
   982  000544  BE81               	btfsc	129,7,c	;volatile
   983  000546  EFA7  F002         	goto	u1421
   984  00054A  EFAA  F002         	goto	u1420
   985  00054E                     u1421:
   986  00054E  8238               	bsf	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
   987  000550  EFAB  F002         	goto	u1435
   988  000554                     u1420:
   989  000554  9238               	bcf	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
   990  000556                     u1435:
   991                           
   992                           ;avr-main.c: 289:             {;avr-main.c: 290:                 switch (driveParams->tg
      +                          XXMode)
   993  000556  EFFB  F002         	goto	l2298
   994  00055A                     l156:
   995                           
   996                           ; BSR set to: 0
   997                           ;avr-main.c: 293:                     if(!PORTAbits.RA0)
   998  00055A  B080               	btfsc	128,0,c	;volatile
   999  00055C  EFB2  F002         	goto	u1441
  1000  000560  EFB4  F002         	goto	u1440
  1001  000564                     u1441:
  1002  000564  EFCF  F002         	goto	l2294
  1003  000568                     u1440:
  1004  000568                     
  1005                           ; BSR set to: 0
  1006                           ;avr-main.c: 294:                         tg43 = (driveParams->track >= driveParams->tgW
      +                          riteThreshold);
  1007  000568  EE20 F005          	lfsr	2,5
  1008  00056C  5190               	movf	_driveParams& (0+255),w,b
  1009  00056E  26D9               	addwf	fsr2l,f,c
  1010  000570  5191               	movf	(_driveParams+1)& (0+255),w,b
  1011  000572  22DA               	addwfc	fsr2h,f,c
  1012  000574  C090  FFE1         	movff	_driveParams,fsr1l
  1013  000578  C091  FFE2         	movff	_driveParams+1,fsr1h
  1014  00057C  50E6               	movf	postinc1,w,c
  1015  00057E  0A80               	xorlw	128
  1016  000580  6F88               	movwf	(??_main+2)& (0+255),b
  1017  000582  50DE               	movf	postinc2,w,c
  1018  000584  0A80               	xorlw	128
  1019  000586  5D88               	subwf	(??_main+2)& (0+255),w,b
  1020  000588  B0D8               	btfsc	status,0,c
  1021  00058A  EFC9  F002         	goto	u1451
  1022  00058E  EFCC  F002         	goto	u1450
  1023  000592                     u1451:
  1024  000592  8C37               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1025  000594  EFCD  F002         	goto	u1465
  1026  000598                     u1450:
  1027  000598  9C37               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1028  00059A                     u1465:
  1029  00059A  EF1F  F003         	goto	l2300
  1030  00059E                     l2294:
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;avr-main.c: 296:                         tg43 = (driveParams->track >= driveParams->tgR
      +                          eadThreshold);
  1034  00059E  EE20 F006          	lfsr	2,6
  1035  0005A2  5190               	movf	_driveParams& (0+255),w,b
  1036  0005A4  26D9               	addwf	fsr2l,f,c
  1037  0005A6  5191               	movf	(_driveParams+1)& (0+255),w,b
  1038  0005A8  22DA               	addwfc	fsr2h,f,c
  1039  0005AA  C090  FFE1         	movff	_driveParams,fsr1l
  1040  0005AE  C091  FFE2         	movff	_driveParams+1,fsr1h
  1041  0005B2  50E6               	movf	postinc1,w,c
  1042  0005B4  0A80               	xorlw	128
  1043  0005B6  6F88               	movwf	(??_main+2)& (0+255),b
  1044  0005B8  50DE               	movf	postinc2,w,c
  1045  0005BA  0A80               	xorlw	128
  1046  0005BC  5D88               	subwf	(??_main+2)& (0+255),w,b
  1047  0005BE  B0D8               	btfsc	status,0,c
  1048  0005C0  EFE4  F002         	goto	u1471
  1049  0005C4  EFE7  F002         	goto	u1470
  1050  0005C8                     u1471:
  1051  0005C8  8C37               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1052  0005CA  EFE8  F002         	goto	u1485
  1053  0005CE                     u1470:
  1054  0005CE  9C37               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1055  0005D0                     u1485:
  1056  0005D0  EF1F  F003         	goto	l2300
  1057  0005D4                     l160:
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;avr-main.c: 299:                     tg43 = 1;
  1061  0005D4  8C37               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1062                           
  1063                           ;avr-main.c: 300:                     break;
  1064  0005D6  EF1F  F003         	goto	l2300
  1065  0005DA                     l161:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;avr-main.c: 302:                     tg43 = 0;
  1069  0005DA  9C37               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1070                           
  1071                           ;avr-main.c: 303:                     break;
  1072  0005DC  EF1F  F003         	goto	l2300
  1073  0005E0                     l162:
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;avr-main.c: 305:                     tg43 = externalSignal;
  1077  0005E0  B238               	btfsc	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
  1078  0005E2  EFF5  F002         	goto	u1491
  1079  0005E6  EFF8  F002         	goto	u1490
  1080  0005EA                     u1491:
  1081  0005EA  8C37               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1082  0005EC  EFF9  F002         	goto	u1505
  1083  0005F0                     u1490:
  1084  0005F0  9C37               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1085  0005F2                     u1505:
  1086                           
  1087                           ;avr-main.c: 306:                     break;
  1088  0005F2  EF1F  F003         	goto	l2300
  1089  0005F6                     l2298:
  1090  0005F6  0100               	movlb	0	; () banked
  1091  0005F8  EE20 F004          	lfsr	2,4
  1092  0005FC  5190               	movf	_driveParams& (0+255),w,b
  1093  0005FE  26D9               	addwf	fsr2l,f,c
  1094  000600  5191               	movf	(_driveParams+1)& (0+255),w,b
  1095  000602  22DA               	addwfc	fsr2h,f,c
  1096  000604  50DF               	movf	indf2,w,c
  1097  000606  6F86               	movwf	??_main& (0+255),b
  1098  000608  6B87               	clrf	(??_main+1)& (0+255),b
  1099                           
  1100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 1, Range of values is 0 to 0
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte            4     3 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107  00060A  5187               	movf	(??_main+1)& (0+255),w,b
  1108  00060C  0A00               	xorlw	0	; case 0
  1109  00060E  B4D8               	btfsc	status,2,c
  1110  000610  EF0C  F003         	goto	l2828
  1111  000614  EF1F  F003         	goto	l2300
  1112  000618                     l2828:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 4, Range of values is 0 to 3
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte           13     7 (average)
  1120                           ;	Chosen strategy is simple_byte
  1121  000618  5186               	movf	??_main& (0+255),w,b
  1122  00061A  0A00               	xorlw	0	; case 0
  1123  00061C  B4D8               	btfsc	status,2,c
  1124  00061E  EFAD  F002         	goto	l156
  1125  000622  0A01               	xorlw	1	; case 1
  1126  000624  B4D8               	btfsc	status,2,c
  1127  000626  EFEA  F002         	goto	l160
  1128  00062A  0A03               	xorlw	3	; case 2
  1129  00062C  B4D8               	btfsc	status,2,c
  1130  00062E  EFED  F002         	goto	l161
  1131  000632  0A01               	xorlw	1	; case 3
  1132  000634  B4D8               	btfsc	status,2,c
  1133  000636  EFF0  F002         	goto	l162
  1134  00063A  EF1F  F003         	goto	l2300
  1135  00063E                     l2300:
  1136                           
  1137                           ;avr-main.c: 308:                 PORTAbits.RA5 = !tg43;
  1138  00063E  AC37               	btfss	(main@tg43/(0+8))^0,main@tg43& (0+7),c
  1139  000640  EF24  F003         	goto	u1511
  1140  000644  EF29  F003         	goto	u1510
  1141  000648                     u1511:
  1142  000648  0100               	movlb	0	; () banked
  1143  00064A  6B86               	clrf	??_main& (0+255),b
  1144  00064C  2B86               	incf	??_main& (0+255),f,b
  1145  00064E  EF2B  F003         	goto	u1528
  1146  000652                     u1510:
  1147  000652  0100               	movlb	0	; () banked
  1148  000654  6B86               	clrf	??_main& (0+255),b
  1149  000656                     u1528:
  1150  000656  3B86               	swapf	??_main& (0+255),f,b
  1151  000658  4786               	rlncf	??_main& (0+255),f,b
  1152  00065A  5080               	movf	128,w,c	;volatile
  1153  00065C  1986               	xorwf	??_main& (0+255),w,b
  1154  00065E  0BDF               	andlw	-33
  1155  000660  1986               	xorwf	??_main& (0+255),w,b
  1156  000662  6E80               	movwf	128,c	;volatile
  1157                           
  1158                           ;avr-main.c: 309:             };avr-main.c: 312:             {;avr-main.c: 313:         
      +                                  switch (driveParams->headLoadMode)
  1159  000664  EF5A  F003         	goto	l2306
  1160  000668                     l164:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;avr-main.c: 316:                     if(!PORTBbits.RB0)
  1164  000668  B081               	btfsc	129,0,c	;volatile
  1165  00066A  EF39  F003         	goto	u1531
  1166  00066E  EF3B  F003         	goto	u1530
  1167  000672                     u1531:
  1168  000672  EF42  F003         	goto	l165
  1169  000676                     u1530:
  1170  000676                     
  1171                           ; BSR set to: 0
  1172                           ;avr-main.c: 317:                         headLoad = !PORTBbits.RB1;
  1173  000676  8E37               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1174  000678  A281               	btfss	129,1,c	;volatile
  1175  00067A  EF40  F003         	goto	u1545
  1176  00067E  9E37               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1177  000680                     u1545:
  1178  000680  EF7D  F003         	goto	l2308
  1179  000684                     l165:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;avr-main.c: 319:                         headLoad = !PORTAbits.RA2;
  1183  000684  8E37               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1184  000686  A480               	btfss	128,2,c	;volatile
  1185  000688  EF47  F003         	goto	u1555
  1186  00068C  9E37               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1187  00068E                     u1555:
  1188  00068E  EF7D  F003         	goto	l2308
  1189  000692                     l168:
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;avr-main.c: 322:                     headLoad = 1;
  1193  000692  8E37               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1194                           
  1195                           ;avr-main.c: 323:                     break;
  1196  000694  EF7D  F003         	goto	l2308
  1197  000698                     l169:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;avr-main.c: 325:                     headLoad = 0;
  1201  000698  9E37               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1202                           
  1203                           ;avr-main.c: 326:                     break;
  1204  00069A  EF7D  F003         	goto	l2308
  1205  00069E                     l170:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;avr-main.c: 328:                     headLoad = externalSignal;
  1209  00069E  B238               	btfsc	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
  1210  0006A0  EF54  F003         	goto	u1561
  1211  0006A4  EF57  F003         	goto	u1560
  1212  0006A8                     u1561:
  1213  0006A8  8E37               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1214  0006AA  EF58  F003         	goto	u1575
  1215  0006AE                     u1560:
  1216  0006AE  9E37               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1217  0006B0                     u1575:
  1218                           
  1219                           ;avr-main.c: 329:                     break;
  1220  0006B0  EF7D  F003         	goto	l2308
  1221  0006B4                     l2306:
  1222                           
  1223                           ; BSR set to: 0
  1224  0006B4  EE20 F003          	lfsr	2,3
  1225  0006B8  5190               	movf	_driveParams& (0+255),w,b
  1226  0006BA  26D9               	addwf	fsr2l,f,c
  1227  0006BC  5191               	movf	(_driveParams+1)& (0+255),w,b
  1228  0006BE  22DA               	addwfc	fsr2h,f,c
  1229  0006C0  50DF               	movf	indf2,w,c
  1230  0006C2  6F86               	movwf	??_main& (0+255),b
  1231  0006C4  6B87               	clrf	(??_main+1)& (0+255),b
  1232                           
  1233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1234                           ; Switch size 1, requested type "simple"
  1235                           ; Number of cases is 1, Range of values is 0 to 0
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte            4     3 (average)
  1239                           ;	Chosen strategy is simple_byte
  1240  0006C6  5187               	movf	(??_main+1)& (0+255),w,b
  1241  0006C8  0A00               	xorlw	0	; case 0
  1242  0006CA  B4D8               	btfsc	status,2,c
  1243  0006CC  EF6A  F003         	goto	l2830
  1244  0006D0  EF7D  F003         	goto	l2308
  1245  0006D4                     l2830:
  1246                           
  1247                           ; BSR set to: 0
  1248                           ; Switch size 1, requested type "simple"
  1249                           ; Number of cases is 4, Range of values is 0 to 3
  1250                           ; switch strategies available:
  1251                           ; Name         Instructions Cycles
  1252                           ; simple_byte           13     7 (average)
  1253                           ;	Chosen strategy is simple_byte
  1254  0006D4  5186               	movf	??_main& (0+255),w,b
  1255  0006D6  0A00               	xorlw	0	; case 0
  1256  0006D8  B4D8               	btfsc	status,2,c
  1257  0006DA  EF34  F003         	goto	l164
  1258  0006DE  0A01               	xorlw	1	; case 1
  1259  0006E0  B4D8               	btfsc	status,2,c
  1260  0006E2  EF49  F003         	goto	l168
  1261  0006E6  0A03               	xorlw	3	; case 2
  1262  0006E8  B4D8               	btfsc	status,2,c
  1263  0006EA  EF4C  F003         	goto	l169
  1264  0006EE  0A01               	xorlw	1	; case 3
  1265  0006F0  B4D8               	btfsc	status,2,c
  1266  0006F2  EF4F  F003         	goto	l170
  1267  0006F6  EF7D  F003         	goto	l2308
  1268  0006FA                     l2308:
  1269                           
  1270                           ;avr-main.c: 331:                 PORTAbits.RA7 = !headLoad;
  1271  0006FA  AE37               	btfss	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1272  0006FC  EF82  F003         	goto	u1581
  1273  000700  EF87  F003         	goto	u1580
  1274  000704                     u1581:
  1275  000704  0100               	movlb	0	; () banked
  1276  000706  6B86               	clrf	??_main& (0+255),b
  1277  000708  2B86               	incf	??_main& (0+255),f,b
  1278  00070A  EF89  F003         	goto	u1598
  1279  00070E                     u1580:
  1280  00070E  0100               	movlb	0	; () banked
  1281  000710  6B86               	clrf	??_main& (0+255),b
  1282  000712                     u1598:
  1283  000712  3386               	rrcf	??_main& (0+255),f,b
  1284  000714  3386               	rrcf	??_main& (0+255),f,b
  1285  000716  5080               	movf	128,w,c	;volatile
  1286  000718  1986               	xorwf	??_main& (0+255),w,b
  1287  00071A  0B7F               	andlw	-129
  1288  00071C  1986               	xorwf	??_main& (0+255),w,b
  1289  00071E  6E80               	movwf	128,c	;volatile
  1290  000720                     
  1291                           ; BSR set to: 0
  1292                           ;avr-main.c: 332:             };avr-main.c: 334:             PORTAbits.RA6 = 1;
  1293  000720  8C80               	bsf	128,6,c	;volatile
  1294                           
  1295                           ;avr-main.c: 335:         }
  1296  000722  EF49  F006         	goto	l2496
  1297  000726                     l152:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;avr-main.c: 337:         {;avr-main.c: 338:             PORTAbits.RA6 = 0;
  1301  000726  9C80               	bcf	128,6,c	;volatile
  1302                           
  1303                           ;avr-main.c: 340:             PORTAbits.RA7 = 1;
  1304  000728  8E80               	bsf	128,7,c	;volatile
  1305                           
  1306                           ;avr-main.c: 341:             PORTAbits.RA5 = 1;
  1307  00072A  8A80               	bsf	128,5,c	;volatile
  1308                           
  1309                           ;avr-main.c: 344:             {;avr-main.c: 345:                 cmdSwitch = PORTBbits.R
      +                          B6;
  1310  00072C  BC81               	btfsc	129,6,c	;volatile
  1311  00072E  EF9B  F003         	goto	u1601
  1312  000732  EF9E  F003         	goto	u1600
  1313  000736                     u1601:
  1314  000736  8038               	bsf	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1315  000738  EF9F  F003         	goto	u1615
  1316  00073C                     u1600:
  1317  00073C  9038               	bcf	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1318  00073E                     u1615:
  1319                           
  1320                           ;avr-main.c: 347:                 if (cmdSwitch)
  1321  00073E  A038               	btfss	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1322  000740  EFA4  F003         	goto	u1621
  1323  000744  EFA6  F003         	goto	u1620
  1324  000748                     u1621:
  1325  000748  EFF5  F003         	goto	l172
  1326  00074C                     u1620:
  1327  00074C                     
  1328                           ;avr-main.c: 348:                 {;avr-main.c: 349:                     if (!cmdSwitchL
      +                          ast)
  1329  00074C  B637               	btfsc	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1330  00074E  EFAB  F003         	goto	u1631
  1331  000752  EFAD  F003         	goto	u1630
  1332  000756                     u1631:
  1333  000756  EFB8  F003         	goto	l173
  1334  00075A                     u1630:
  1335  00075A                     
  1336                           ;avr-main.c: 350:                     {;avr-main.c: 351:                         cmdSwit
      +                          chStartCount = counter1000Hz;
  1337  00075A  C068  F064         	movff	_counter1000Hz,main@cmdSwitchStartCount	;volatile
  1338  00075E  C069  F065         	movff	_counter1000Hz+1,main@cmdSwitchStartCount+1	;volatile
  1339  000762  C06A  F066         	movff	_counter1000Hz+2,main@cmdSwitchStartCount+2	;volatile
  1340  000766  C06B  F067         	movff	_counter1000Hz+3,main@cmdSwitchStartCount+3	;volatile
  1341                           
  1342                           ;avr-main.c: 353:                         cmdSwitchLast = 1;
  1343  00076A  8637               	bsf	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1344                           
  1345                           ;avr-main.c: 354:                     }
  1346  00076C  EFF5  F003         	goto	l172
  1347  000770                     l173:
  1348                           
  1349                           ;avr-main.c: 356:                     {;avr-main.c: 357:                         if(!cmd
      +                          SwitchLong)
  1350  000770  B237               	btfsc	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1351  000772  EFBD  F003         	goto	u1641
  1352  000776  EFBF  F003         	goto	u1640
  1353  00077A                     u1641:
  1354  00077A  EFF5  F003         	goto	l172
  1355  00077E                     u1640:
  1356  00077E                     
  1357                           ;avr-main.c: 358:                         {;avr-main.c: 359:                            
      +                           uint_fast16_t counts = counter1000Hz - cmdSwitchStartCount;
  1358  00077E  0100               	movlb	0	; () banked
  1359  000780  5164               	movf	main@cmdSwitchStartCount& (0+255),w,b
  1360  000782  5D68               	subwf	_counter1000Hz& (0+255),w,b	;volatile
  1361  000784  6F89               	movwf	main@counts& (0+255),b
  1362  000786  5165               	movf	(main@cmdSwitchStartCount+1)& (0+255),w,b
  1363  000788  5969               	subwfb	(_counter1000Hz+1)& (0+255),w,b	;volatile
  1364  00078A  6F8A               	movwf	(main@counts+1)& (0+255),b
  1365  00078C  5166               	movf	(main@cmdSwitchStartCount+2)& (0+255),w,b
  1366  00078E  596A               	subwfb	(_counter1000Hz+2)& (0+255),w,b	;volatile
  1367  000790  6F8B               	movwf	(main@counts+2)& (0+255),b
  1368  000792  5167               	movf	(main@cmdSwitchStartCount+3)& (0+255),w,b
  1369  000794  596B               	subwfb	(_counter1000Hz+3)& (0+255),w,b	;volatile
  1370  000796  6F8C               	movwf	(main@counts+3)& (0+255),b
  1371                           
  1372                           ;avr-main.c: 360:                             if(counts >= 2000)
  1373  000798  518C               	movf	(main@counts+3)& (0+255),w,b
  1374  00079A  118B               	iorwf	(main@counts+2)& (0+255),w,b
  1375  00079C  E10B               	bnz	u1650
  1376  00079E  0ED0               	movlw	208
  1377  0007A0  5D89               	subwf	main@counts& (0+255),w,b
  1378  0007A2  0E07               	movlw	7
  1379  0007A4  598A               	subwfb	(main@counts+1)& (0+255),w,b
  1380  0007A6  A0D8               	btfss	status,0,c
  1381  0007A8  EFD8  F003         	goto	u1651
  1382  0007AC  EFDA  F003         	goto	u1650
  1383  0007B0                     u1651:
  1384  0007B0  EFDE  F003         	goto	l176
  1385  0007B4                     u1650:
  1386  0007B4                     
  1387                           ; BSR set to: 0
  1388                           ;avr-main.c: 361:                             {;avr-main.c: 362:                        
      +                                   cmdSwitchShort = 0;
  1389  0007B4  9437               	bcf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1390                           
  1391                           ;avr-main.c: 363:                                 cmdSwitchLong = 1;
  1392  0007B6  8237               	bsf	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1393                           
  1394                           ;avr-main.c: 364:                             }
  1395  0007B8  EFF5  F003         	goto	l172
  1396  0007BC                     l176:
  1397                           
  1398                           ; BSR set to: 0
  1399  0007BC  B437               	btfsc	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1400  0007BE  EFE3  F003         	goto	u1661
  1401  0007C2  EFE5  F003         	goto	u1660
  1402  0007C6                     u1661:
  1403  0007C6  EFF5  F003         	goto	l175
  1404  0007CA                     u1660:
  1405  0007CA                     
  1406                           ; BSR set to: 0
  1407  0007CA  518C               	movf	(main@counts+3)& (0+255),w,b
  1408  0007CC  118B               	iorwf	(main@counts+2)& (0+255),w,b
  1409  0007CE  118A               	iorwf	(main@counts+1)& (0+255),w,b
  1410  0007D0  E109               	bnz	u1670
  1411  0007D2  0E19               	movlw	25
  1412  0007D4  5D89               	subwf	main@counts& (0+255),w,b
  1413  0007D6  A0D8               	btfss	status,0,c
  1414  0007D8  EFF0  F003         	goto	u1671
  1415  0007DC  EFF2  F003         	goto	u1670
  1416  0007E0                     u1671:
  1417  0007E0  EFF5  F003         	goto	l175
  1418  0007E4                     u1670:
  1419  0007E4                     
  1420                           ; BSR set to: 0
  1421                           ;avr-main.c: 366:                             {;avr-main.c: 367:                        
      +                                   cmdSwitchShort = 1;
  1422  0007E4  8437               	bsf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1423  0007E6  EFF5  F003         	goto	l172
  1424  0007EA                     l175:
  1425  0007EA                     l172:
  1426                           
  1427                           ;avr-main.c: 372:             };avr-main.c: 375:             {;avr-main.c: 376:         
      +                                  if (!cmdSwitch && cmdSwitchLast)
  1428  0007EA  B038               	btfsc	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1429  0007EC  EFFA  F003         	goto	u1681
  1430  0007F0  EFFC  F003         	goto	u1680
  1431  0007F4                     u1681:
  1432  0007F4  EF49  F006         	goto	l2496
  1433  0007F8                     u1680:
  1434  0007F8  A637               	btfss	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1435  0007FA  EF01  F004         	goto	u1691
  1436  0007FE  EF03  F004         	goto	u1690
  1437  000802                     u1691:
  1438  000802  EF49  F006         	goto	l2496
  1439  000806                     u1690:
  1440  000806                     
  1441                           ;avr-main.c: 377:                 {;avr-main.c: 378:                     if (cmdSwitchLo
      +                          ng)
  1442  000806  A237               	btfss	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1443  000808  EF08  F004         	goto	u1701
  1444  00080C  EF0A  F004         	goto	u1700
  1445  000810                     u1701:
  1446  000810  EF27  F005         	goto	l180
  1447  000814                     u1700:
  1448  000814                     
  1449                           ;avr-main.c: 379:                     {;avr-main.c: 380:                         if (men
      +                          uMode == M_Hidden)
  1450  000814  0100               	movlb	0	; () banked
  1451  000816  516C               	movf	main@menuMode& (0+255),w,b
  1452  000818  A4D8               	btfss	status,2,c
  1453  00081A  EF11  F004         	goto	u1711
  1454  00081E  EF13  F004         	goto	u1710
  1455  000822                     u1711:
  1456  000822  EF17  F004         	goto	l2332
  1457  000826                     u1710:
  1458  000826                     
  1459                           ; BSR set to: 0
  1460                           ;avr-main.c: 381:                         {;avr-main.c: 382:                            
      +                           menuMode = M_Display;
  1461  000826  0E01               	movlw	1
  1462  000828  6F6C               	movwf	main@menuMode& (0+255),b
  1463                           
  1464                           ;avr-main.c: 383:                         }
  1465  00082A  EF24  F005         	goto	l2404
  1466  00082E                     l2332:
  1467                           
  1468                           ; BSR set to: 0
  1469  00082E  0E0C               	movlw	12
  1470  000830  196C               	xorwf	main@menuMode& (0+255),w,b
  1471  000832  A4D8               	btfss	status,2,c
  1472  000834  EF1E  F004         	goto	u1721
  1473  000838  EF20  F004         	goto	u1720
  1474  00083C                     u1721:
  1475  00083C  EF24  F004         	goto	l183
  1476  000840                     u1720:
  1477  000840                     
  1478                           ; BSR set to: 0
  1479                           ;avr-main.c: 385:                         {;avr-main.c: 386:                            
      +                           menuMode = M_Hidden;
  1480  000840  0E00               	movlw	0
  1481  000842  6F6C               	movwf	main@menuMode& (0+255),b
  1482                           
  1483                           ;avr-main.c: 387:                         }
  1484  000844  EF24  F005         	goto	l2404
  1485  000848                     l183:
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;avr-main.c: 389:                         {;avr-main.c: 390:                            
      +                           menuEdit = !menuEdit;
  1489  000848  A037               	btfss	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1490  00084A  EF29  F004         	goto	u1731
  1491  00084E  EF2C  F004         	goto	u1730
  1492  000852                     u1731:
  1493  000852  8037               	bsf	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1494  000854  EF2D  F004         	goto	u1745
  1495  000858                     u1730:
  1496  000858  9037               	bcf	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1497  00085A                     u1745:
  1498                           
  1499                           ;avr-main.c: 392:                             if(!menuEdit)
  1500  00085A  B037               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1501  00085C  EF32  F004         	goto	u1751
  1502  000860  EF34  F004         	goto	u1750
  1503  000864                     u1751:
  1504  000864  EF24  F005         	goto	l2404
  1505  000868                     u1750:
  1506  000868                     
  1507                           ;avr-main.c: 393:                             {;avr-main.c: 396:                        
      +                                   eepromAddress = 0x00;
  1508  000868  0E00               	movlw	0
  1509  00086A  0100               	movlb	0	; () banked
  1510  00086C  6F60               	movwf	main@eepromAddress& (0+255),b
  1511  00086E  0E00               	movlw	0
  1512  000870  6F61               	movwf	(main@eepromAddress+1)& (0+255),b
  1513  000872  0E00               	movlw	0
  1514  000874  6F62               	movwf	(main@eepromAddress+2)& (0+255),b
  1515  000876  0E00               	movlw	0
  1516  000878  6F63               	movwf	(main@eepromAddress+3)& (0+255),b
  1517  00087A                     
  1518                           ; BSR set to: 0
  1519                           ;avr-main.c: 398:                                 eepromValue = (uint_fast8_t)startDispl
      +                          ayMode;
  1520  00087A  C08F  F08D         	movff	main@startDisplayMode,main@eepromValue	;volatile
  1521  00087E                     
  1522                           ; BSR set to: 0
  1523                           ;avr-main.c: 399:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1524  00087E  0E00               	movlw	0
  1525  000880  6F7E               	movwf	EepromWrite@address& (0+255),b
  1526  000882  0E00               	movlw	0
  1527  000884  6F7F               	movwf	(EepromWrite@address+1)& (0+255),b
  1528  000886  0E00               	movlw	0
  1529  000888  6F80               	movwf	(EepromWrite@address+2)& (0+255),b
  1530  00088A  0E00               	movlw	0
  1531  00088C  6F81               	movwf	(EepromWrite@address+3)& (0+255),b
  1532  00088E  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1533  000892  ECA8  F00A         	call	_EepromWrite	;wreg free
  1534  000896  0E01               	movlw	1
  1535  000898  0100               	movlb	0	; () banked
  1536  00089A  2760               	addwf	main@eepromAddress& (0+255),f,b
  1537  00089C  0E00               	movlw	0
  1538  00089E  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1539  0008A0  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1540  0008A2  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1541  0008A4                     
  1542                           ; BSR set to: 0
  1543                           ;avr-main.c: 401:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_A.maxTrack;
  1544  0008A4  C078  F08D         	movff	_driveParams_A+1,main@eepromValue	;volatile
  1545  0008A8                     
  1546                           ; BSR set to: 0
  1547                           ;avr-main.c: 402:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1548  0008A8  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1549  0008AC  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1550  0008B0  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1551  0008B4  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1552  0008B8  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1553  0008BC  ECA8  F00A         	call	_EepromWrite	;wreg free
  1554  0008C0  0E01               	movlw	1
  1555  0008C2  0100               	movlb	0	; () banked
  1556  0008C4  2760               	addwf	main@eepromAddress& (0+255),f,b
  1557  0008C6  0E00               	movlw	0
  1558  0008C8  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1559  0008CA  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1560  0008CC  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1561  0008CE                     
  1562                           ; BSR set to: 0
  1563                           ;avr-main.c: 404:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_A.tgXXMode;
  1564  0008CE  C07B  F08D         	movff	_driveParams_A+4,main@eepromValue	;volatile
  1565  0008D2                     
  1566                           ; BSR set to: 0
  1567                           ;avr-main.c: 405:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1568  0008D2  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1569  0008D6  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1570  0008DA  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1571  0008DE  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1572  0008E2  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1573  0008E6  ECA8  F00A         	call	_EepromWrite	;wreg free
  1574  0008EA  0E01               	movlw	1
  1575  0008EC  0100               	movlb	0	; () banked
  1576  0008EE  2760               	addwf	main@eepromAddress& (0+255),f,b
  1577  0008F0  0E00               	movlw	0
  1578  0008F2  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1579  0008F4  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1580  0008F6  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1581  0008F8                     
  1582                           ; BSR set to: 0
  1583                           ;avr-main.c: 407:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_A.headLoadMode;
  1584  0008F8  C07A  F08D         	movff	_driveParams_A+3,main@eepromValue	;volatile
  1585  0008FC                     
  1586                           ; BSR set to: 0
  1587                           ;avr-main.c: 408:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1588  0008FC  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1589  000900  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1590  000904  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1591  000908  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1592  00090C  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1593  000910  ECA8  F00A         	call	_EepromWrite	;wreg free
  1594  000914  0E01               	movlw	1
  1595  000916  0100               	movlb	0	; () banked
  1596  000918  2760               	addwf	main@eepromAddress& (0+255),f,b
  1597  00091A  0E00               	movlw	0
  1598  00091C  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1599  00091E  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1600  000920  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1601  000922                     
  1602                           ; BSR set to: 0
  1603                           ;avr-main.c: 410:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_A.tgWriteThreshold;
  1604  000922  C07C  F08D         	movff	_driveParams_A+5,main@eepromValue	;volatile
  1605  000926                     
  1606                           ; BSR set to: 0
  1607                           ;avr-main.c: 411:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1608  000926  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1609  00092A  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1610  00092E  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1611  000932  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1612  000936  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1613  00093A  ECA8  F00A         	call	_EepromWrite	;wreg free
  1614  00093E  0E01               	movlw	1
  1615  000940  0100               	movlb	0	; () banked
  1616  000942  2760               	addwf	main@eepromAddress& (0+255),f,b
  1617  000944  0E00               	movlw	0
  1618  000946  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1619  000948  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1620  00094A  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1621  00094C                     
  1622                           ; BSR set to: 0
  1623                           ;avr-main.c: 413:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_A.tgReadThreshold;
  1624  00094C  C07D  F08D         	movff	_driveParams_A+6,main@eepromValue	;volatile
  1625  000950                     
  1626                           ; BSR set to: 0
  1627                           ;avr-main.c: 414:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1628  000950  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1629  000954  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1630  000958  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1631  00095C  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1632  000960  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1633  000964  ECA8  F00A         	call	_EepromWrite	;wreg free
  1634  000968  0E01               	movlw	1
  1635  00096A  0100               	movlb	0	; () banked
  1636  00096C  2760               	addwf	main@eepromAddress& (0+255),f,b
  1637  00096E  0E00               	movlw	0
  1638  000970  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1639  000972  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1640  000974  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1641  000976                     
  1642                           ; BSR set to: 0
  1643                           ;avr-main.c: 416:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_B.maxTrack;
  1644  000976  C071  F08D         	movff	_driveParams_B+1,main@eepromValue	;volatile
  1645  00097A                     
  1646                           ; BSR set to: 0
  1647                           ;avr-main.c: 417:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1648  00097A  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1649  00097E  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1650  000982  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1651  000986  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1652  00098A  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1653  00098E  ECA8  F00A         	call	_EepromWrite	;wreg free
  1654  000992  0E01               	movlw	1
  1655  000994  0100               	movlb	0	; () banked
  1656  000996  2760               	addwf	main@eepromAddress& (0+255),f,b
  1657  000998  0E00               	movlw	0
  1658  00099A  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1659  00099C  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1660  00099E  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1661  0009A0                     
  1662                           ; BSR set to: 0
  1663                           ;avr-main.c: 419:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_B.tgXXMode;
  1664  0009A0  C074  F08D         	movff	_driveParams_B+4,main@eepromValue	;volatile
  1665  0009A4                     
  1666                           ; BSR set to: 0
  1667                           ;avr-main.c: 420:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1668  0009A4  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1669  0009A8  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1670  0009AC  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1671  0009B0  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1672  0009B4  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1673  0009B8  ECA8  F00A         	call	_EepromWrite	;wreg free
  1674  0009BC  0E01               	movlw	1
  1675  0009BE  0100               	movlb	0	; () banked
  1676  0009C0  2760               	addwf	main@eepromAddress& (0+255),f,b
  1677  0009C2  0E00               	movlw	0
  1678  0009C4  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1679  0009C6  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1680  0009C8  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1681  0009CA                     
  1682                           ; BSR set to: 0
  1683                           ;avr-main.c: 422:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_B.headLoadMode;
  1684  0009CA  C073  F08D         	movff	_driveParams_B+3,main@eepromValue	;volatile
  1685  0009CE                     
  1686                           ; BSR set to: 0
  1687                           ;avr-main.c: 423:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1688  0009CE  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1689  0009D2  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1690  0009D6  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1691  0009DA  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1692  0009DE  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1693  0009E2  ECA8  F00A         	call	_EepromWrite	;wreg free
  1694  0009E6  0E01               	movlw	1
  1695  0009E8  0100               	movlb	0	; () banked
  1696  0009EA  2760               	addwf	main@eepromAddress& (0+255),f,b
  1697  0009EC  0E00               	movlw	0
  1698  0009EE  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1699  0009F0  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1700  0009F2  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1701  0009F4                     
  1702                           ; BSR set to: 0
  1703                           ;avr-main.c: 425:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_B.tgWriteThreshold;
  1704  0009F4  C075  F08D         	movff	_driveParams_B+5,main@eepromValue	;volatile
  1705  0009F8                     
  1706                           ; BSR set to: 0
  1707                           ;avr-main.c: 426:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1708  0009F8  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1709  0009FC  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1710  000A00  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1711  000A04  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1712  000A08  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1713  000A0C  ECA8  F00A         	call	_EepromWrite	;wreg free
  1714  000A10  0E01               	movlw	1
  1715  000A12  0100               	movlb	0	; () banked
  1716  000A14  2760               	addwf	main@eepromAddress& (0+255),f,b
  1717  000A16  0E00               	movlw	0
  1718  000A18  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1719  000A1A  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1720  000A1C  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1721  000A1E                     
  1722                           ; BSR set to: 0
  1723                           ;avr-main.c: 428:                                 eepromValue = (uint_fast8_t)driveParam
      +                          s_B.tgReadThreshold;
  1724  000A1E  C076  F08D         	movff	_driveParams_B+6,main@eepromValue	;volatile
  1725  000A22                     
  1726                           ; BSR set to: 0
  1727                           ;avr-main.c: 429:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1728  000A22  C060  F07E         	movff	main@eepromAddress,EepromWrite@address
  1729  000A26  C061  F07F         	movff	main@eepromAddress+1,EepromWrite@address+1
  1730  000A2A  C062  F080         	movff	main@eepromAddress+2,EepromWrite@address+2
  1731  000A2E  C063  F081         	movff	main@eepromAddress+3,EepromWrite@address+3
  1732  000A32  C08D  F082         	movff	main@eepromValue,EepromWrite@data	;volatile
  1733  000A36  ECA8  F00A         	call	_EepromWrite	;wreg free
  1734  000A3A  0E01               	movlw	1
  1735  000A3C  0100               	movlb	0	; () banked
  1736  000A3E  2760               	addwf	main@eepromAddress& (0+255),f,b
  1737  000A40  0E00               	movlw	0
  1738  000A42  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1739  000A44  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1740  000A46  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1741  000A48                     l2404:
  1742                           
  1743                           ;avr-main.c: 433:                         cmdSwitchLong = 0;
  1744  000A48  9237               	bcf	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1745                           
  1746                           ;avr-main.c: 434:                     }
  1747  000A4A  EF48  F006         	goto	l2494
  1748  000A4E                     l180:
  1749  000A4E  A437               	btfss	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1750  000A50  EF2C  F005         	goto	u1761
  1751  000A54  EF2E  F005         	goto	u1760
  1752  000A58                     u1761:
  1753  000A58  EF48  F006         	goto	l2494
  1754  000A5C                     u1760:
  1755  000A5C                     
  1756                           ;avr-main.c: 436:                     {;avr-main.c: 437:                         if (men
      +                          uMode != M_Hidden)
  1757  000A5C  0100               	movlb	0	; () banked
  1758  000A5E  516C               	movf	main@menuMode& (0+255),w,b
  1759  000A60  B4D8               	btfsc	status,2,c
  1760  000A62  EF35  F005         	goto	u1771
  1761  000A66  EF37  F005         	goto	u1770
  1762  000A6A                     u1771:
  1763  000A6A  EF39  F006         	goto	l2486
  1764  000A6E                     u1770:
  1765  000A6E                     
  1766                           ; BSR set to: 0
  1767                           ;avr-main.c: 438:                         {;avr-main.c: 439:                            
      +                           if (!menuEdit)
  1768  000A6E  B037               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1769  000A70  EF3C  F005         	goto	u1781
  1770  000A74  EF3E  F005         	goto	u1780
  1771  000A78                     u1781:
  1772  000A78  EFFE  F005         	goto	l2484
  1773  000A7C                     u1780:
  1774  000A7C                     
  1775                           ; BSR set to: 0
  1776                           ;avr-main.c: 440:                             {;avr-main.c: 441:                        
      +                                   if(menuMode == M_Exit)
  1777  000A7C  0E0C               	movlw	12
  1778  000A7E  196C               	xorwf	main@menuMode& (0+255),w,b
  1779  000A80  A4D8               	btfss	status,2,c
  1780  000A82  EF45  F005         	goto	u1791
  1781  000A86  EF47  F005         	goto	u1790
  1782  000A8A                     u1791:
  1783  000A8A  EF4B  F005         	goto	l2414
  1784  000A8E                     u1790:
  1785  000A8E                     
  1786                           ; BSR set to: 0
  1787                           ;avr-main.c: 442:                                     menuMode = M_Display;
  1788  000A8E  0E01               	movlw	1
  1789  000A90  6F6C               	movwf	main@menuMode& (0+255),b
  1790  000A92  EF47  F006         	goto	l2492
  1791  000A96                     l2414:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;avr-main.c: 444:                                     menuMode++;
  1795  000A96  2B6C               	incf	main@menuMode& (0+255),f,b
  1796  000A98  EF47  F006         	goto	l2492
  1797  000A9C                     l2416:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;avr-main.c: 451:                                     if(startDisplayMode == D_Dark)
  1801  000A9C  0E03               	movlw	3
  1802  000A9E  198F               	xorwf	main@startDisplayMode& (0+255),w,b
  1803  000AA0  A4D8               	btfss	status,2,c
  1804  000AA2  EF55  F005         	goto	u1801
  1805  000AA6  EF57  F005         	goto	u1800
  1806  000AAA                     u1801:
  1807  000AAA  EF5B  F005         	goto	l2420
  1808  000AAE                     u1800:
  1809  000AAE                     
  1810                           ; BSR set to: 0
  1811                           ;avr-main.c: 452:                                         startDisplayMode = D_Track;
  1812  000AAE  0E00               	movlw	0
  1813  000AB0  6F8F               	movwf	main@startDisplayMode& (0+255),b
  1814  000AB2  EF47  F006         	goto	l2492
  1815  000AB6                     l2420:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;avr-main.c: 454:                                         startDisplayMode++;
  1819  000AB6  2B8F               	incf	main@startDisplayMode& (0+255),f,b
  1820  000AB8  EF47  F006         	goto	l2492
  1821  000ABC                     l2422:
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;avr-main.c: 457:                                     if(driveParams_A.maxTrack == 80)
  1825  000ABC  0E50               	movlw	80
  1826  000ABE  1978               	xorwf	(_driveParams_A+1)& (0+255),w,b	;volatile
  1827  000AC0  A4D8               	btfss	status,2,c
  1828  000AC2  EF65  F005         	goto	u1811
  1829  000AC6  EF67  F005         	goto	u1810
  1830  000ACA                     u1811:
  1831  000ACA  EF6B  F005         	goto	l2426
  1832  000ACE                     u1810:
  1833  000ACE                     
  1834                           ; BSR set to: 0
  1835                           ;avr-main.c: 458:                                         driveParams_A.maxTrack = 32;
  1836  000ACE  0E20               	movlw	32
  1837  000AD0  6F78               	movwf	(_driveParams_A+1)& (0+255),b	;volatile
  1838  000AD2  EF47  F006         	goto	l2492
  1839  000AD6                     l2426:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;avr-main.c: 460:                                         driveParams_A.maxTrack++;
  1843  000AD6  2B78               	incf	(_driveParams_A+1)& (0+255),f,b	;volatile
  1844  000AD8  EF47  F006         	goto	l2492
  1845  000ADC                     l2428:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;avr-main.c: 463:                                     if(driveParams_A.tgXXMode == TG_Fr
      +                          omExternalSignal)
  1849  000ADC  0E03               	movlw	3
  1850  000ADE  197B               	xorwf	(_driveParams_A+4)& (0+255),w,b	;volatile
  1851  000AE0  A4D8               	btfss	status,2,c
  1852  000AE2  EF75  F005         	goto	u1821
  1853  000AE6  EF77  F005         	goto	u1820
  1854  000AEA                     u1821:
  1855  000AEA  EF7B  F005         	goto	l2432
  1856  000AEE                     u1820:
  1857  000AEE                     
  1858                           ; BSR set to: 0
  1859                           ;avr-main.c: 464:                                         driveParams_A.tgXXMode = TG_Us
      +                          eThresholds;
  1860  000AEE  0E00               	movlw	0
  1861  000AF0  6F7B               	movwf	(_driveParams_A+4)& (0+255),b	;volatile
  1862  000AF2  EF47  F006         	goto	l2492
  1863  000AF6                     l2432:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;avr-main.c: 466:                                         driveParams_A.tgXXMode++;
  1867  000AF6  2B7B               	incf	(_driveParams_A+4)& (0+255),f,b	;volatile
  1868  000AF8  EF47  F006         	goto	l2492
  1869  000AFC                     l2434:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;avr-main.c: 469:                                     if(driveParams_A.headLoadMode == H
      +                          L_FromExternalSignal)
  1873  000AFC  0E03               	movlw	3
  1874  000AFE  197A               	xorwf	(_driveParams_A+3)& (0+255),w,b	;volatile
  1875  000B00  A4D8               	btfss	status,2,c
  1876  000B02  EF85  F005         	goto	u1831
  1877  000B06  EF87  F005         	goto	u1830
  1878  000B0A                     u1831:
  1879  000B0A  EF8B  F005         	goto	l2438
  1880  000B0E                     u1830:
  1881  000B0E                     
  1882                           ; BSR set to: 0
  1883                           ;avr-main.c: 470:                                         driveParams_A.headLoadMode = H
      +                          L_FromMotorEnable;
  1884  000B0E  0E00               	movlw	0
  1885  000B10  6F7A               	movwf	(_driveParams_A+3)& (0+255),b	;volatile
  1886  000B12  EF47  F006         	goto	l2492
  1887  000B16                     l2438:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;avr-main.c: 472:                                         driveParams_A.headLoadMode++;
  1891  000B16  2B7A               	incf	(_driveParams_A+3)& (0+255),f,b	;volatile
  1892  000B18  EF47  F006         	goto	l2492
  1893  000B1C                     l2440:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;avr-main.c: 475:                                     if(driveParams_A.tgWriteThreshold 
      +                          == 99)
  1897  000B1C  0E63               	movlw	99
  1898  000B1E  197C               	xorwf	(_driveParams_A+5)& (0+255),w,b	;volatile
  1899  000B20  A4D8               	btfss	status,2,c
  1900  000B22  EF95  F005         	goto	u1841
  1901  000B26  EF97  F005         	goto	u1840
  1902  000B2A                     u1841:
  1903  000B2A  EF9B  F005         	goto	l2444
  1904  000B2E                     u1840:
  1905  000B2E                     
  1906                           ; BSR set to: 0
  1907                           ;avr-main.c: 476:                                         driveParams_A.tgWriteThreshold
      +                           = 0;
  1908  000B2E  0E00               	movlw	0
  1909  000B30  6F7C               	movwf	(_driveParams_A+5)& (0+255),b	;volatile
  1910  000B32  EF47  F006         	goto	l2492
  1911  000B36                     l2444:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;avr-main.c: 478:                                         driveParams_A.tgWriteThreshold
      +                          ++;
  1915  000B36  2B7C               	incf	(_driveParams_A+5)& (0+255),f,b	;volatile
  1916  000B38  EF47  F006         	goto	l2492
  1917  000B3C                     l2446:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;avr-main.c: 481:                                     if(driveParams_A.tgReadThreshold =
      +                          = 99)
  1921  000B3C  0E63               	movlw	99
  1922  000B3E  197D               	xorwf	(_driveParams_A+6)& (0+255),w,b	;volatile
  1923  000B40  A4D8               	btfss	status,2,c
  1924  000B42  EFA5  F005         	goto	u1851
  1925  000B46  EFA7  F005         	goto	u1850
  1926  000B4A                     u1851:
  1927  000B4A  EFAB  F005         	goto	l2450
  1928  000B4E                     u1850:
  1929  000B4E                     
  1930                           ; BSR set to: 0
  1931                           ;avr-main.c: 482:                                         driveParams_A.tgReadThreshold 
      +                          = 0;
  1932  000B4E  0E00               	movlw	0
  1933  000B50  6F7D               	movwf	(_driveParams_A+6)& (0+255),b	;volatile
  1934  000B52  EF47  F006         	goto	l2492
  1935  000B56                     l2450:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;avr-main.c: 484:                                         driveParams_A.tgReadThreshold+
      +                          +;
  1939  000B56  2B7D               	incf	(_driveParams_A+6)& (0+255),f,b	;volatile
  1940  000B58  EF47  F006         	goto	l2492
  1941  000B5C                     l2452:
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;avr-main.c: 487:                                     if(driveParams_B.maxTrack == 80)
  1945  000B5C  0E50               	movlw	80
  1946  000B5E  1971               	xorwf	(_driveParams_B+1)& (0+255),w,b	;volatile
  1947  000B60  A4D8               	btfss	status,2,c
  1948  000B62  EFB5  F005         	goto	u1861
  1949  000B66  EFB7  F005         	goto	u1860
  1950  000B6A                     u1861:
  1951  000B6A  EFBB  F005         	goto	l2456
  1952  000B6E                     u1860:
  1953  000B6E                     
  1954                           ; BSR set to: 0
  1955                           ;avr-main.c: 488:                                         driveParams_B.maxTrack = 32;
  1956  000B6E  0E20               	movlw	32
  1957  000B70  6F71               	movwf	(_driveParams_B+1)& (0+255),b	;volatile
  1958  000B72  EF47  F006         	goto	l2492
  1959  000B76                     l2456:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;avr-main.c: 490:                                         driveParams_B.maxTrack++;
  1963  000B76  2B71               	incf	(_driveParams_B+1)& (0+255),f,b	;volatile
  1964  000B78  EF47  F006         	goto	l2492
  1965  000B7C                     l2458:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;avr-main.c: 493:                                     if(driveParams_B.tgXXMode == TG_Fr
      +                          omExternalSignal)
  1969  000B7C  0E03               	movlw	3
  1970  000B7E  1974               	xorwf	(_driveParams_B+4)& (0+255),w,b	;volatile
  1971  000B80  A4D8               	btfss	status,2,c
  1972  000B82  EFC5  F005         	goto	u1871
  1973  000B86  EFC7  F005         	goto	u1870
  1974  000B8A                     u1871:
  1975  000B8A  EFCB  F005         	goto	l2462
  1976  000B8E                     u1870:
  1977  000B8E                     
  1978                           ; BSR set to: 0
  1979                           ;avr-main.c: 494:                                         driveParams_B.tgXXMode = TG_Us
      +                          eThresholds;
  1980  000B8E  0E00               	movlw	0
  1981  000B90  6F74               	movwf	(_driveParams_B+4)& (0+255),b	;volatile
  1982  000B92  EF47  F006         	goto	l2492
  1983  000B96                     l2462:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;avr-main.c: 496:                                         driveParams_B.tgXXMode++;
  1987  000B96  2B74               	incf	(_driveParams_B+4)& (0+255),f,b	;volatile
  1988  000B98  EF47  F006         	goto	l2492
  1989  000B9C                     l2464:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;avr-main.c: 499:                                     if(driveParams_B.headLoadMode == H
      +                          L_FromExternalSignal)
  1993  000B9C  0E03               	movlw	3
  1994  000B9E  1973               	xorwf	(_driveParams_B+3)& (0+255),w,b	;volatile
  1995  000BA0  A4D8               	btfss	status,2,c
  1996  000BA2  EFD5  F005         	goto	u1881
  1997  000BA6  EFD7  F005         	goto	u1880
  1998  000BAA                     u1881:
  1999  000BAA  EFDB  F005         	goto	l2468
  2000  000BAE                     u1880:
  2001  000BAE                     
  2002                           ; BSR set to: 0
  2003                           ;avr-main.c: 500:                                         driveParams_B.headLoadMode = H
      +                          L_FromMotorEnable;
  2004  000BAE  0E00               	movlw	0
  2005  000BB0  6F73               	movwf	(_driveParams_B+3)& (0+255),b	;volatile
  2006  000BB2  EF47  F006         	goto	l2492
  2007  000BB6                     l2468:
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;avr-main.c: 502:                                         driveParams_B.headLoadMode++;
  2011  000BB6  2B73               	incf	(_driveParams_B+3)& (0+255),f,b	;volatile
  2012  000BB8  EF47  F006         	goto	l2492
  2013  000BBC                     l2470:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;avr-main.c: 505:                                     if(driveParams_B.tgWriteThreshold 
      +                          == 99)
  2017  000BBC  0E63               	movlw	99
  2018  000BBE  1975               	xorwf	(_driveParams_B+5)& (0+255),w,b	;volatile
  2019  000BC0  A4D8               	btfss	status,2,c
  2020  000BC2  EFE5  F005         	goto	u1891
  2021  000BC6  EFE7  F005         	goto	u1890
  2022  000BCA                     u1891:
  2023  000BCA  EFEB  F005         	goto	l2474
  2024  000BCE                     u1890:
  2025  000BCE                     
  2026                           ; BSR set to: 0
  2027                           ;avr-main.c: 506:                                         driveParams_B.tgWriteThreshold
      +                           = 0;
  2028  000BCE  0E00               	movlw	0
  2029  000BD0  6F75               	movwf	(_driveParams_B+5)& (0+255),b	;volatile
  2030  000BD2  EF47  F006         	goto	l2492
  2031  000BD6                     l2474:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;avr-main.c: 508:                                         driveParams_B.tgWriteThreshold
      +                          ++;
  2035  000BD6  2B75               	incf	(_driveParams_B+5)& (0+255),f,b	;volatile
  2036  000BD8  EF47  F006         	goto	l2492
  2037  000BDC                     l2476:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;avr-main.c: 511:                                     if(driveParams_B.tgReadThreshold =
      +                          = 99)
  2041  000BDC  0E63               	movlw	99
  2042  000BDE  1976               	xorwf	(_driveParams_B+6)& (0+255),w,b	;volatile
  2043  000BE0  A4D8               	btfss	status,2,c
  2044  000BE2  EFF5  F005         	goto	u1901
  2045  000BE6  EFF7  F005         	goto	u1900
  2046  000BEA                     u1901:
  2047  000BEA  EFFB  F005         	goto	l2480
  2048  000BEE                     u1900:
  2049  000BEE                     
  2050                           ; BSR set to: 0
  2051                           ;avr-main.c: 512:                                         driveParams_B.tgReadThreshold 
      +                          = 0;
  2052  000BEE  0E00               	movlw	0
  2053  000BF0  6F76               	movwf	(_driveParams_B+6)& (0+255),b	;volatile
  2054  000BF2  EF47  F006         	goto	l2492
  2055  000BF6                     l2480:
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;avr-main.c: 514:                                         driveParams_B.tgReadThreshold+
      +                          +;
  2059  000BF6  2B76               	incf	(_driveParams_B+6)& (0+255),f,b	;volatile
  2060  000BF8  EF47  F006         	goto	l2492
  2061  000BFC                     l2484:
  2062                           
  2063                           ; BSR set to: 0
  2064  000BFC  516C               	movf	main@menuMode& (0+255),w,b
  2065  000BFE  6F86               	movwf	??_main& (0+255),b
  2066  000C00  6B87               	clrf	(??_main+1)& (0+255),b
  2067                           
  2068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2069                           ; Switch size 1, requested type "simple"
  2070                           ; Number of cases is 1, Range of values is 0 to 0
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte            4     3 (average)
  2074                           ;	Chosen strategy is simple_byte
  2075  000C02  5187               	movf	(??_main+1)& (0+255),w,b
  2076  000C04  0A00               	xorlw	0	; case 0
  2077  000C06  B4D8               	btfsc	status,2,c
  2078  000C08  EF08  F006         	goto	l2832
  2079  000C0C  EF37  F006         	goto	l192
  2080  000C10                     l2832:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ; Switch size 1, requested type "simple"
  2084                           ; Number of cases is 11, Range of values is 1 to 11
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte           34    18 (average)
  2088                           ;	Chosen strategy is simple_byte
  2089  000C10  5186               	movf	??_main& (0+255),w,b
  2090  000C12  0A01               	xorlw	1	; case 1
  2091  000C14  B4D8               	btfsc	status,2,c
  2092  000C16  EF4E  F005         	goto	l2416
  2093  000C1A  0A03               	xorlw	3	; case 2
  2094  000C1C  B4D8               	btfsc	status,2,c
  2095  000C1E  EF5E  F005         	goto	l2422
  2096  000C22  0A01               	xorlw	1	; case 3
  2097  000C24  B4D8               	btfsc	status,2,c
  2098  000C26  EF6E  F005         	goto	l2428
  2099  000C2A  0A07               	xorlw	7	; case 4
  2100  000C2C  B4D8               	btfsc	status,2,c
  2101  000C2E  EF7E  F005         	goto	l2434
  2102  000C32  0A01               	xorlw	1	; case 5
  2103  000C34  B4D8               	btfsc	status,2,c
  2104  000C36  EF8E  F005         	goto	l2440
  2105  000C3A  0A03               	xorlw	3	; case 6
  2106  000C3C  B4D8               	btfsc	status,2,c
  2107  000C3E  EF9E  F005         	goto	l2446
  2108  000C42  0A01               	xorlw	1	; case 7
  2109  000C44  B4D8               	btfsc	status,2,c
  2110  000C46  EFAE  F005         	goto	l2452
  2111  000C4A  0A0F               	xorlw	15	; case 8
  2112  000C4C  B4D8               	btfsc	status,2,c
  2113  000C4E  EFBE  F005         	goto	l2458
  2114  000C52  0A01               	xorlw	1	; case 9
  2115  000C54  B4D8               	btfsc	status,2,c
  2116  000C56  EFCE  F005         	goto	l2464
  2117  000C5A  0A03               	xorlw	3	; case 10
  2118  000C5C  B4D8               	btfsc	status,2,c
  2119  000C5E  EFDE  F005         	goto	l2470
  2120  000C62  0A01               	xorlw	1	; case 11
  2121  000C64  B4D8               	btfsc	status,2,c
  2122  000C66  EFEE  F005         	goto	l2476
  2123  000C6A  EF37  F006         	goto	l192
  2124  000C6E                     l192:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;avr-main.c: 520:                         }
  2128  000C6E  EF47  F006         	goto	l2492
  2129  000C72                     l2486:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;avr-main.c: 522:                         {;avr-main.c: 523:                            
      +                           if (displayMode == D_Dark)
  2133  000C72  0E03               	movlw	3
  2134  000C74  198E               	xorwf	main@displayMode& (0+255),w,b
  2135  000C76  A4D8               	btfss	status,2,c
  2136  000C78  EF40  F006         	goto	u1911
  2137  000C7C  EF42  F006         	goto	u1910
  2138  000C80                     u1911:
  2139  000C80  EF46  F006         	goto	l2490
  2140  000C84                     u1910:
  2141  000C84                     
  2142                           ; BSR set to: 0
  2143                           ;avr-main.c: 524:                                 displayMode = D_Track;
  2144  000C84  0E00               	movlw	0
  2145  000C86  6F8E               	movwf	main@displayMode& (0+255),b
  2146  000C88  EF47  F006         	goto	l2492
  2147  000C8C                     l2490:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;avr-main.c: 526:                                 displayMode++;
  2151  000C8C  2B8E               	incf	main@displayMode& (0+255),f,b
  2152  000C8E                     l2492:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;avr-main.c: 529:                         cmdSwitchShort = 0;
  2156  000C8E  9437               	bcf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  2157  000C90                     l2494:
  2158                           
  2159                           ;avr-main.c: 532:                     cmdSwitchLast = 0;
  2160  000C90  9637               	bcf	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  2161  000C92                     l2496:
  2162                           
  2163                           ;avr-main.c: 538:         {;avr-main.c: 539:             if (menuMode != M_Hidden)
  2164  000C92  0100               	movlb	0	; () banked
  2165  000C94  516C               	movf	main@menuMode& (0+255),w,b
  2166  000C96  B4D8               	btfsc	status,2,c
  2167  000C98  EF50  F006         	goto	u1921
  2168  000C9C  EF52  F006         	goto	u1920
  2169  000CA0                     u1921:
  2170  000CA0  EF0B  F008         	goto	l2546
  2171  000CA4                     u1920:
  2172  000CA4                     
  2173                           ; BSR set to: 0
  2174                           ;avr-main.c: 540:             {;avr-main.c: 541:                 bcd1 = (uint_fast8_t) m
      +                          enuMode;
  2175  000CA4  C06C  F06F         	movff	main@menuMode,main@bcd1
  2176                           
  2177                           ;avr-main.c: 543:                 switch(menuMode)
  2178  000CA8  EF21  F007         	goto	l2514
  2179  000CAC                     l234:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;avr-main.c: 546:                     bcd2 = (uint_fast8_t) startDisplayMode;
  2183  000CAC  C08F  F06E         	movff	main@startDisplayMode,main@bcd2
  2184                           
  2185                           ;avr-main.c: 547:                     break;
  2186  000CB0  EF5A  F007         	goto	l2516
  2187  000CB4                     l2500:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;avr-main.c: 549:                     bcd1 = (uint_fast8_t) (driveParams_A.maxTrack / 10
      +                          );
  2191  000CB4  5178               	movf	(_driveParams_A+1)& (0+255),w,b	;volatile
  2192  000CB6  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2193  000CB8  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2194  000CBA  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2195  000CBC  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2196  000CBE  0E00               	movlw	0
  2197  000CC0  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2198  000CC2  0E0A               	movlw	10
  2199  000CC4  6F80               	movwf	___awdiv@divisor& (0+255),b
  2200  000CC6  EC44  F009         	call	___awdiv	;wreg free
  2201  000CCA  0100               	movlb	0	; () banked
  2202  000CCC  517E               	movf	?___awdiv& (0+255),w,b
  2203  000CCE  6F6F               	movwf	main@bcd1& (0+255),b
  2204                           
  2205                           ;avr-main.c: 550:                     bcd2 = (uint_fast8_t) (driveParams_A.maxTrack % 10
      +                          );
  2206  000CD0  5178               	movf	(_driveParams_A+1)& (0+255),w,b	;volatile
  2207  000CD2  6F7E               	movwf	___awmod@dividend& (0+255),b
  2208  000CD4  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2209  000CD6  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2210  000CD8  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2211  000CDA  0E00               	movlw	0
  2212  000CDC  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2213  000CDE  0E0A               	movlw	10
  2214  000CE0  6F80               	movwf	___awmod@divisor& (0+255),b
  2215  000CE2  ECA7  F009         	call	___awmod	;wreg free
  2216  000CE6  0100               	movlb	0	; () banked
  2217  000CE8  517E               	movf	?___awmod& (0+255),w,b
  2218  000CEA  6F6E               	movwf	main@bcd2& (0+255),b
  2219                           
  2220                           ;avr-main.c: 551:                     break;
  2221  000CEC  EF5A  F007         	goto	l2516
  2222  000CF0                     l237:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;avr-main.c: 553:                     bcd2 = (uint_fast8_t) driveParams_A.tgXXMode;
  2226  000CF0  C07B  F06E         	movff	_driveParams_A+4,main@bcd2	;volatile
  2227                           
  2228                           ;avr-main.c: 554:                     break;
  2229  000CF4  EF5A  F007         	goto	l2516
  2230  000CF8                     l238:
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;avr-main.c: 556:                     bcd2 = (uint_fast8_t) driveParams_A.headLoadMode;
  2234  000CF8  C07A  F06E         	movff	_driveParams_A+3,main@bcd2	;volatile
  2235                           
  2236                           ;avr-main.c: 557:                     break;
  2237  000CFC  EF5A  F007         	goto	l2516
  2238  000D00                     l2502:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;avr-main.c: 559:                     bcd1 = (uint_fast8_t) (driveParams_A.tgWriteThresh
      +                          old / 10);
  2242  000D00  517C               	movf	(_driveParams_A+5)& (0+255),w,b	;volatile
  2243  000D02  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2244  000D04  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2245  000D06  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2246  000D08  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2247  000D0A  0E00               	movlw	0
  2248  000D0C  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2249  000D0E  0E0A               	movlw	10
  2250  000D10  6F80               	movwf	___awdiv@divisor& (0+255),b
  2251  000D12  EC44  F009         	call	___awdiv	;wreg free
  2252  000D16  0100               	movlb	0	; () banked
  2253  000D18  517E               	movf	?___awdiv& (0+255),w,b
  2254  000D1A  6F6F               	movwf	main@bcd1& (0+255),b
  2255                           
  2256                           ;avr-main.c: 560:                     bcd2 = (uint_fast8_t) (driveParams_A.tgWriteThresh
      +                          old % 10);
  2257  000D1C  517C               	movf	(_driveParams_A+5)& (0+255),w,b	;volatile
  2258  000D1E  6F7E               	movwf	___awmod@dividend& (0+255),b
  2259  000D20  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2260  000D22  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2261  000D24  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2262  000D26  0E00               	movlw	0
  2263  000D28  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2264  000D2A  0E0A               	movlw	10
  2265  000D2C  6F80               	movwf	___awmod@divisor& (0+255),b
  2266  000D2E  ECA7  F009         	call	___awmod	;wreg free
  2267  000D32  0100               	movlb	0	; () banked
  2268  000D34  517E               	movf	?___awmod& (0+255),w,b
  2269  000D36  6F6E               	movwf	main@bcd2& (0+255),b
  2270                           
  2271                           ;avr-main.c: 561:                     break;
  2272  000D38  EF5A  F007         	goto	l2516
  2273  000D3C                     l2504:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;avr-main.c: 563:                     bcd1 = (uint_fast8_t) (driveParams_A.tgReadThresho
      +                          ld / 10);
  2277  000D3C  517D               	movf	(_driveParams_A+6)& (0+255),w,b	;volatile
  2278  000D3E  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2279  000D40  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2280  000D42  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2281  000D44  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2282  000D46  0E00               	movlw	0
  2283  000D48  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2284  000D4A  0E0A               	movlw	10
  2285  000D4C  6F80               	movwf	___awdiv@divisor& (0+255),b
  2286  000D4E  EC44  F009         	call	___awdiv	;wreg free
  2287  000D52  0100               	movlb	0	; () banked
  2288  000D54  517E               	movf	?___awdiv& (0+255),w,b
  2289  000D56  6F6F               	movwf	main@bcd1& (0+255),b
  2290                           
  2291                           ;avr-main.c: 564:                     bcd2 = (uint_fast8_t) (driveParams_A.tgReadThresho
      +                          ld % 10);
  2292  000D58  517D               	movf	(_driveParams_A+6)& (0+255),w,b	;volatile
  2293  000D5A  6F7E               	movwf	___awmod@dividend& (0+255),b
  2294  000D5C  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2295  000D5E  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2296  000D60  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2297  000D62  0E00               	movlw	0
  2298  000D64  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2299  000D66  0E0A               	movlw	10
  2300  000D68  6F80               	movwf	___awmod@divisor& (0+255),b
  2301  000D6A  ECA7  F009         	call	___awmod	;wreg free
  2302  000D6E  0100               	movlb	0	; () banked
  2303  000D70  517E               	movf	?___awmod& (0+255),w,b
  2304  000D72  6F6E               	movwf	main@bcd2& (0+255),b
  2305                           
  2306                           ;avr-main.c: 565:                     break;
  2307  000D74  EF5A  F007         	goto	l2516
  2308  000D78                     l2506:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;avr-main.c: 567:                     bcd1 = (uint_fast8_t) (driveParams_B.maxTrack / 10
      +                          );
  2312  000D78  5171               	movf	(_driveParams_B+1)& (0+255),w,b	;volatile
  2313  000D7A  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2314  000D7C  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2315  000D7E  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2316  000D80  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2317  000D82  0E00               	movlw	0
  2318  000D84  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2319  000D86  0E0A               	movlw	10
  2320  000D88  6F80               	movwf	___awdiv@divisor& (0+255),b
  2321  000D8A  EC44  F009         	call	___awdiv	;wreg free
  2322  000D8E  0100               	movlb	0	; () banked
  2323  000D90  517E               	movf	?___awdiv& (0+255),w,b
  2324  000D92  6F6F               	movwf	main@bcd1& (0+255),b
  2325                           
  2326                           ;avr-main.c: 568:                     bcd2 = (uint_fast8_t) (driveParams_B.maxTrack % 10
      +                          );
  2327  000D94  5171               	movf	(_driveParams_B+1)& (0+255),w,b	;volatile
  2328  000D96  6F7E               	movwf	___awmod@dividend& (0+255),b
  2329  000D98  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2330  000D9A  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2331  000D9C  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2332  000D9E  0E00               	movlw	0
  2333  000DA0  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2334  000DA2  0E0A               	movlw	10
  2335  000DA4  6F80               	movwf	___awmod@divisor& (0+255),b
  2336  000DA6  ECA7  F009         	call	___awmod	;wreg free
  2337  000DAA  0100               	movlb	0	; () banked
  2338  000DAC  517E               	movf	?___awmod& (0+255),w,b
  2339  000DAE  6F6E               	movwf	main@bcd2& (0+255),b
  2340                           
  2341                           ;avr-main.c: 569:                     break;
  2342  000DB0  EF5A  F007         	goto	l2516
  2343  000DB4                     l242:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;avr-main.c: 571:                     bcd2 = (uint_fast8_t) driveParams_B.tgXXMode;
  2347  000DB4  C074  F06E         	movff	_driveParams_B+4,main@bcd2	;volatile
  2348                           
  2349                           ;avr-main.c: 572:                     break;
  2350  000DB8  EF5A  F007         	goto	l2516
  2351  000DBC                     l243:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;avr-main.c: 574:                     bcd2 = (uint_fast8_t) driveParams_B.headLoadMode;
  2355  000DBC  C073  F06E         	movff	_driveParams_B+3,main@bcd2	;volatile
  2356                           
  2357                           ;avr-main.c: 575:                     break;
  2358  000DC0  EF5A  F007         	goto	l2516
  2359  000DC4                     l2508:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;avr-main.c: 577:                     bcd1 = (uint_fast8_t) (driveParams_B.tgWriteThresh
      +                          old / 10);
  2363  000DC4  5175               	movf	(_driveParams_B+5)& (0+255),w,b	;volatile
  2364  000DC6  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2365  000DC8  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2366  000DCA  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2367  000DCC  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2368  000DCE  0E00               	movlw	0
  2369  000DD0  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2370  000DD2  0E0A               	movlw	10
  2371  000DD4  6F80               	movwf	___awdiv@divisor& (0+255),b
  2372  000DD6  EC44  F009         	call	___awdiv	;wreg free
  2373  000DDA  0100               	movlb	0	; () banked
  2374  000DDC  517E               	movf	?___awdiv& (0+255),w,b
  2375  000DDE  6F6F               	movwf	main@bcd1& (0+255),b
  2376                           
  2377                           ;avr-main.c: 578:                     bcd2 = (uint_fast8_t) (driveParams_B.tgWriteThresh
      +                          old % 10);
  2378  000DE0  5175               	movf	(_driveParams_B+5)& (0+255),w,b	;volatile
  2379  000DE2  6F7E               	movwf	___awmod@dividend& (0+255),b
  2380  000DE4  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2381  000DE6  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2382  000DE8  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2383  000DEA  0E00               	movlw	0
  2384  000DEC  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2385  000DEE  0E0A               	movlw	10
  2386  000DF0  6F80               	movwf	___awmod@divisor& (0+255),b
  2387  000DF2  ECA7  F009         	call	___awmod	;wreg free
  2388  000DF6  0100               	movlb	0	; () banked
  2389  000DF8  517E               	movf	?___awmod& (0+255),w,b
  2390  000DFA  6F6E               	movwf	main@bcd2& (0+255),b
  2391                           
  2392                           ;avr-main.c: 579:                     break;
  2393  000DFC  EF5A  F007         	goto	l2516
  2394  000E00                     l2510:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;avr-main.c: 581:                     bcd1 = (uint_fast8_t) (driveParams_B.tgReadThresho
      +                          ld / 10);
  2398  000E00  5176               	movf	(_driveParams_B+6)& (0+255),w,b	;volatile
  2399  000E02  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2400  000E04  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2401  000E06  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2402  000E08  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2403  000E0A  0E00               	movlw	0
  2404  000E0C  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2405  000E0E  0E0A               	movlw	10
  2406  000E10  6F80               	movwf	___awdiv@divisor& (0+255),b
  2407  000E12  EC44  F009         	call	___awdiv	;wreg free
  2408  000E16  0100               	movlb	0	; () banked
  2409  000E18  517E               	movf	?___awdiv& (0+255),w,b
  2410  000E1A  6F6F               	movwf	main@bcd1& (0+255),b
  2411                           
  2412                           ;avr-main.c: 582:                     bcd2 = (uint_fast8_t) (driveParams_B.tgReadThresho
      +                          ld % 10);
  2413  000E1C  5176               	movf	(_driveParams_B+6)& (0+255),w,b	;volatile
  2414  000E1E  6F7E               	movwf	___awmod@dividend& (0+255),b
  2415  000E20  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2416  000E22  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2417  000E24  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2418  000E26  0E00               	movlw	0
  2419  000E28  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2420  000E2A  0E0A               	movlw	10
  2421  000E2C  6F80               	movwf	___awmod@divisor& (0+255),b
  2422  000E2E  ECA7  F009         	call	___awmod	;wreg free
  2423  000E32  0100               	movlb	0	; () banked
  2424  000E34  517E               	movf	?___awmod& (0+255),w,b
  2425  000E36  6F6E               	movwf	main@bcd2& (0+255),b
  2426                           
  2427                           ;avr-main.c: 583:                     break;
  2428  000E38  EF5A  F007         	goto	l2516
  2429  000E3C                     l246:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;avr-main.c: 585:                     bcd2 = 0xFF;
  2433  000E3C  696E               	setf	main@bcd2& (0+255),b
  2434                           
  2435                           ;avr-main.c: 586:                     break;
  2436  000E3E  EF5A  F007         	goto	l2516
  2437  000E42                     l2514:
  2438                           
  2439                           ; BSR set to: 0
  2440  000E42  516C               	movf	main@menuMode& (0+255),w,b
  2441  000E44  6F86               	movwf	??_main& (0+255),b
  2442  000E46  6B87               	clrf	(??_main+1)& (0+255),b
  2443                           
  2444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 1, Range of values is 0 to 0
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte            4     3 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451  000E48  5187               	movf	(??_main+1)& (0+255),w,b
  2452  000E4A  0A00               	xorlw	0	; case 0
  2453  000E4C  B4D8               	btfsc	status,2,c
  2454  000E4E  EF2B  F007         	goto	l2834
  2455  000E52  EF1E  F007         	goto	l246
  2456  000E56                     l2834:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ; Switch size 1, requested type "simple"
  2460                           ; Number of cases is 11, Range of values is 1 to 11
  2461                           ; switch strategies available:
  2462                           ; Name         Instructions Cycles
  2463                           ; simple_byte           34    18 (average)
  2464                           ;	Chosen strategy is simple_byte
  2465  000E56  5186               	movf	??_main& (0+255),w,b
  2466  000E58  0A01               	xorlw	1	; case 1
  2467  000E5A  B4D8               	btfsc	status,2,c
  2468  000E5C  EF56  F006         	goto	l234
  2469  000E60  0A03               	xorlw	3	; case 2
  2470  000E62  B4D8               	btfsc	status,2,c
  2471  000E64  EF5A  F006         	goto	l2500
  2472  000E68  0A01               	xorlw	1	; case 3
  2473  000E6A  B4D8               	btfsc	status,2,c
  2474  000E6C  EF78  F006         	goto	l237
  2475  000E70  0A07               	xorlw	7	; case 4
  2476  000E72  B4D8               	btfsc	status,2,c
  2477  000E74  EF7C  F006         	goto	l238
  2478  000E78  0A01               	xorlw	1	; case 5
  2479  000E7A  B4D8               	btfsc	status,2,c
  2480  000E7C  EF80  F006         	goto	l2502
  2481  000E80  0A03               	xorlw	3	; case 6
  2482  000E82  B4D8               	btfsc	status,2,c
  2483  000E84  EF9E  F006         	goto	l2504
  2484  000E88  0A01               	xorlw	1	; case 7
  2485  000E8A  B4D8               	btfsc	status,2,c
  2486  000E8C  EFBC  F006         	goto	l2506
  2487  000E90  0A0F               	xorlw	15	; case 8
  2488  000E92  B4D8               	btfsc	status,2,c
  2489  000E94  EFDA  F006         	goto	l242
  2490  000E98  0A01               	xorlw	1	; case 9
  2491  000E9A  B4D8               	btfsc	status,2,c
  2492  000E9C  EFDE  F006         	goto	l243
  2493  000EA0  0A03               	xorlw	3	; case 10
  2494  000EA2  B4D8               	btfsc	status,2,c
  2495  000EA4  EFE2  F006         	goto	l2508
  2496  000EA8  0A01               	xorlw	1	; case 11
  2497  000EAA  B4D8               	btfsc	status,2,c
  2498  000EAC  EF00  F007         	goto	l2510
  2499  000EB0  EF1E  F007         	goto	l246
  2500  000EB4                     l2516:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;avr-main.c: 589:                 if (menuEdit ^ cmdSwitchLong)
  2504  000EB4  B237               	btfsc	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  2505  000EB6  EF5F  F007         	goto	u1931
  2506  000EBA  EF62  F007         	goto	u1930
  2507  000EBE                     u1931:
  2508  000EBE  0E01               	movlw	1
  2509  000EC0  EF63  F007         	goto	u1932
  2510  000EC4                     u1930:
  2511  000EC4  0E00               	movlw	0
  2512  000EC6                     u1932:
  2513  000EC6  6F86               	movwf	??_main& (0+255),b
  2514  000EC8  B037               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  2515  000ECA  EF69  F007         	goto	u1941
  2516  000ECE  EF6C  F007         	goto	u1940
  2517  000ED2                     u1941:
  2518  000ED2  0E01               	movlw	1
  2519  000ED4  EF6D  F007         	goto	u1942
  2520  000ED8                     u1940:
  2521  000ED8  0E00               	movlw	0
  2522  000EDA                     u1942:
  2523  000EDA  1B86               	xorwf	??_main& (0+255),f,b
  2524  000EDC  B4D8               	btfsc	status,2,c
  2525  000EDE  EF73  F007         	goto	u1951
  2526  000EE2  EF75  F007         	goto	u1950
  2527  000EE6                     u1951:
  2528  000EE6  EF89  F007         	goto	l247
  2529  000EEA                     u1950:
  2530  000EEA                     
  2531                           ; BSR set to: 0
  2532                           ;avr-main.c: 590:                 {;avr-main.c: 591:                     dot1 = dot2 = b
      +                          link;
  2533  000EEA  B438               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2534  000EEC  EF7A  F007         	goto	u1961
  2535  000EF0  EF7D  F007         	goto	u1960
  2536  000EF4                     u1961:
  2537  000EF4  8837               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2538  000EF6  EF7E  F007         	goto	u1975
  2539  000EFA                     u1960:
  2540  000EFA  9837               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2541  000EFC                     u1975:
  2542  000EFC  B837               	btfsc	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2543  000EFE  EF83  F007         	goto	u1971
  2544  000F02  EF86  F007         	goto	u1970
  2545  000F06                     u1971:
  2546  000F06  8A37               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2547  000F08  EF87  F007         	goto	u1985
  2548  000F0C                     u1970:
  2549  000F0C  9A37               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2550  000F0E                     u1985:
  2551                           
  2552                           ;avr-main.c: 592:                 }
  2553  000F0E  EF28  F008         	goto	l2548
  2554  000F12                     l247:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;avr-main.c: 594:                 {;avr-main.c: 595:                     dot1 = dot2 = 1
      +                          ;
  2558  000F12  8837               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2559  000F14  8A37               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2560  000F16  EF28  F008         	goto	l2548
  2561  000F1A                     l2520:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;avr-main.c: 603:                     bcd1 = (uint_fast8_t) (driveParams->track / 10);
  2565  000F1A  C090  FFD9         	movff	_driveParams,fsr2l
  2566  000F1E  C091  FFDA         	movff	_driveParams+1,fsr2h
  2567  000F22  50DF               	movf	indf2,w,c
  2568  000F24  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2569  000F26  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2570  000F28  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2571  000F2A  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2572  000F2C  0E00               	movlw	0
  2573  000F2E  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2574  000F30  0E0A               	movlw	10
  2575  000F32  6F80               	movwf	___awdiv@divisor& (0+255),b
  2576  000F34  EC44  F009         	call	___awdiv	;wreg free
  2577  000F38  0100               	movlb	0	; () banked
  2578  000F3A  517E               	movf	?___awdiv& (0+255),w,b
  2579  000F3C  6F6F               	movwf	main@bcd1& (0+255),b
  2580                           
  2581                           ;avr-main.c: 604:                     bcd2 = (uint_fast8_t) (driveParams->track % 10);
  2582  000F3E  C090  FFD9         	movff	_driveParams,fsr2l
  2583  000F42  C091  FFDA         	movff	_driveParams+1,fsr2h
  2584  000F46  50DF               	movf	indf2,w,c
  2585  000F48  6F7E               	movwf	___awmod@dividend& (0+255),b
  2586  000F4A  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2587  000F4C  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2588  000F4E  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2589  000F50  0E00               	movlw	0
  2590  000F52  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2591  000F54  0E0A               	movlw	10
  2592  000F56  6F80               	movwf	___awmod@divisor& (0+255),b
  2593  000F58  ECA7  F009         	call	___awmod	;wreg free
  2594  000F5C  0100               	movlb	0	; () banked
  2595  000F5E  517E               	movf	?___awmod& (0+255),w,b
  2596  000F60  6F6E               	movwf	main@bcd2& (0+255),b
  2597  000F62                     
  2598                           ; BSR set to: 0
  2599                           ;avr-main.c: 605:                     dot1 = 0;
  2600  000F62  9A37               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2601  000F64                     
  2602                           ; BSR set to: 0
  2603                           ;avr-main.c: 606:                     dot2 = 1;
  2604  000F64  8837               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2605                           
  2606                           ;avr-main.c: 607:                     break;
  2607  000F66  EF28  F008         	goto	l2548
  2608  000F6A                     l2526:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;avr-main.c: 610:                     speed = driveParams->speedDeviationPercentTenths;
  2612  000F6A  EE20 F002          	lfsr	2,2
  2613  000F6E  5190               	movf	_driveParams& (0+255),w,b
  2614  000F70  26D9               	addwf	fsr2l,f,c
  2615  000F72  5191               	movf	(_driveParams+1)& (0+255),w,b
  2616  000F74  22DA               	addwfc	fsr2h,f,c
  2617  000F76  50DF               	movf	indf2,w,c
  2618  000F78  6F6D               	movwf	main@speed& (0+255),b
  2619  000F7A                     
  2620                           ; BSR set to: 0
  2621                           ;avr-main.c: 611:                     if(speed < 0)
  2622  000F7A  BF6D               	btfsc	main@speed& (0+255),7,b
  2623  000F7C  EFC4  F007         	goto	u1990
  2624  000F80  EFC2  F007         	goto	u1991
  2625  000F84                     u1991:
  2626  000F84  EFD1  F007         	goto	l254
  2627  000F88                     u1990:
  2628  000F88                     
  2629                           ; BSR set to: 0
  2630                           ;avr-main.c: 612:                     {;avr-main.c: 613:                         dot1 = 
      +                          blink;
  2631  000F88  B438               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2632  000F8A  EFC9  F007         	goto	u2001
  2633  000F8E  EFCC  F007         	goto	u2000
  2634  000F92                     u2001:
  2635  000F92  8A37               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2636  000F94  EFCD  F007         	goto	u2015
  2637  000F98                     u2000:
  2638  000F98  9A37               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2639  000F9A                     u2015:
  2640  000F9A                     
  2641                           ;avr-main.c: 614:                         speed = -speed;
  2642  000F9A  0100               	movlb	0	; () banked
  2643  000F9C  6D6D               	negf	main@speed& (0+255),b
  2644                           
  2645                           ;avr-main.c: 615:                     }
  2646  000F9E  EFD2  F007         	goto	l2534
  2647  000FA2                     l254:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;avr-main.c: 617:                     {;avr-main.c: 618:                         dot1 = 
      +                          1;
  2651  000FA2  8A37               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2652  000FA4                     l2534:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;avr-main.c: 620:                     bcd1 = (uint_fast8_t) (speed / 10);
  2656  000FA4  516D               	movf	main@speed& (0+255),w,b
  2657  000FA6  6F7E               	movwf	___awdiv@dividend& (0+255),b
  2658  000FA8  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
  2659  000FAA  BF7E               	btfsc	___awdiv@dividend& (0+255),7,b
  2660  000FAC  077F               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2661  000FAE  0E00               	movlw	0
  2662  000FB0  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  2663  000FB2  0E0A               	movlw	10
  2664  000FB4  6F80               	movwf	___awdiv@divisor& (0+255),b
  2665  000FB6  EC44  F009         	call	___awdiv	;wreg free
  2666  000FBA  0100               	movlb	0	; () banked
  2667  000FBC  517E               	movf	?___awdiv& (0+255),w,b
  2668  000FBE  6F6F               	movwf	main@bcd1& (0+255),b
  2669                           
  2670                           ;avr-main.c: 621:                     bcd2 = (uint_fast8_t) (speed % 10);
  2671  000FC0  516D               	movf	main@speed& (0+255),w,b
  2672  000FC2  6F7E               	movwf	___awmod@dividend& (0+255),b
  2673  000FC4  6B7F               	clrf	(___awmod@dividend+1)& (0+255),b
  2674  000FC6  BF7E               	btfsc	___awmod@dividend& (0+255),7,b
  2675  000FC8  077F               	decf	(___awmod@dividend+1)& (0+255),f,b
  2676  000FCA  0E00               	movlw	0
  2677  000FCC  6F81               	movwf	(___awmod@divisor+1)& (0+255),b
  2678  000FCE  0E0A               	movlw	10
  2679  000FD0  6F80               	movwf	___awmod@divisor& (0+255),b
  2680  000FD2  ECA7  F009         	call	___awmod	;wreg free
  2681  000FD6  0100               	movlb	0	; () banked
  2682  000FD8  517E               	movf	?___awmod& (0+255),w,b
  2683  000FDA  6F6E               	movwf	main@bcd2& (0+255),b
  2684  000FDC                     
  2685                           ; BSR set to: 0
  2686                           ;avr-main.c: 622:                     dot2 = 0;
  2687  000FDC  9837               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2688                           
  2689                           ;avr-main.c: 623:                     break;
  2690  000FDE  EF28  F008         	goto	l2548
  2691  000FE2                     l2538:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;avr-main.c: 626:                     bcd1 = (uint_fast8_t) (01 / 10);
  2695  000FE2  0E00               	movlw	0
  2696  000FE4  6F6F               	movwf	main@bcd1& (0+255),b
  2697                           
  2698                           ;avr-main.c: 627:                     bcd2 = (uint_fast8_t) (01 % 10);
  2699  000FE6  0E01               	movlw	1
  2700  000FE8  6F6E               	movwf	main@bcd2& (0+255),b
  2701  000FEA                     
  2702                           ; BSR set to: 0
  2703                           ;avr-main.c: 628:                     dot1 = blink;
  2704  000FEA  B438               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2705  000FEC  EFFA  F007         	goto	u2021
  2706  000FF0  EFFD  F007         	goto	u2020
  2707  000FF4                     u2021:
  2708  000FF4  8A37               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2709  000FF6  EFFE  F007         	goto	u2035
  2710  000FFA                     u2020:
  2711  000FFA  9A37               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2712  000FFC                     u2035:
  2713  000FFC                     
  2714                           ;avr-main.c: 629:                     dot2 = !blink;
  2715  000FFC  8837               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2716  000FFE  A438               	btfss	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2717  001000  EF03  F008         	goto	u2045
  2718  001004  9837               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2719  001006                     u2045:
  2720                           
  2721                           ;avr-main.c: 630:                     break;
  2722  001006  EF28  F008         	goto	l2548
  2723  00100A                     l257:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;avr-main.c: 633:                     bcd2 = bcd1 = 0xFF;
  2727  00100A  696F               	setf	main@bcd1& (0+255),b
  2728  00100C  696E               	setf	main@bcd2& (0+255),b
  2729                           
  2730                           ;avr-main.c: 634:                     dot2 = dot1 = 0;
  2731  00100E  9A37               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2732  001010  9837               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2733                           
  2734                           ;avr-main.c: 635:                     break;
  2735  001012  EF28  F008         	goto	l2548
  2736  001016                     l2546:
  2737                           
  2738                           ; BSR set to: 0
  2739  001016  518E               	movf	main@displayMode& (0+255),w,b
  2740  001018  6F86               	movwf	??_main& (0+255),b
  2741  00101A  6B87               	clrf	(??_main+1)& (0+255),b
  2742                           
  2743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2744                           ; Switch size 1, requested type "simple"
  2745                           ; Number of cases is 1, Range of values is 0 to 0
  2746                           ; switch strategies available:
  2747                           ; Name         Instructions Cycles
  2748                           ; simple_byte            4     3 (average)
  2749                           ;	Chosen strategy is simple_byte
  2750  00101C  5187               	movf	(??_main+1)& (0+255),w,b
  2751  00101E  0A00               	xorlw	0	; case 0
  2752  001020  B4D8               	btfsc	status,2,c
  2753  001022  EF15  F008         	goto	l2836
  2754  001026  EF28  F008         	goto	l2548
  2755  00102A                     l2836:
  2756                           
  2757                           ; BSR set to: 0
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 4, Range of values is 0 to 3
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte           13     7 (average)
  2763                           ;	Chosen strategy is simple_byte
  2764  00102A  5186               	movf	??_main& (0+255),w,b
  2765  00102C  0A00               	xorlw	0	; case 0
  2766  00102E  B4D8               	btfsc	status,2,c
  2767  001030  EF8D  F007         	goto	l2520
  2768  001034  0A01               	xorlw	1	; case 1
  2769  001036  B4D8               	btfsc	status,2,c
  2770  001038  EFB5  F007         	goto	l2526
  2771  00103C  0A03               	xorlw	3	; case 2
  2772  00103E  B4D8               	btfsc	status,2,c
  2773  001040  EFF1  F007         	goto	l2538
  2774  001044  0A01               	xorlw	1	; case 3
  2775  001046  B4D8               	btfsc	status,2,c
  2776  001048  EF05  F008         	goto	l257
  2777  00104C  EF28  F008         	goto	l2548
  2778  001050                     l2548:
  2779                           
  2780                           ;avr-main.c: 639:             PORTC = (bcd1 & 0xF) | ((bcd2 << 4) & 0xF0);
  2781  001050  C06E  F086         	movff	main@bcd2,??_main
  2782  001054  0100               	movlb	0	; () banked
  2783  001056  3B86               	swapf	??_main& (0+255),f,b
  2784  001058  0EF0               	movlw	240
  2785  00105A  1786               	andwf	??_main& (0+255),f,b
  2786  00105C  0EF0               	movlw	240
  2787  00105E  1786               	andwf	??_main& (0+255),f,b
  2788  001060  516F               	movf	main@bcd1& (0+255),w,b
  2789  001062  0B0F               	andlw	15
  2790  001064  1186               	iorwf	??_main& (0+255),w,b
  2791  001066  6E82               	movwf	130,c	;volatile
  2792                           
  2793                           ;avr-main.c: 640:             PORTBbits.RB4 = !dot1;
  2794  001068  AA37               	btfss	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2795  00106A  EF39  F008         	goto	u2051
  2796  00106E  EF3D  F008         	goto	u2050
  2797  001072                     u2051:
  2798  001072  6B86               	clrf	??_main& (0+255),b
  2799  001074  2B86               	incf	??_main& (0+255),f,b
  2800  001076  EF3F  F008         	goto	u2068
  2801  00107A                     u2050:
  2802  00107A  0100               	movlb	0	; () banked
  2803  00107C  6B86               	clrf	??_main& (0+255),b
  2804  00107E                     u2068:
  2805  00107E  3B86               	swapf	??_main& (0+255),f,b
  2806  001080  5081               	movf	129,w,c	;volatile
  2807  001082  1986               	xorwf	??_main& (0+255),w,b
  2808  001084  0BEF               	andlw	-17
  2809  001086  1986               	xorwf	??_main& (0+255),w,b
  2810  001088  6E81               	movwf	129,c	;volatile
  2811                           
  2812                           ;avr-main.c: 641:             PORTAbits.RA1 = !dot2;
  2813  00108A  A837               	btfss	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2814  00108C  EF4A  F008         	goto	u2071
  2815  001090  EF4E  F008         	goto	u2070
  2816  001094                     u2071:
  2817  001094  6B86               	clrf	??_main& (0+255),b
  2818  001096  2B86               	incf	??_main& (0+255),f,b
  2819  001098  EF50  F008         	goto	u2088
  2820  00109C                     u2070:
  2821  00109C  0100               	movlb	0	; () banked
  2822  00109E  6B86               	clrf	??_main& (0+255),b
  2823  0010A0                     u2088:
  2824  0010A0  4786               	rlncf	??_main& (0+255),f,b
  2825  0010A2  5080               	movf	128,w,c	;volatile
  2826  0010A4  1986               	xorwf	??_main& (0+255),w,b
  2827  0010A6  0BFD               	andlw	-3
  2828  0010A8  1986               	xorwf	??_main& (0+255),w,b
  2829  0010AA  6E80               	movwf	128,c	;volatile
  2830  0010AC  EF94  F002         	goto	l2288
  2831  0010B0  EF52  F001         	goto	start
  2832  0010B4                     __end_of_main:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function ___awmod *****************
  2836 ;; Defined at:
  2837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  dividend        2    0[BANK0 ] int 
  2840 ;;  divisor         2    2[BANK0 ] int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  sign            1    5[BANK0 ] unsigned char 
  2843 ;;  counter         1    4[BANK0 ] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2    0[BANK0 ] int 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2854 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    3
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text1
  2868  00134E                     __ptext1:
  2869                           	callstack 0
  2870  00134E                     ___awmod:
  2871                           	callstack 27
  2872  00134E  0E00               	movlw	0
  2873  001350  0100               	movlb	0	; () banked
  2874  001352  6F83               	movwf	___awmod@sign& (0+255),b
  2875  001354                     
  2876                           ; BSR set to: 0
  2877  001354  BF7F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2878  001356  EFB1  F009         	goto	u1340
  2879  00135A  EFAF  F009         	goto	u1341
  2880  00135E                     u1341:
  2881  00135E  EFB7  F009         	goto	l2088
  2882  001362                     u1340:
  2883  001362                     
  2884                           ; BSR set to: 0
  2885  001362  6D7E               	negf	___awmod@dividend& (0+255),b
  2886  001364  1F7F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2887  001366  B0D8               	btfsc	status,0,c
  2888  001368  2B7F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2889  00136A                     
  2890                           ; BSR set to: 0
  2891  00136A  0E01               	movlw	1
  2892  00136C  6F83               	movwf	___awmod@sign& (0+255),b
  2893  00136E                     l2088:
  2894                           
  2895                           ; BSR set to: 0
  2896  00136E  BF81               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2897  001370  EFBE  F009         	goto	u1350
  2898  001374  EFBC  F009         	goto	u1351
  2899  001378                     u1351:
  2900  001378  EFC2  F009         	goto	l2092
  2901  00137C                     u1350:
  2902  00137C                     
  2903                           ; BSR set to: 0
  2904  00137C  6D80               	negf	___awmod@divisor& (0+255),b
  2905  00137E  1F81               	comf	(___awmod@divisor+1)& (0+255),f,b
  2906  001380  B0D8               	btfsc	status,0,c
  2907  001382  2B81               	incf	(___awmod@divisor+1)& (0+255),f,b
  2908  001384                     l2092:
  2909                           
  2910                           ; BSR set to: 0
  2911  001384  5180               	movf	___awmod@divisor& (0+255),w,b
  2912  001386  1181               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2913  001388  B4D8               	btfsc	status,2,c
  2914  00138A  EFC9  F009         	goto	u1361
  2915  00138E  EFCB  F009         	goto	u1360
  2916  001392                     u1361:
  2917  001392  EFEF  F009         	goto	l2108
  2918  001396                     u1360:
  2919  001396                     
  2920                           ; BSR set to: 0
  2921  001396  0E01               	movlw	1
  2922  001398  6F82               	movwf	___awmod@counter& (0+255),b
  2923  00139A  EFD3  F009         	goto	l2098
  2924  00139E                     l2096:
  2925                           
  2926                           ; BSR set to: 0
  2927  00139E  90D8               	bcf	status,0,c
  2928  0013A0  3780               	rlcf	___awmod@divisor& (0+255),f,b
  2929  0013A2  3781               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2930  0013A4  2B82               	incf	___awmod@counter& (0+255),f,b
  2931  0013A6                     l2098:
  2932                           
  2933                           ; BSR set to: 0
  2934  0013A6  AF81               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2935  0013A8  EFD8  F009         	goto	u1371
  2936  0013AC  EFDA  F009         	goto	u1370
  2937  0013B0                     u1371:
  2938  0013B0  EFCF  F009         	goto	l2096
  2939  0013B4                     u1370:
  2940  0013B4                     l2100:
  2941                           
  2942                           ; BSR set to: 0
  2943  0013B4  5180               	movf	___awmod@divisor& (0+255),w,b
  2944  0013B6  5D7E               	subwf	___awmod@dividend& (0+255),w,b
  2945  0013B8  5181               	movf	(___awmod@divisor+1)& (0+255),w,b
  2946  0013BA  597F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2947  0013BC  A0D8               	btfss	status,0,c
  2948  0013BE  EFE3  F009         	goto	u1381
  2949  0013C2  EFE5  F009         	goto	u1380
  2950  0013C6                     u1381:
  2951  0013C6  EFE9  F009         	goto	l2104
  2952  0013CA                     u1380:
  2953  0013CA                     
  2954                           ; BSR set to: 0
  2955  0013CA  5180               	movf	___awmod@divisor& (0+255),w,b
  2956  0013CC  5F7E               	subwf	___awmod@dividend& (0+255),f,b
  2957  0013CE  5181               	movf	(___awmod@divisor+1)& (0+255),w,b
  2958  0013D0  5B7F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2959  0013D2                     l2104:
  2960                           
  2961                           ; BSR set to: 0
  2962  0013D2  90D8               	bcf	status,0,c
  2963  0013D4  3381               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2964  0013D6  3380               	rrcf	___awmod@divisor& (0+255),f,b
  2965  0013D8                     
  2966                           ; BSR set to: 0
  2967  0013D8  2F82               	decfsz	___awmod@counter& (0+255),f,b
  2968  0013DA  EFDA  F009         	goto	l2100
  2969  0013DE                     l2108:
  2970                           
  2971                           ; BSR set to: 0
  2972  0013DE  5183               	movf	___awmod@sign& (0+255),w,b
  2973  0013E0  B4D8               	btfsc	status,2,c
  2974  0013E2  EFF5  F009         	goto	u1391
  2975  0013E6  EFF7  F009         	goto	u1390
  2976  0013EA                     u1391:
  2977  0013EA  EFFB  F009         	goto	l2112
  2978  0013EE                     u1390:
  2979  0013EE                     
  2980                           ; BSR set to: 0
  2981  0013EE  6D7E               	negf	___awmod@dividend& (0+255),b
  2982  0013F0  1F7F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2983  0013F2  B0D8               	btfsc	status,0,c
  2984  0013F4  2B7F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2985  0013F6                     l2112:
  2986                           
  2987                           ; BSR set to: 0
  2988  0013F6  C07E  F07E         	movff	___awmod@dividend,?___awmod
  2989  0013FA  C07F  F07F         	movff	___awmod@dividend+1,?___awmod+1
  2990  0013FE                     
  2991                           ; BSR set to: 0
  2992  0013FE  0012               	return		;funcret
  2993  001400                     __end_of___awmod:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function ___awdiv *****************
  2997 ;; Defined at:
  2998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  dividend        2    0[BANK0 ] int 
  3001 ;;  divisor         2    2[BANK0 ] int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  quotient        2    6[BANK0 ] int 
  3004 ;;  sign            1    5[BANK0 ] unsigned char 
  3005 ;;  counter         1    4[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  2    0[BANK0 ] int 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        8 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    3
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text2
  3030  001288                     __ptext2:
  3031                           	callstack 0
  3032  001288                     ___awdiv:
  3033                           	callstack 27
  3034  001288  0E00               	movlw	0
  3035  00128A  0100               	movlb	0	; () banked
  3036  00128C  6F83               	movwf	___awdiv@sign& (0+255),b
  3037  00128E                     
  3038                           ; BSR set to: 0
  3039  00128E  BF81               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3040  001290  EF4E  F009         	goto	u1280
  3041  001294  EF4C  F009         	goto	u1281
  3042  001298                     u1281:
  3043  001298  EF54  F009         	goto	l2044
  3044  00129C                     u1280:
  3045  00129C                     
  3046                           ; BSR set to: 0
  3047  00129C  6D80               	negf	___awdiv@divisor& (0+255),b
  3048  00129E  1F81               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3049  0012A0  B0D8               	btfsc	status,0,c
  3050  0012A2  2B81               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3051  0012A4                     
  3052                           ; BSR set to: 0
  3053  0012A4  0E01               	movlw	1
  3054  0012A6  6F83               	movwf	___awdiv@sign& (0+255),b
  3055  0012A8                     l2044:
  3056                           
  3057                           ; BSR set to: 0
  3058  0012A8  BF7F               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  3059  0012AA  EF5B  F009         	goto	u1290
  3060  0012AE  EF59  F009         	goto	u1291
  3061  0012B2                     u1291:
  3062  0012B2  EF61  F009         	goto	l2050
  3063  0012B6                     u1290:
  3064  0012B6                     
  3065                           ; BSR set to: 0
  3066  0012B6  6D7E               	negf	___awdiv@dividend& (0+255),b
  3067  0012B8  1F7F               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3068  0012BA  B0D8               	btfsc	status,0,c
  3069  0012BC  2B7F               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3070  0012BE                     
  3071                           ; BSR set to: 0
  3072  0012BE  0E01               	movlw	1
  3073  0012C0  1B83               	xorwf	___awdiv@sign& (0+255),f,b
  3074  0012C2                     l2050:
  3075                           
  3076                           ; BSR set to: 0
  3077  0012C2  0E00               	movlw	0
  3078  0012C4  6F85               	movwf	(___awdiv@quotient+1)& (0+255),b
  3079  0012C6  0E00               	movlw	0
  3080  0012C8  6F84               	movwf	___awdiv@quotient& (0+255),b
  3081  0012CA                     
  3082                           ; BSR set to: 0
  3083  0012CA  5180               	movf	___awdiv@divisor& (0+255),w,b
  3084  0012CC  1181               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3085  0012CE  B4D8               	btfsc	status,2,c
  3086  0012D0  EF6C  F009         	goto	u1301
  3087  0012D4  EF6E  F009         	goto	u1300
  3088  0012D8                     u1301:
  3089  0012D8  EF96  F009         	goto	l2072
  3090  0012DC                     u1300:
  3091  0012DC                     
  3092                           ; BSR set to: 0
  3093  0012DC  0E01               	movlw	1
  3094  0012DE  6F82               	movwf	___awdiv@counter& (0+255),b
  3095  0012E0  EF76  F009         	goto	l2058
  3096  0012E4                     l2056:
  3097                           
  3098                           ; BSR set to: 0
  3099  0012E4  90D8               	bcf	status,0,c
  3100  0012E6  3780               	rlcf	___awdiv@divisor& (0+255),f,b
  3101  0012E8  3781               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3102  0012EA  2B82               	incf	___awdiv@counter& (0+255),f,b
  3103  0012EC                     l2058:
  3104                           
  3105                           ; BSR set to: 0
  3106  0012EC  AF81               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3107  0012EE  EF7B  F009         	goto	u1311
  3108  0012F2  EF7D  F009         	goto	u1310
  3109  0012F6                     u1311:
  3110  0012F6  EF72  F009         	goto	l2056
  3111  0012FA                     u1310:
  3112  0012FA                     l2060:
  3113                           
  3114                           ; BSR set to: 0
  3115  0012FA  90D8               	bcf	status,0,c
  3116  0012FC  3784               	rlcf	___awdiv@quotient& (0+255),f,b
  3117  0012FE  3785               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3118  001300                     
  3119                           ; BSR set to: 0
  3120  001300  5180               	movf	___awdiv@divisor& (0+255),w,b
  3121  001302  5D7E               	subwf	___awdiv@dividend& (0+255),w,b
  3122  001304  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3123  001306  597F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3124  001308  A0D8               	btfss	status,0,c
  3125  00130A  EF89  F009         	goto	u1321
  3126  00130E  EF8B  F009         	goto	u1320
  3127  001312                     u1321:
  3128  001312  EF90  F009         	goto	l2068
  3129  001316                     u1320:
  3130  001316                     
  3131                           ; BSR set to: 0
  3132  001316  5180               	movf	___awdiv@divisor& (0+255),w,b
  3133  001318  5F7E               	subwf	___awdiv@dividend& (0+255),f,b
  3134  00131A  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3135  00131C  5B7F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3136  00131E                     
  3137                           ; BSR set to: 0
  3138  00131E  8184               	bsf	___awdiv@quotient& (0+255),0,b
  3139  001320                     l2068:
  3140                           
  3141                           ; BSR set to: 0
  3142  001320  90D8               	bcf	status,0,c
  3143  001322  3381               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3144  001324  3380               	rrcf	___awdiv@divisor& (0+255),f,b
  3145  001326                     
  3146                           ; BSR set to: 0
  3147  001326  2F82               	decfsz	___awdiv@counter& (0+255),f,b
  3148  001328  EF7D  F009         	goto	l2060
  3149  00132C                     l2072:
  3150                           
  3151                           ; BSR set to: 0
  3152  00132C  5183               	movf	___awdiv@sign& (0+255),w,b
  3153  00132E  B4D8               	btfsc	status,2,c
  3154  001330  EF9C  F009         	goto	u1331
  3155  001334  EF9E  F009         	goto	u1330
  3156  001338                     u1331:
  3157  001338  EFA2  F009         	goto	l2076
  3158  00133C                     u1330:
  3159  00133C                     
  3160                           ; BSR set to: 0
  3161  00133C  6D84               	negf	___awdiv@quotient& (0+255),b
  3162  00133E  1F85               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3163  001340  B0D8               	btfsc	status,0,c
  3164  001342  2B85               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3165  001344                     l2076:
  3166                           
  3167                           ; BSR set to: 0
  3168  001344  C084  F07E         	movff	___awdiv@quotient,?___awdiv
  3169  001348  C085  F07F         	movff	___awdiv@quotient+1,?___awdiv+1
  3170  00134C                     
  3171                           ; BSR set to: 0
  3172  00134C  0012               	return		;funcret
  3173  00134E                     __end_of___awdiv:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _EepromWrite *****************
  3177 ;; Defined at:
  3178 ;;		line 803 in file "avr-main.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  address         4    0[BANK0 ] unsigned long 
  3181 ;;  data            1    4[BANK0 ] unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:        5 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    3
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text3
  3208  001550                     __ptext3:
  3209                           	callstack 0
  3210  001550                     _EepromWrite:
  3211                           	callstack 27
  3212  001550                     
  3213                           ;avr-main.c: 803: void EepromWrite(uint_fast16_t address, uint_fast8_t data);avr-main.c:
      +                           804: {;avr-main.c: 805:     EEADR = address & 0xFF;
  3214  001550  C07E  FFA9         	movff	EepromWrite@address,4009	;volatile
  3215  001554                     
  3216                           ;avr-main.c: 806:     EEADRH = (address << 8) & 0xFF;
  3217  001554  0E00               	movlw	0
  3218  001556  6EAA               	movwf	170,c	;volatile
  3219  001558                     
  3220                           ;avr-main.c: 808:     EEDATA = data;
  3221  001558  C082  FFA8         	movff	EepromWrite@data,4008	;volatile
  3222  00155C                     
  3223                           ;avr-main.c: 810:     EECON1bits.EEPGD = 0;
  3224  00155C  9EA6               	bcf	166,7,c	;volsfr
  3225  00155E                     
  3226                           ;avr-main.c: 811:     EECON1bits.CFGS = 0;
  3227  00155E  9CA6               	bcf	166,6,c	;volsfr
  3228  001560                     
  3229                           ;avr-main.c: 812:     EECON1bits.WREN = 1;
  3230  001560  84A6               	bsf	166,2,c	;volsfr
  3231  001562                     
  3232                           ;avr-main.c: 813:     INTCONbits.GIE = 0;
  3233  001562  9EF2               	bcf	242,7,c	;volatile
  3234                           
  3235                           ;avr-main.c: 815:     EECON2 = 0x55;
  3236  001564  0E55               	movlw	85
  3237  001566  6EA7               	movwf	167,c	;volsfr
  3238                           
  3239                           ;avr-main.c: 816:     EECON2 = 0xAA;
  3240  001568  0EAA               	movlw	170
  3241  00156A  6EA7               	movwf	167,c	;volsfr
  3242  00156C                     
  3243                           ;avr-main.c: 818:     EECON1bits.WR = 1;
  3244  00156C  82A6               	bsf	166,1,c	;volsfr
  3245  00156E                     
  3246                           ;avr-main.c: 820:     INTCONbits.GIE = 1;
  3247  00156E  8EF2               	bsf	242,7,c	;volatile
  3248  001570                     l321:
  3249  001570  B2A6               	btfsc	166,1,c	;volsfr
  3250  001572  EFBD  F00A         	goto	u1221
  3251  001576  EFBF  F00A         	goto	u1220
  3252  00157A                     u1221:
  3253  00157A  EFB8  F00A         	goto	l321
  3254  00157E                     u1220:
  3255  00157E                     
  3256                           ;avr-main.c: 823:     EECON1bits.WREN = 0;
  3257  00157E  94A6               	bcf	166,2,c	;volsfr
  3258  001580  0012               	return		;funcret
  3259  001582                     __end_of_EepromWrite:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _EepromRead *****************
  3263 ;; Defined at:
  3264 ;;		line 791 in file "avr-main.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  address         4    0[BANK0 ] unsigned long 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      unsigned char 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        4 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text4
  3293  001582                     __ptext4:
  3294                           	callstack 0
  3295  001582                     _EepromRead:
  3296                           	callstack 27
  3297  001582                     
  3298                           ;avr-main.c: 791: uint_fast8_t EepromRead(uint_fast16_t address);avr-main.c: 792: {;avr-
      +                          main.c: 793:     EEADR = address & 0xFF;
  3299  001582  C07E  FFA9         	movff	EepromRead@address,4009	;volatile
  3300  001586                     
  3301                           ;avr-main.c: 794:     EEADRH = (address << 8) & 0xFF;
  3302  001586  0E00               	movlw	0
  3303  001588  6EAA               	movwf	170,c	;volatile
  3304  00158A                     
  3305                           ;avr-main.c: 796:     EECON1bits.EEPGD=0;
  3306  00158A  9EA6               	bcf	166,7,c	;volsfr
  3307  00158C                     
  3308                           ;avr-main.c: 797:     EECON1bits.CFGS=0;
  3309  00158C  9CA6               	bcf	166,6,c	;volsfr
  3310  00158E                     
  3311                           ;avr-main.c: 798:     EECON1bits.RD=1;
  3312  00158E  80A6               	bsf	166,0,c	;volsfr
  3313                           
  3314                           ;avr-main.c: 800:     return EEDATA;
  3315  001590  50A8               	movf	168,w,c	;volatile
  3316  001592  0012               	return		;funcret
  3317  001594                     __end_of_EepromRead:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _isrLowPrio *****************
  3321 ;; Defined at:
  3322 ;;		line 646 in file "avr-main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  percent         4   49[COMRAM] unsigned long 
  3327 ;;  deviation       4   45[COMRAM] unsigned long 
  3328 ;;  sign            1   53[COMRAM] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;Total ram usage:       22 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    2
  3345 ;; This function calls:
  3346 ;;		___lldiv
  3347 ;;		___lmul
  3348 ;; This function is called by:
  3349 ;;		Interrupt level 1
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	intcodelo
  3354  000018                     __pintcodelo:
  3355                           	callstack 0
  3356  000018                     _isrLowPrio:
  3357                           	callstack 27
  3358                           
  3359                           ;incstack = 0
  3360  000018  8042               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3361  00001A  CFD8 F025          	movff	status,??_isrLowPrio+4
  3362  00001E  CFE8 F026          	movff	wreg,??_isrLowPrio+5
  3363  000022  CFE0 F027          	movff	bsr,??_isrLowPrio+6
  3364  000026  CFD9 F028          	movff	fsr2l,??_isrLowPrio+7
  3365  00002A  CFDA F029          	movff	fsr2h,??_isrLowPrio+8
  3366  00002E                     
  3367                           ;avr-main.c: 649:     if (PIR1bits.TMR2IF)
  3368  00002E  A29E               	btfss	158,1,c	;volatile
  3369  000030  EF1C  F000         	goto	i1u209_21
  3370  000034  EF1E  F000         	goto	i1u209_20
  3371  000038                     i1u209_21:
  3372  000038  EF34  F000         	goto	i1l2588
  3373  00003C                     i1u209_20:
  3374  00003C                     
  3375                           ;avr-main.c: 650:     {;avr-main.c: 651:         PIR1bits.TMR2IF = 0;
  3376  00003C  929E               	bcf	158,1,c	;volatile
  3377  00003E                     
  3378                           ;avr-main.c: 653:         if(counter6000Hz < ((0xffffffffu) - 1))
  3379  00003E  0EFE               	movlw	254
  3380  000040  5C3E               	subwf	_counter6000Hz^0,w,c	;volatile
  3381  000042  0EFF               	movlw	255
  3382  000044  583F               	subwfb	(_counter6000Hz+1)^0,w,c	;volatile
  3383  000046  0EFF               	movlw	255
  3384  000048  5840               	subwfb	(_counter6000Hz+2)^0,w,c	;volatile
  3385  00004A  0EFF               	movlw	255
  3386  00004C  5841               	subwfb	(_counter6000Hz+3)^0,w,c	;volatile
  3387  00004E  B0D8               	btfsc	status,0,c
  3388  000050  EF2C  F000         	goto	i1u210_21
  3389  000054  EF2E  F000         	goto	i1u210_20
  3390  000058                     i1u210_21:
  3391  000058  EF34  F000         	goto	i1l2588
  3392  00005C                     i1u210_20:
  3393  00005C                     
  3394                           ;avr-main.c: 654:             counter6000Hz++;
  3395  00005C  0E01               	movlw	1
  3396  00005E  263E               	addwf	_counter6000Hz^0,f,c	;volatile
  3397  000060  0E00               	movlw	0
  3398  000062  223F               	addwfc	(_counter6000Hz+1)^0,f,c	;volatile
  3399  000064  2240               	addwfc	(_counter6000Hz+2)^0,f,c	;volatile
  3400  000066  2241               	addwfc	(_counter6000Hz+3)^0,f,c	;volatile
  3401  000068                     i1l2588:
  3402                           
  3403                           ;avr-main.c: 658:     if (PIR5bits.TMR4IF)
  3404  000068  A07E               	btfss	126,0,c	;volatile
  3405  00006A  EF39  F000         	goto	i1u211_21
  3406  00006E  EF3B  F000         	goto	i1u211_20
  3407  000072                     i1u211_21:
  3408  000072  EF73  F000         	goto	i1l2604
  3409  000076                     i1u211_20:
  3410  000076                     
  3411                           ;avr-main.c: 659:     {;avr-main.c: 660:         PIR5bits.TMR4IF = 0;
  3412  000076  907E               	bcf	126,0,c	;volatile
  3413  000078                     
  3414                           ;avr-main.c: 662:         static uint_fast8_t clockDivider;;avr-main.c: 663:         sta
      +                          tic uint_fast16_t counter500;;avr-main.c: 665:         if(++clockDivider >= 4)
  3415  000078  2A3D               	incf	isrLowPrio@clockDivider^0,f,c
  3416  00007A  0E03               	movlw	3
  3417  00007C  643D               	cpfsgt	isrLowPrio@clockDivider^0,c
  3418  00007E  EF43  F000         	goto	i1u212_21
  3419  000082  EF45  F000         	goto	i1u212_20
  3420  000086                     i1u212_21:
  3421  000086  EF73  F000         	goto	i1l2604
  3422  00008A                     i1u212_20:
  3423  00008A                     
  3424                           ;avr-main.c: 666:         {;avr-main.c: 667:             clockDivider = 0;
  3425  00008A  0E00               	movlw	0
  3426  00008C  6E3D               	movwf	isrLowPrio@clockDivider^0,c
  3427  00008E                     
  3428                           ;avr-main.c: 669:             counter1000Hz++;
  3429  00008E  0E01               	movlw	1
  3430  000090  0100               	movlb	0	; () banked
  3431  000092  2768               	addwf	_counter1000Hz& (0+255),f,b	;volatile
  3432  000094  0E00               	movlw	0
  3433  000096  2369               	addwfc	(_counter1000Hz+1)& (0+255),f,b	;volatile
  3434  000098  236A               	addwfc	(_counter1000Hz+2)& (0+255),f,b	;volatile
  3435  00009A  236B               	addwfc	(_counter1000Hz+3)& (0+255),f,b	;volatile
  3436  00009C                     
  3437                           ; BSR set to: 0
  3438                           ;avr-main.c: 671:             if(++counter500 >= 500)
  3439  00009C  0E01               	movlw	1
  3440  00009E  2639               	addwf	isrLowPrio@counter500^0,f,c
  3441  0000A0  0E00               	movlw	0
  3442  0000A2  223A               	addwfc	(isrLowPrio@counter500+1)^0,f,c
  3443  0000A4  223B               	addwfc	(isrLowPrio@counter500+2)^0,f,c
  3444  0000A6  223C               	addwfc	(isrLowPrio@counter500+3)^0,f,c
  3445  0000A8  503C               	movf	(isrLowPrio@counter500+3)^0,w,c
  3446  0000AA  103B               	iorwf	(isrLowPrio@counter500+2)^0,w,c
  3447  0000AC  E10B               	bnz	i1u213_20
  3448  0000AE  0EF4               	movlw	244
  3449  0000B0  5C39               	subwf	isrLowPrio@counter500^0,w,c
  3450  0000B2  0E01               	movlw	1
  3451  0000B4  583A               	subwfb	(isrLowPrio@counter500+1)^0,w,c
  3452  0000B6  A0D8               	btfss	status,0,c
  3453  0000B8  EF60  F000         	goto	i1u213_21
  3454  0000BC  EF62  F000         	goto	i1u213_20
  3455  0000C0                     i1u213_21:
  3456  0000C0  EF73  F000         	goto	i1l2604
  3457  0000C4                     i1u213_20:
  3458  0000C4                     
  3459                           ; BSR set to: 0
  3460                           ;avr-main.c: 672:             {;avr-main.c: 673:                 counter500 = 0;
  3461  0000C4  0E00               	movlw	0
  3462  0000C6  6E39               	movwf	isrLowPrio@counter500^0,c
  3463  0000C8  0E00               	movlw	0
  3464  0000CA  6E3A               	movwf	(isrLowPrio@counter500+1)^0,c
  3465  0000CC  0E00               	movlw	0
  3466  0000CE  6E3B               	movwf	(isrLowPrio@counter500+2)^0,c
  3467  0000D0  0E00               	movlw	0
  3468  0000D2  6E3C               	movwf	(isrLowPrio@counter500+3)^0,c
  3469  0000D4                     
  3470                           ; BSR set to: 0
  3471                           ;avr-main.c: 674:                 blink = !blink;
  3472  0000D4  A438               	btfss	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3473  0000D6  EF6F  F000         	goto	i1u214_21
  3474  0000DA  EF72  F000         	goto	i1u214_20
  3475  0000DE                     i1u214_21:
  3476  0000DE  8438               	bsf	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3477  0000E0  EF73  F000         	goto	i1u215_25
  3478  0000E4                     i1u214_20:
  3479  0000E4  9438               	bcf	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3480  0000E6                     i1u215_25:
  3481  0000E6                     i1l2604:
  3482                           
  3483                           ;avr-main.c: 680:     if (PIR4bits.CCP3IF)
  3484  0000E6  A07B               	btfss	123,0,c	;volatile
  3485  0000E8  EF78  F000         	goto	i1u216_21
  3486  0000EC  EF7A  F000         	goto	i1u216_20
  3487  0000F0                     i1u216_21:
  3488  0000F0  EF46  F001         	goto	i1l290
  3489  0000F4                     i1u216_20:
  3490  0000F4                     
  3491                           ;avr-main.c: 681:     {;avr-main.c: 682:         PIR4bits.CCP3IF = 0;
  3492  0000F4  907B               	bcf	123,0,c	;volatile
  3493                           
  3494                           ;avr-main.c: 684:         if ((!PORTBbits.RB0 || !PORTBbits.RB2) && !PORTBbits.RB5)
  3495  0000F6  A081               	btfss	129,0,c	;volatile
  3496  0000F8  EF80  F000         	goto	i1u217_21
  3497  0000FC  EF82  F000         	goto	i1u217_20
  3498  000100                     i1u217_21:
  3499  000100  EF89  F000         	goto	i1l277
  3500  000104                     i1u217_20:
  3501  000104  B481               	btfsc	129,2,c	;volatile
  3502  000106  EF87  F000         	goto	i1u218_21
  3503  00010A  EF89  F000         	goto	i1u218_20
  3504  00010E                     i1u218_21:
  3505  00010E  EF46  F001         	goto	i1l290
  3506  000112                     i1u218_20:
  3507  000112                     i1l277:
  3508  000112  BA81               	btfsc	129,5,c	;volatile
  3509  000114  EF8E  F000         	goto	i1u219_21
  3510  000118  EF90  F000         	goto	i1u219_20
  3511  00011C                     i1u219_21:
  3512  00011C  EF46  F001         	goto	i1l290
  3513  000120                     i1u219_20:
  3514  000120                     
  3515                           ;avr-main.c: 685:         {;avr-main.c: 686:             TMR2 = 0;
  3516  000120  0E00               	movlw	0
  3517  000122  6EBC               	movwf	188,c	;volatile
  3518  000124                     
  3519                           ;avr-main.c: 688:             char sign = 1004 > counter6000Hz;
  3520  000124  5041               	movf	(_counter6000Hz+3)^0,w,c	;volatile
  3521  000126  1040               	iorwf	(_counter6000Hz+2)^0,w,c	;volatile
  3522  000128  E10C               	bnz	i1u220_20
  3523  00012A  0EEC               	movlw	236
  3524  00012C  5C3E               	subwf	_counter6000Hz^0,w,c	;volatile
  3525  00012E  0E03               	movlw	3
  3526  000130  583F               	subwfb	(_counter6000Hz+1)^0,w,c	;volatile
  3527  000132  A0D8               	btfss	status,0,c
  3528  000134  EF9E  F000         	goto	i1u220_21
  3529  000138  EFA1  F000         	goto	i1u220_20
  3530  00013C                     i1u220_21:
  3531  00013C  0E01               	movlw	1
  3532  00013E  EFA2  F000         	goto	i1u221_20
  3533  000142                     i1u220_20:
  3534  000142  0E00               	movlw	0
  3535  000144                     i1u221_20:
  3536  000144  6E36               	movwf	isrLowPrio@sign^0,c
  3537  000146                     
  3538                           ;avr-main.c: 689:             uint_fast16_t deviation = sign ?
  3539  000146  5036               	movf	isrLowPrio@sign^0,w,c
  3540  000148  A4D8               	btfss	status,2,c
  3541  00014A  EFA9  F000         	goto	i1u222_21
  3542  00014E  EFAB  F000         	goto	i1u222_20
  3543  000152                     i1u222_21:
  3544  000152  EFB9  F000         	goto	i1l2618
  3545  000156                     i1u222_20:
  3546  000156  0E14               	movlw	20
  3547  000158  243E               	addwf	_counter6000Hz^0,w,c	;volatile
  3548  00015A  6E2E               	movwf	isrLowPrio@deviation^0,c
  3549  00015C  0EFC               	movlw	252
  3550  00015E  203F               	addwfc	(_counter6000Hz+1)^0,w,c	;volatile
  3551  000160  6E2F               	movwf	(isrLowPrio@deviation+1)^0,c
  3552  000162  0EFF               	movlw	255
  3553  000164  2040               	addwfc	(_counter6000Hz+2)^0,w,c	;volatile
  3554  000166  6E30               	movwf	(isrLowPrio@deviation+2)^0,c
  3555  000168  0EFF               	movlw	255
  3556  00016A  2041               	addwfc	(_counter6000Hz+3)^0,w,c	;volatile
  3557  00016C  6E31               	movwf	(isrLowPrio@deviation+3)^0,c
  3558  00016E  EFC5  F000         	goto	i1l281
  3559  000172                     i1l2618:
  3560  000172  503E               	movf	_counter6000Hz^0,w,c	;volatile
  3561  000174  08EC               	sublw	236
  3562  000176  6E2E               	movwf	isrLowPrio@deviation^0,c
  3563  000178  0E03               	movlw	3
  3564  00017A  543F               	subfwb	(_counter6000Hz+1)^0,w,c	;volatile
  3565  00017C  6E2F               	movwf	(isrLowPrio@deviation+1)^0,c
  3566  00017E  0E00               	movlw	0
  3567  000180  5440               	subfwb	(_counter6000Hz+2)^0,w,c	;volatile
  3568  000182  6E30               	movwf	(isrLowPrio@deviation+2)^0,c
  3569  000184  0E00               	movlw	0
  3570  000186  5441               	subfwb	(_counter6000Hz+3)^0,w,c	;volatile
  3571  000188  6E31               	movwf	(isrLowPrio@deviation+3)^0,c
  3572  00018A                     i1l281:
  3573                           
  3574                           ;avr-main.c: 692:             uint_fast16_t percent = deviation >= 99 ?
  3575  00018A  5031               	movf	(isrLowPrio@deviation+3)^0,w,c
  3576  00018C  1030               	iorwf	(isrLowPrio@deviation+2)^0,w,c
  3577  00018E  102F               	iorwf	(isrLowPrio@deviation+1)^0,w,c
  3578  000190  E107               	bnz	i1u223_21
  3579  000192  0E63               	movlw	99
  3580  000194  5C2E               	subwf	isrLowPrio@deviation^0,w,c
  3581  000196  B0D8               	btfsc	status,0,c
  3582  000198  EFD0  F000         	goto	i1u223_21
  3583  00019C  EFD2  F000         	goto	i1u223_20
  3584  0001A0                     i1u223_21:
  3585  0001A0  EF00  F001         	goto	i1l2622
  3586  0001A4                     i1u223_20:
  3587  0001A4  C02E  F008         	movff	isrLowPrio@deviation,___lmul@multiplier
  3588  0001A8  C02F  F009         	movff	isrLowPrio@deviation+1,___lmul@multiplier+1
  3589  0001AC  C030  F00A         	movff	isrLowPrio@deviation+2,___lmul@multiplier+2
  3590  0001B0  C031  F00B         	movff	isrLowPrio@deviation+3,___lmul@multiplier+3
  3591  0001B4  0E0A               	movlw	10
  3592  0001B6  6E0C               	movwf	___lmul@multiplicand^0,c
  3593  0001B8  0E00               	movlw	0
  3594  0001BA  6E0D               	movwf	(___lmul@multiplicand+1)^0,c
  3595  0001BC  0E00               	movlw	0
  3596  0001BE  6E0E               	movwf	(___lmul@multiplicand+2)^0,c
  3597  0001C0  0E00               	movlw	0
  3598  0001C2  6E0F               	movwf	(___lmul@multiplicand+3)^0,c
  3599  0001C4  EC52  F00A         	call	___lmul	;wreg free
  3600  0001C8  C008  F014         	movff	?___lmul,___lldiv@dividend
  3601  0001CC  C009  F015         	movff	?___lmul+1,___lldiv@dividend+1
  3602  0001D0  C00A  F016         	movff	?___lmul+2,___lldiv@dividend+2
  3603  0001D4  C00B  F017         	movff	?___lmul+3,___lldiv@dividend+3
  3604  0001D8  0E0A               	movlw	10
  3605  0001DA  6E18               	movwf	___lldiv@divisor^0,c
  3606  0001DC  0E00               	movlw	0
  3607  0001DE  6E19               	movwf	(___lldiv@divisor+1)^0,c
  3608  0001E0  0E00               	movlw	0
  3609  0001E2  6E1A               	movwf	(___lldiv@divisor+2)^0,c
  3610  0001E4  0E00               	movlw	0
  3611  0001E6  6E1B               	movwf	(___lldiv@divisor+3)^0,c
  3612  0001E8  EC00  F00A         	call	___lldiv	;wreg free
  3613  0001EC  C014  F032         	movff	?___lldiv,isrLowPrio@percent
  3614  0001F0  C015  F033         	movff	?___lldiv+1,isrLowPrio@percent+1
  3615  0001F4  C016  F034         	movff	?___lldiv+2,isrLowPrio@percent+2
  3616  0001F8  C017  F035         	movff	?___lldiv+3,isrLowPrio@percent+3
  3617  0001FC  EF08  F001         	goto	i1l285
  3618  000200                     i1l2622:
  3619  000200  0E63               	movlw	99
  3620  000202  6E32               	movwf	isrLowPrio@percent^0,c
  3621  000204  0E00               	movlw	0
  3622  000206  6E33               	movwf	(isrLowPrio@percent+1)^0,c
  3623  000208  0E00               	movlw	0
  3624  00020A  6E34               	movwf	(isrLowPrio@percent+2)^0,c
  3625  00020C  0E00               	movlw	0
  3626  00020E  6E35               	movwf	(isrLowPrio@percent+3)^0,c
  3627  000210                     i1l285:
  3628                           
  3629                           ;avr-main.c: 696:             driveParams->speedDeviationPercentTenths = sign ? (int_fas
      +                          t16_t)percent : -((int_fast16_t)percent);
  3630  000210  5036               	movf	isrLowPrio@sign^0,w,c
  3631  000212  A4D8               	btfss	status,2,c
  3632  000214  EF0E  F001         	goto	i1u224_21
  3633  000218  EF10  F001         	goto	i1u224_20
  3634  00021C                     i1u224_21:
  3635  00021C  EF2B  F001         	goto	i1l287
  3636  000220                     i1u224_20:
  3637  000220  C032  F021         	movff	isrLowPrio@percent,??_isrLowPrio
  3638  000224  C033  F022         	movff	isrLowPrio@percent+1,??_isrLowPrio+1
  3639  000228  C034  F023         	movff	isrLowPrio@percent+2,??_isrLowPrio+2
  3640  00022C  C035  F024         	movff	isrLowPrio@percent+3,??_isrLowPrio+3
  3641  000230  1E21               	comf	??_isrLowPrio^0,f,c
  3642  000232  1E22               	comf	(??_isrLowPrio+1)^0,f,c
  3643  000234  1E23               	comf	(??_isrLowPrio+2)^0,f,c
  3644  000236  1E24               	comf	(??_isrLowPrio+3)^0,f,c
  3645  000238  2A21               	incf	??_isrLowPrio^0,f,c
  3646  00023A  0E00               	movlw	0
  3647  00023C  2222               	addwfc	(??_isrLowPrio+1)^0,f,c
  3648  00023E  2223               	addwfc	(??_isrLowPrio+2)^0,f,c
  3649  000240  2224               	addwfc	(??_isrLowPrio+3)^0,f,c
  3650  000242  C021  F02A         	movff	??_isrLowPrio,_isrLowPrio$1074
  3651  000246  C022  F02B         	movff	??_isrLowPrio+1,_isrLowPrio$1074+1
  3652  00024A  C023  F02C         	movff	??_isrLowPrio+2,_isrLowPrio$1074+2
  3653  00024E  C024  F02D         	movff	??_isrLowPrio+3,_isrLowPrio$1074+3
  3654  000252  EF33  F001         	goto	i1l2626
  3655  000256                     i1l287:
  3656  000256  C032  F02A         	movff	isrLowPrio@percent,_isrLowPrio$1074
  3657  00025A  C033  F02B         	movff	isrLowPrio@percent+1,_isrLowPrio$1074+1
  3658  00025E  C034  F02C         	movff	isrLowPrio@percent+2,_isrLowPrio$1074+2
  3659  000262  C035  F02D         	movff	isrLowPrio@percent+3,_isrLowPrio$1074+3
  3660  000266                     i1l2626:
  3661  000266  0100               	movlb	0	; () banked
  3662  000268  EE20 F002          	lfsr	2,2
  3663  00026C  5190               	movf	_driveParams& (0+255),w,b
  3664  00026E  26D9               	addwf	fsr2l,f,c
  3665  000270  5191               	movf	(_driveParams+1)& (0+255),w,b
  3666  000272  22DA               	addwfc	fsr2h,f,c
  3667  000274  C02A  FFDF         	movff	_isrLowPrio$1074,indf2
  3668  000278                     
  3669                           ; BSR set to: 0
  3670                           ;avr-main.c: 698:             counter6000Hz = 0;
  3671  000278  0E00               	movlw	0
  3672  00027A  6E3E               	movwf	_counter6000Hz^0,c	;volatile
  3673  00027C  0E00               	movlw	0
  3674  00027E  6E3F               	movwf	(_counter6000Hz+1)^0,c	;volatile
  3675  000280  0E00               	movlw	0
  3676  000282  6E40               	movwf	(_counter6000Hz+2)^0,c	;volatile
  3677  000284  0E00               	movlw	0
  3678  000286  6E41               	movwf	(_counter6000Hz+3)^0,c	;volatile
  3679  000288                     
  3680                           ; BSR set to: 0
  3681                           ;avr-main.c: 699:             TMR2 = 0;
  3682  000288  0E00               	movlw	0
  3683  00028A  6EBC               	movwf	188,c	;volatile
  3684  00028C                     i1l290:
  3685  00028C  C029  FFDA         	movff	??_isrLowPrio+8,fsr2h
  3686  000290  C028  FFD9         	movff	??_isrLowPrio+7,fsr2l
  3687  000294  C027  FFE0         	movff	??_isrLowPrio+6,bsr
  3688  000298  C026  FFE8         	movff	??_isrLowPrio+5,wreg
  3689  00029C  C025  FFD8         	movff	??_isrLowPrio+4,status
  3690  0002A0  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3691  0002A2  0010               	retfie	
  3692  0002A4                     __end_of_isrLowPrio:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function ___lmul *****************
  3696 ;; Defined at:
  3697 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  multiplier      4    7[COMRAM] unsigned long 
  3700 ;;  multiplicand    4   11[COMRAM] unsigned long 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  product         4   15[COMRAM] unsigned long 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  4    7[COMRAM] unsigned long 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:       12 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_isrLowPrio
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text6
  3727  0014A4                     __ptext6:
  3728                           	callstack 0
  3729  0014A4                     ___lmul:
  3730                           	callstack 27
  3731  0014A4  0E00               	movlw	0
  3732  0014A6  6E10               	movwf	___lmul@product^0,c
  3733  0014A8  0E00               	movlw	0
  3734  0014AA  6E11               	movwf	(___lmul@product+1)^0,c
  3735  0014AC  0E00               	movlw	0
  3736  0014AE  6E12               	movwf	(___lmul@product+2)^0,c
  3737  0014B0  0E00               	movlw	0
  3738  0014B2  6E13               	movwf	(___lmul@product+3)^0,c
  3739  0014B4                     i1l2006:
  3740  0014B4  A008               	btfss	___lmul@multiplier^0,0,c
  3741  0014B6  EF5F  F00A         	goto	i1u123_21
  3742  0014BA  EF61  F00A         	goto	i1u123_20
  3743  0014BE                     i1u123_21:
  3744  0014BE  EF69  F00A         	goto	i1l2010
  3745  0014C2                     i1u123_20:
  3746  0014C2  500C               	movf	___lmul@multiplicand^0,w,c
  3747  0014C4  2610               	addwf	___lmul@product^0,f,c
  3748  0014C6  500D               	movf	(___lmul@multiplicand+1)^0,w,c
  3749  0014C8  2211               	addwfc	(___lmul@product+1)^0,f,c
  3750  0014CA  500E               	movf	(___lmul@multiplicand+2)^0,w,c
  3751  0014CC  2212               	addwfc	(___lmul@product+2)^0,f,c
  3752  0014CE  500F               	movf	(___lmul@multiplicand+3)^0,w,c
  3753  0014D0  2213               	addwfc	(___lmul@product+3)^0,f,c
  3754  0014D2                     i1l2010:
  3755  0014D2  90D8               	bcf	status,0,c
  3756  0014D4  360C               	rlcf	___lmul@multiplicand^0,f,c
  3757  0014D6  360D               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3758  0014D8  360E               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3759  0014DA  360F               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3760  0014DC  90D8               	bcf	status,0,c
  3761  0014DE  320B               	rrcf	(___lmul@multiplier+3)^0,f,c
  3762  0014E0  320A               	rrcf	(___lmul@multiplier+2)^0,f,c
  3763  0014E2  3209               	rrcf	(___lmul@multiplier+1)^0,f,c
  3764  0014E4  3208               	rrcf	___lmul@multiplier^0,f,c
  3765  0014E6  5008               	movf	___lmul@multiplier^0,w,c
  3766  0014E8  1009               	iorwf	(___lmul@multiplier+1)^0,w,c
  3767  0014EA  100A               	iorwf	(___lmul@multiplier+2)^0,w,c
  3768  0014EC  100B               	iorwf	(___lmul@multiplier+3)^0,w,c
  3769  0014EE  A4D8               	btfss	status,2,c
  3770  0014F0  EF7C  F00A         	goto	i1u124_21
  3771  0014F4  EF7E  F00A         	goto	i1u124_20
  3772  0014F8                     i1u124_21:
  3773  0014F8  EF5A  F00A         	goto	i1l2006
  3774  0014FC                     i1u124_20:
  3775  0014FC  C010  F008         	movff	___lmul@product,?___lmul
  3776  001500  C011  F009         	movff	___lmul@product+1,?___lmul+1
  3777  001504  C012  F00A         	movff	___lmul@product+2,?___lmul+2
  3778  001508  C013  F00B         	movff	___lmul@product+3,?___lmul+3
  3779  00150C  0012               	return		;funcret
  3780  00150E                     __end_of___lmul:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function ___lldiv *****************
  3784 ;; Defined at:
  3785 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  dividend        4   19[COMRAM] unsigned long 
  3788 ;;  divisor         4   23[COMRAM] unsigned long 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  quotient        4   27[COMRAM] unsigned long 
  3791 ;;  counter         1   31[COMRAM] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  4   19[COMRAM] unsigned long 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;Total ram usage:       13 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_isrLowPrio
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text7
  3816  001400                     __ptext7:
  3817                           	callstack 0
  3818  001400                     ___lldiv:
  3819                           	callstack 27
  3820  001400  0E00               	movlw	0
  3821  001402  6E1C               	movwf	___lldiv@quotient^0,c
  3822  001404  0E00               	movlw	0
  3823  001406  6E1D               	movwf	(___lldiv@quotient+1)^0,c
  3824  001408  0E00               	movlw	0
  3825  00140A  6E1E               	movwf	(___lldiv@quotient+2)^0,c
  3826  00140C  0E00               	movlw	0
  3827  00140E  6E1F               	movwf	(___lldiv@quotient+3)^0,c
  3828  001410  5018               	movf	___lldiv@divisor^0,w,c
  3829  001412  1019               	iorwf	(___lldiv@divisor+1)^0,w,c
  3830  001414  101A               	iorwf	(___lldiv@divisor+2)^0,w,c
  3831  001416  101B               	iorwf	(___lldiv@divisor+3)^0,w,c
  3832  001418  B4D8               	btfsc	status,2,c
  3833  00141A  EF11  F00A         	goto	i1u125_21
  3834  00141E  EF13  F00A         	goto	i1u125_20
  3835  001422                     i1u125_21:
  3836  001422  EF49  F00A         	goto	i1l354
  3837  001426                     i1u125_20:
  3838  001426  0E01               	movlw	1
  3839  001428  6E20               	movwf	___lldiv@counter^0,c
  3840  00142A  EF1D  F00A         	goto	i1l2022
  3841  00142E                     i1l2020:
  3842  00142E  90D8               	bcf	status,0,c
  3843  001430  3618               	rlcf	___lldiv@divisor^0,f,c
  3844  001432  3619               	rlcf	(___lldiv@divisor+1)^0,f,c
  3845  001434  361A               	rlcf	(___lldiv@divisor+2)^0,f,c
  3846  001436  361B               	rlcf	(___lldiv@divisor+3)^0,f,c
  3847  001438  2A20               	incf	___lldiv@counter^0,f,c
  3848  00143A                     i1l2022:
  3849  00143A  AE1B               	btfss	(___lldiv@divisor+3)^0,7,c
  3850  00143C  EF22  F00A         	goto	i1u126_21
  3851  001440  EF24  F00A         	goto	i1u126_20
  3852  001444                     i1u126_21:
  3853  001444  EF17  F00A         	goto	i1l2020
  3854  001448                     i1u126_20:
  3855  001448                     i1l2024:
  3856  001448  90D8               	bcf	status,0,c
  3857  00144A  361C               	rlcf	___lldiv@quotient^0,f,c
  3858  00144C  361D               	rlcf	(___lldiv@quotient+1)^0,f,c
  3859  00144E  361E               	rlcf	(___lldiv@quotient+2)^0,f,c
  3860  001450  361F               	rlcf	(___lldiv@quotient+3)^0,f,c
  3861  001452  5018               	movf	___lldiv@divisor^0,w,c
  3862  001454  5C14               	subwf	___lldiv@dividend^0,w,c
  3863  001456  5019               	movf	(___lldiv@divisor+1)^0,w,c
  3864  001458  5815               	subwfb	(___lldiv@dividend+1)^0,w,c
  3865  00145A  501A               	movf	(___lldiv@divisor+2)^0,w,c
  3866  00145C  5816               	subwfb	(___lldiv@dividend+2)^0,w,c
  3867  00145E  501B               	movf	(___lldiv@divisor+3)^0,w,c
  3868  001460  5817               	subwfb	(___lldiv@dividend+3)^0,w,c
  3869  001462  A0D8               	btfss	status,0,c
  3870  001464  EF36  F00A         	goto	i1u127_21
  3871  001468  EF38  F00A         	goto	i1u127_20
  3872  00146C                     i1u127_21:
  3873  00146C  EF41  F00A         	goto	i1l2032
  3874  001470                     i1u127_20:
  3875  001470  5018               	movf	___lldiv@divisor^0,w,c
  3876  001472  5E14               	subwf	___lldiv@dividend^0,f,c
  3877  001474  5019               	movf	(___lldiv@divisor+1)^0,w,c
  3878  001476  5A15               	subwfb	(___lldiv@dividend+1)^0,f,c
  3879  001478  501A               	movf	(___lldiv@divisor+2)^0,w,c
  3880  00147A  5A16               	subwfb	(___lldiv@dividend+2)^0,f,c
  3881  00147C  501B               	movf	(___lldiv@divisor+3)^0,w,c
  3882  00147E  5A17               	subwfb	(___lldiv@dividend+3)^0,f,c
  3883  001480  801C               	bsf	___lldiv@quotient^0,0,c
  3884  001482                     i1l2032:
  3885  001482  90D8               	bcf	status,0,c
  3886  001484  321B               	rrcf	(___lldiv@divisor+3)^0,f,c
  3887  001486  321A               	rrcf	(___lldiv@divisor+2)^0,f,c
  3888  001488  3219               	rrcf	(___lldiv@divisor+1)^0,f,c
  3889  00148A  3218               	rrcf	___lldiv@divisor^0,f,c
  3890  00148C  2E20               	decfsz	___lldiv@counter^0,f,c
  3891  00148E  EF24  F00A         	goto	i1l2024
  3892  001492                     i1l354:
  3893  001492  C01C  F014         	movff	___lldiv@quotient,?___lldiv
  3894  001496  C01D  F015         	movff	___lldiv@quotient+1,?___lldiv+1
  3895  00149A  C01E  F016         	movff	___lldiv@quotient+2,?___lldiv+2
  3896  00149E  C01F  F017         	movff	___lldiv@quotient+3,?___lldiv+3
  3897  0014A2  0012               	return		;funcret
  3898  0014A4                     __end_of___lldiv:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _isrHighPrio *****************
  3902 ;; Defined at:
  3903 ;;		line 704 in file "avr-main.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;Total ram usage:        7 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		Interrupt level 2
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	intcode
  3931  000008                     __pintcode:
  3932                           	callstack 0
  3933  000008                     _isrHighPrio:
  3934                           	callstack 27
  3935                           
  3936                           ;incstack = 0
  3937  000008  8242               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3938  00000A  EF5A  F008         	goto	int_func
  3939                           
  3940                           	psect	intcode_body
  3941  0010B4                     __pintcode_body:
  3942                           	callstack 27
  3943  0010B4                     int_func:
  3944                           	callstack 27
  3945  0010B4  CFE1 F004          	movff	fsr1l,??_isrHighPrio+3
  3946  0010B8  CFE2 F005          	movff	fsr1h,??_isrHighPrio+4
  3947  0010BC  CFD9 F006          	movff	fsr2l,??_isrHighPrio+5
  3948  0010C0  CFDA F007          	movff	fsr2h,??_isrHighPrio+6
  3949  0010C4                     
  3950                           ;avr-main.c: 707:     if (PIR4bits.CCP5IF)
  3951  0010C4  A47B               	btfss	123,2,c	;volatile
  3952  0010C6  EF67  F008         	goto	i2u225_41
  3953  0010CA  EF69  F008         	goto	i2u225_40
  3954  0010CE                     i2u225_41:
  3955  0010CE  EFD5  F008         	goto	i2l2650
  3956  0010D2                     i2u225_40:
  3957  0010D2                     
  3958                           ;avr-main.c: 708:     {;avr-main.c: 709:         PIR4bits.CCP5IF = 0;
  3959  0010D2  947B               	bcf	123,2,c	;volatile
  3960                           
  3961                           ;avr-main.c: 711:         if(!PORTBbits.RB0 || !PORTBbits.RB2)
  3962  0010D4  A081               	btfss	129,0,c	;volatile
  3963  0010D6  EF6F  F008         	goto	i2u226_41
  3964  0010DA  EF71  F008         	goto	i2u226_40
  3965  0010DE                     i2u226_41:
  3966  0010DE  EF78  F008         	goto	i2l298
  3967  0010E2                     i2u226_40:
  3968  0010E2  B481               	btfsc	129,2,c	;volatile
  3969  0010E4  EF76  F008         	goto	i2u227_41
  3970  0010E8  EF78  F008         	goto	i2u227_40
  3971  0010EC                     i2u227_41:
  3972  0010EC  EFD5  F008         	goto	i2l2650
  3973  0010F0                     i2u227_40:
  3974  0010F0                     i2l298:
  3975                           
  3976                           ;avr-main.c: 712:         {;avr-main.c: 714:             __nop();__nop();__nop();__nop()
      +                          ;
  3977  0010F0  F000               	nop	
  3978  0010F2  F000               	nop	
  3979  0010F4  F000               	nop	
  3980  0010F6  F000               	nop	
  3981                           
  3982                           ;avr-main.c: 715:             __nop();__nop();__nop();__nop();
  3983  0010F8  F000               	nop	
  3984  0010FA  F000               	nop	
  3985  0010FC  F000               	nop	
  3986  0010FE  F000               	nop	
  3987                           
  3988                           ;avr-main.c: 716:             __nop();__nop();__nop();__nop();
  3989  001100  F000               	nop	
  3990  001102  F000               	nop	
  3991  001104  F000               	nop	
  3992  001106  F000               	nop	
  3993                           
  3994                           ;avr-main.c: 719:             if (!PORTAbits.RA4 && PORTAbits.RA0)
  3995  001108  B880               	btfsc	128,4,c	;volatile
  3996  00110A  EF89  F008         	goto	i2u228_41
  3997  00110E  EF8B  F008         	goto	i2u228_40
  3998  001112                     i2u228_41:
  3999  001112  EFD5  F008         	goto	i2l2650
  4000  001116                     i2u228_40:
  4001  001116  A080               	btfss	128,0,c	;volatile
  4002  001118  EF90  F008         	goto	i2u229_41
  4003  00111C  EF92  F008         	goto	i2u229_40
  4004  001120                     i2u229_41:
  4005  001120  EFD5  F008         	goto	i2l2650
  4006  001124                     i2u229_40:
  4007  001124                     
  4008                           ;avr-main.c: 720:             {;avr-main.c: 721:                 if (!PORTAbits.RA3)
  4009  001124  B680               	btfsc	128,3,c	;volatile
  4010  001126  EF97  F008         	goto	i2u230_41
  4011  00112A  EF99  F008         	goto	i2u230_40
  4012  00112E                     i2u230_41:
  4013  00112E  EFC0  F008         	goto	i2l2646
  4014  001132                     i2u230_40:
  4015  001132                     
  4016                           ;avr-main.c: 722:                 {;avr-main.c: 723:                     if (++(drivePar
      +                          ams->track) > driveParams->maxTrack)
  4017  001132  C090  FFD9         	movff	_driveParams,fsr2l
  4018  001136  C091  FFDA         	movff	_driveParams+1,fsr2h
  4019  00113A  2ADF               	incf	indf2,f,c
  4020  00113C  0100               	movlb	0	; () banked
  4021  00113E  EE10 F001          	lfsr	1,1
  4022  001142  5190               	movf	_driveParams& (0+255),w,b
  4023  001144  26E1               	addwf	fsr1l,f,c
  4024  001146  5191               	movf	(_driveParams+1)& (0+255),w,b
  4025  001148  22E2               	addwfc	fsr1h,f,c
  4026  00114A  50E6               	movf	postinc1,w,c
  4027  00114C  0A80               	xorlw	128
  4028  00114E  6E03               	movwf	(??_isrHighPrio+2)^0,c
  4029  001150  50DE               	movf	postinc2,w,c
  4030  001152  0A80               	xorlw	128
  4031  001154  5C03               	subwf	(??_isrHighPrio+2)^0,w,c
  4032  001156  B0D8               	btfsc	status,0,c
  4033  001158  EFB0  F008         	goto	i2u231_41
  4034  00115C  EFB2  F008         	goto	i2u231_40
  4035  001160                     i2u231_41:
  4036  001160  EFD5  F008         	goto	i2l296
  4037  001164                     i2u231_40:
  4038  001164                     
  4039                           ; BSR set to: 0
  4040                           ;avr-main.c: 724:                         driveParams->track = driveParams->maxTrack;
  4041  001164  EE20 F001          	lfsr	2,1
  4042  001168  5190               	movf	_driveParams& (0+255),w,b
  4043  00116A  26D9               	addwf	fsr2l,f,c
  4044  00116C  5191               	movf	(_driveParams+1)& (0+255),w,b
  4045  00116E  22DA               	addwfc	fsr2h,f,c
  4046  001170  C090  FFE1         	movff	_driveParams,fsr1l
  4047  001174  C091  FFE2         	movff	_driveParams+1,fsr1h
  4048  001178  CFDF FFE7          	movff	indf2,indf1
  4049  00117C  EFD5  F008         	goto	i2l2650
  4050  001180                     i2l2646:
  4051                           
  4052                           ;avr-main.c: 727:                 {;avr-main.c: 728:                     if (--(drivePar
      +                          ams->track) < 0)
  4053  001180  C090  FFD9         	movff	_driveParams,fsr2l
  4054  001184  C091  FFDA         	movff	_driveParams+1,fsr2h
  4055  001188  06DF               	decf	indf2,f,c
  4056  00118A  0E00               	movlw	0
  4057  00118C  BEDB               	btfsc	plusw2,7,c
  4058  00118E  EFCD  F008         	goto	i2u232_40
  4059  001192  EFCB  F008         	goto	i2u232_41
  4060  001196                     i2u232_41:
  4061  001196  EFD5  F008         	goto	i2l296
  4062  00119A                     i2u232_40:
  4063  00119A                     
  4064                           ;avr-main.c: 729:                         driveParams->track = 0;
  4065  00119A  C090  FFD9         	movff	_driveParams,fsr2l
  4066  00119E  C091  FFDA         	movff	_driveParams+1,fsr2h
  4067  0011A2  0E00               	movlw	0
  4068  0011A4  6EDF               	movwf	indf2,c
  4069  0011A6  EFD5  F008         	goto	i2l2650
  4070  0011AA                     i2l296:
  4071  0011AA                     i2l2650:
  4072                           
  4073                           ;avr-main.c: 736:     if (PIR2bits.CCP2IF)
  4074  0011AA  A0A1               	btfss	161,0,c	;volatile
  4075  0011AC  EFDA  F008         	goto	i2u233_41
  4076  0011B0  EFDC  F008         	goto	i2u233_40
  4077  0011B4                     i2u233_41:
  4078  0011B4  EFFA  F008         	goto	i2l2658
  4079  0011B8                     i2u233_40:
  4080  0011B8                     
  4081                           ;avr-main.c: 737:     {;avr-main.c: 738:         PIR2bits.CCP2IF = 0;
  4082  0011B8  90A1               	bcf	161,0,c	;volatile
  4083                           
  4084                           ;avr-main.c: 740:         if (!PORTBbits.RB0 || !PORTBbits.RB2)
  4085  0011BA  A081               	btfss	129,0,c	;volatile
  4086  0011BC  EFE2  F008         	goto	i2u234_41
  4087  0011C0  EFE4  F008         	goto	i2u234_40
  4088  0011C4                     i2u234_41:
  4089  0011C4  EFEB  F008         	goto	i2l307
  4090  0011C8                     i2u234_40:
  4091  0011C8  B481               	btfsc	129,2,c	;volatile
  4092  0011CA  EFE9  F008         	goto	i2u235_41
  4093  0011CE  EFEB  F008         	goto	i2u235_40
  4094  0011D2                     i2u235_41:
  4095  0011D2  EFFA  F008         	goto	i2l2658
  4096  0011D6                     i2u235_40:
  4097  0011D6                     i2l307:
  4098                           
  4099                           ;avr-main.c: 741:         {;avr-main.c: 743:             __nop();__nop();
  4100  0011D6  F000               	nop	
  4101  0011D8  F000               	nop	
  4102                           
  4103                           ;avr-main.c: 745:             if (!PORTBbits.RB3)
  4104  0011DA  B681               	btfsc	129,3,c	;volatile
  4105  0011DC  EFF2  F008         	goto	i2u236_41
  4106  0011E0  EFF4  F008         	goto	i2u236_40
  4107  0011E4                     i2u236_41:
  4108  0011E4  EFFA  F008         	goto	i2l2658
  4109  0011E8                     i2u236_40:
  4110  0011E8                     
  4111                           ;avr-main.c: 746:             {;avr-main.c: 747:                 driveParams->track = 0;
  4112  0011E8  C090  FFD9         	movff	_driveParams,fsr2l
  4113  0011EC  C091  FFDA         	movff	_driveParams+1,fsr2h
  4114  0011F0  0E00               	movlw	0
  4115  0011F2  6EDF               	movwf	indf2,c
  4116  0011F4                     i2l2658:
  4117                           
  4118                           ;avr-main.c: 753:     if (INTCONbits.INT0IF)
  4119  0011F4  A2F2               	btfss	242,1,c	;volatile
  4120  0011F6  EFFF  F008         	goto	i2u237_41
  4121  0011FA  EF01  F009         	goto	i2u237_40
  4122  0011FE                     i2u237_41:
  4123  0011FE  EF1A  F009         	goto	i2l2668
  4124  001202                     i2u237_40:
  4125  001202                     
  4126                           ;avr-main.c: 754:     {;avr-main.c: 755:         INTCONbits.INT0IF = 0;
  4127  001202  92F2               	bcf	242,1,c	;volatile
  4128                           
  4129                           ;avr-main.c: 757:         if (!PORTBbits.RB0)
  4130  001204  B081               	btfsc	129,0,c	;volatile
  4131  001206  EF07  F009         	goto	i2u238_41
  4132  00120A  EF09  F009         	goto	i2u238_40
  4133  00120E                     i2u238_41:
  4134  00120E  EF1A  F009         	goto	i2l2668
  4135  001212                     i2u238_40:
  4136  001212                     
  4137                           ;avr-main.c: 758:         {;avr-main.c: 760:             __nop();__nop();
  4138  001212  F000               	nop	
  4139  001214  F000               	nop	
  4140                           
  4141                           ;avr-main.c: 762:             if (!PORTBbits.RB3)
  4142  001216  B681               	btfsc	129,3,c	;volatile
  4143  001218  EF10  F009         	goto	i2u239_41
  4144  00121C  EF12  F009         	goto	i2u239_40
  4145  001220                     i2u239_41:
  4146  001220  EF15  F009         	goto	i2l2666
  4147  001224                     i2u239_40:
  4148  001224                     
  4149                           ;avr-main.c: 763:             {;avr-main.c: 764:                 driveParams_A.track = 0
      +                          ;
  4150  001224  0E00               	movlw	0
  4151  001226  0100               	movlb	0	; () banked
  4152  001228  6F77               	movwf	_driveParams_A& (0+255),b	;volatile
  4153  00122A                     i2l2666:
  4154                           
  4155                           ;avr-main.c: 767:             driveParams = &driveParams_A;
  4156  00122A  0E77               	movlw	low _driveParams_A
  4157  00122C  0100               	movlb	0	; () banked
  4158  00122E  6F90               	movwf	_driveParams& (0+255),b
  4159  001230  0E00               	movlw	high _driveParams_A
  4160  001232  6F91               	movwf	(_driveParams+1)& (0+255),b
  4161  001234                     i2l2668:
  4162                           
  4163                           ;avr-main.c: 772:     if (INTCON3bits.INT2IF)
  4164  001234  A2F0               	btfss	240,1,c	;volatile
  4165  001236  EF1F  F009         	goto	i2u240_41
  4166  00123A  EF21  F009         	goto	i2u240_40
  4167  00123E                     i2u240_41:
  4168  00123E  EF3A  F009         	goto	i2l315
  4169  001242                     i2u240_40:
  4170  001242                     
  4171                           ;avr-main.c: 773:     {;avr-main.c: 774:         INTCON3bits.INT2IF = 0;
  4172  001242  92F0               	bcf	240,1,c	;volatile
  4173                           
  4174                           ;avr-main.c: 776:         if (!PORTBbits.RB2)
  4175  001244  B481               	btfsc	129,2,c	;volatile
  4176  001246  EF27  F009         	goto	i2u241_41
  4177  00124A  EF29  F009         	goto	i2u241_40
  4178  00124E                     i2u241_41:
  4179  00124E  EF3A  F009         	goto	i2l315
  4180  001252                     i2u241_40:
  4181  001252                     
  4182                           ;avr-main.c: 777:         {;avr-main.c: 779:             __nop();__nop();
  4183  001252  F000               	nop	
  4184  001254  F000               	nop	
  4185                           
  4186                           ;avr-main.c: 781:             if (!PORTBbits.RB3)
  4187  001256  B681               	btfsc	129,3,c	;volatile
  4188  001258  EF30  F009         	goto	i2u242_41
  4189  00125C  EF32  F009         	goto	i2u242_40
  4190  001260                     i2u242_41:
  4191  001260  EF35  F009         	goto	i2l2676
  4192  001264                     i2u242_40:
  4193  001264                     
  4194                           ;avr-main.c: 782:             {;avr-main.c: 783:                 driveParams_B.track = 0
      +                          ;
  4195  001264  0E00               	movlw	0
  4196  001266  0100               	movlb	0	; () banked
  4197  001268  6F70               	movwf	_driveParams_B& (0+255),b	;volatile
  4198  00126A                     i2l2676:
  4199                           
  4200                           ;avr-main.c: 786:             driveParams = &driveParams_B;
  4201  00126A  0E70               	movlw	low _driveParams_B
  4202  00126C  0100               	movlb	0	; () banked
  4203  00126E  6F90               	movwf	_driveParams& (0+255),b
  4204  001270  0E00               	movlw	high _driveParams_B
  4205  001272  6F91               	movwf	(_driveParams+1)& (0+255),b
  4206  001274                     i2l315:
  4207  001274  C007  FFDA         	movff	??_isrHighPrio+6,fsr2h
  4208  001278  C006  FFD9         	movff	??_isrHighPrio+5,fsr2l
  4209  00127C  C005  FFE2         	movff	??_isrHighPrio+4,fsr1h
  4210  001280  C004  FFE1         	movff	??_isrHighPrio+3,fsr1l
  4211  001284  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4212  001286  0011               	retfie		f
  4213  001288                     __end_of_isrHighPrio:
  4214                           	callstack 0
  4215  0000                     
  4216                           	psect	rparam
  4217  0000                     
  4218                           	psect	temp
  4219  000042                     btemp:
  4220                           	callstack 0
  4221  000042                     	ds	1
  4222  0000                     int$flags	set	btemp
  4223  0000                     wtemp8	set	btemp+1
  4224  0000                     ttemp5	set	btemp+1
  4225  0000                     ttemp6	set	btemp+4
  4226  0000                     ttemp7	set	btemp+8
  4227                           
  4228                           	psect	idloc
  4229                           
  4230                           ;Config register IDLOC0 @ 0x200000
  4231                           ;	unspecified, using default values
  4232  200000                     	org	2097152
  4233  200000  FF                 	db	255
  4234                           
  4235                           ;Config register IDLOC1 @ 0x200001
  4236                           ;	unspecified, using default values
  4237  200001                     	org	2097153
  4238  200001  FF                 	db	255
  4239                           
  4240                           ;Config register IDLOC2 @ 0x200002
  4241                           ;	unspecified, using default values
  4242  200002                     	org	2097154
  4243  200002  FF                 	db	255
  4244                           
  4245                           ;Config register IDLOC3 @ 0x200003
  4246                           ;	unspecified, using default values
  4247  200003                     	org	2097155
  4248  200003  FF                 	db	255
  4249                           
  4250                           ;Config register IDLOC4 @ 0x200004
  4251                           ;	unspecified, using default values
  4252  200004                     	org	2097156
  4253  200004  FF                 	db	255
  4254                           
  4255                           ;Config register IDLOC5 @ 0x200005
  4256                           ;	unspecified, using default values
  4257  200005                     	org	2097157
  4258  200005  FF                 	db	255
  4259                           
  4260                           ;Config register IDLOC6 @ 0x200006
  4261                           ;	unspecified, using default values
  4262  200006                     	org	2097158
  4263  200006  FF                 	db	255
  4264                           
  4265                           ;Config register IDLOC7 @ 0x200007
  4266                           ;	unspecified, using default values
  4267  200007                     	org	2097159
  4268  200007  FF                 	db	255
  4269                           
  4270                           	psect	config
  4271                           
  4272                           ; Padding undefined space
  4273  300000                     	org	3145728
  4274  300000  FF                 	db	255
  4275                           
  4276                           ;Config register CONFIG1H @ 0x300001
  4277                           ;	Oscillator Selection bits
  4278                           ;	FOSC = INTIO67, Internal oscillator block
  4279                           ;	4X PLL Enable
  4280                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4281                           ;	Primary clock enable bit
  4282                           ;	PRICLKEN = ON, Primary clock enabled
  4283                           ;	Fail-Safe Clock Monitor Enable bit
  4284                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4285                           ;	Internal/External Oscillator Switchover bit
  4286                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4287  300001                     	org	3145729
  4288  300001  38                 	db	56
  4289                           
  4290                           ;Config register CONFIG2L @ 0x300002
  4291                           ;	Power-up Timer Enable bit
  4292                           ;	PWRTEN = OFF, Power up timer disabled
  4293                           ;	Brown-out Reset Enable bits
  4294                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4295                           ;	Brown Out Reset Voltage bits
  4296                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4297  300002                     	org	3145730
  4298  300002  19                 	db	25
  4299                           
  4300                           ;Config register CONFIG2H @ 0x300003
  4301                           ;	Watchdog Timer Enable bits
  4302                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4303                           ;	Watchdog Timer Postscale Select bits
  4304                           ;	WDTPS = 32768, 1:32768
  4305  300003                     	org	3145731
  4306  300003  3C                 	db	60
  4307                           
  4308                           ; Padding undefined space
  4309  300004                     	org	3145732
  4310  300004  FF                 	db	255
  4311                           
  4312                           ;Config register CONFIG3H @ 0x300005
  4313                           ;	CCP2 MUX bit
  4314                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4315                           ;	PORTB A/D Enable bit
  4316                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  4317                           ;	P3A/CCP3 Mux bit
  4318                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4319                           ;	HFINTOSC Fast Start-up
  4320                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4321                           ;	Timer3 Clock input mux bit
  4322                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4323                           ;	ECCP2 B output mux bit
  4324                           ;	P2BMX = PORTB5, P2B is on RB5
  4325                           ;	MCLR Pin Enable bit
  4326                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4327  300005                     	org	3145733
  4328  300005  BD                 	db	189
  4329                           
  4330                           ;Config register CONFIG4L @ 0x300006
  4331                           ;	Stack Full/Underflow Reset Enable bit
  4332                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4333                           ;	Single-Supply ICSP Enable bit
  4334                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4335                           ;	Extended Instruction Set Enable bit
  4336                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4337                           ;	Background Debug
  4338                           ;	DEBUG = 0x1, unprogrammed default
  4339  300006                     	org	3145734
  4340  300006  85                 	db	133
  4341                           
  4342                           ; Padding undefined space
  4343  300007                     	org	3145735
  4344  300007  FF                 	db	255
  4345                           
  4346                           ;Config register CONFIG5L @ 0x300008
  4347                           ;	Code Protection Block 0
  4348                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4349                           ;	Code Protection Block 1
  4350                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4351                           ;	Code Protection Block 2
  4352                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4353                           ;	Code Protection Block 3
  4354                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4355  300008                     	org	3145736
  4356  300008  0F                 	db	15
  4357                           
  4358                           ;Config register CONFIG5H @ 0x300009
  4359                           ;	Boot Block Code Protection bit
  4360                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4361                           ;	Data EEPROM Code Protection bit
  4362                           ;	CPD = OFF, Data EEPROM not code-protected
  4363  300009                     	org	3145737
  4364  300009  C0                 	db	192
  4365                           
  4366                           ;Config register CONFIG6L @ 0x30000A
  4367                           ;	Write Protection Block 0
  4368                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4369                           ;	Write Protection Block 1
  4370                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4371                           ;	Write Protection Block 2
  4372                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4373                           ;	Write Protection Block 3
  4374                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4375  30000A                     	org	3145738
  4376  30000A  0F                 	db	15
  4377                           
  4378                           ;Config register CONFIG6H @ 0x30000B
  4379                           ;	Configuration Register Write Protection bit
  4380                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4381                           ;	Boot Block Write Protection bit
  4382                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4383                           ;	Data EEPROM Write Protection bit
  4384                           ;	WRTD = OFF, Data EEPROM not write-protected
  4385  30000B                     	org	3145739
  4386  30000B  E0                 	db	224
  4387                           
  4388                           ;Config register CONFIG7L @ 0x30000C
  4389                           ;	Table Read Protection Block 0
  4390                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4391                           ;	Table Read Protection Block 1
  4392                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4393                           ;	Table Read Protection Block 2
  4394                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4395                           ;	Table Read Protection Block 3
  4396                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4397  30000C                     	org	3145740
  4398  30000C  0F                 	db	15
  4399                           
  4400                           ;Config register CONFIG7H @ 0x30000D
  4401                           ;	Boot Block Table Read Protection bit
  4402                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4403  30000D                     	org	3145741
  4404  30000D  40                 	db	64
  4405                           tosu	equ	0xFFF
  4406                           tosh	equ	0xFFE
  4407                           tosl	equ	0xFFD
  4408                           stkptr	equ	0xFFC
  4409                           pclatu	equ	0xFFB
  4410                           pclath	equ	0xFFA
  4411                           pcl	equ	0xFF9
  4412                           tblptru	equ	0xFF8
  4413                           tblptrh	equ	0xFF7
  4414                           tblptrl	equ	0xFF6
  4415                           tablat	equ	0xFF5
  4416                           prodh	equ	0xFF4
  4417                           prodl	equ	0xFF3
  4418                           indf0	equ	0xFEF
  4419                           postinc0	equ	0xFEE
  4420                           postdec0	equ	0xFED
  4421                           preinc0	equ	0xFEC
  4422                           plusw0	equ	0xFEB
  4423                           fsr0h	equ	0xFEA
  4424                           fsr0l	equ	0xFE9
  4425                           wreg	equ	0xFE8
  4426                           indf1	equ	0xFE7
  4427                           postinc1	equ	0xFE6
  4428                           postdec1	equ	0xFE5
  4429                           preinc1	equ	0xFE4
  4430                           plusw1	equ	0xFE3
  4431                           fsr1h	equ	0xFE2
  4432                           fsr1l	equ	0xFE1
  4433                           bsr	equ	0xFE0
  4434                           indf2	equ	0xFDF
  4435                           postinc2	equ	0xFDE
  4436                           postdec2	equ	0xFDD
  4437                           preinc2	equ	0xFDC
  4438                           plusw2	equ	0xFDB
  4439                           fsr2h	equ	0xFDA
  4440                           fsr2l	equ	0xFD9
  4441                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         39
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      65
    BANK0           160     15      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    driveParams	PTR volatile struct DriveParams size(2) Largest target is 7
		 -> driveParams_B(BANK0[7]), driveParams_A(BANK0[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLowPrio in COMRAM

    _isrLowPrio->___lldiv
    ___lldiv->___lmul

Critical Paths under _isrHighPrio in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isrLowPrio in BANK0

    None.

Critical Paths under _isrHighPrio in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrLowPrio in BANK1

    None.

Critical Paths under _isrHighPrio in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrLowPrio in BANK2

    None.

Critical Paths under _isrHighPrio in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLowPrio in BANK3

    None.

Critical Paths under _isrHighPrio in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLowPrio in BANK4

    None.

Critical Paths under _isrHighPrio in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLowPrio in BANK5

    None.

Critical Paths under _isrHighPrio in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLowPrio in BANK6

    None.

Critical Paths under _isrHighPrio in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLowPrio in BANK7

    None.

Critical Paths under _isrHighPrio in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLowPrio in BANK8

    None.

Critical Paths under _isrHighPrio in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLowPrio in BANK9

    None.

Critical Paths under _isrHighPrio in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLowPrio in BANK10

    None.

Critical Paths under _isrHighPrio in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLowPrio in BANK11

    None.

Critical Paths under _isrHighPrio in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLowPrio in BANK12

    None.

Critical Paths under _isrHighPrio in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLowPrio in BANK13

    None.

Critical Paths under _isrHighPrio in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLowPrio in BANK14

    None.

Critical Paths under _isrHighPrio in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrLowPrio in BANK15

    None.

Critical Paths under _isrHighPrio in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    5539
                                              8 BANK0      7     7      0
                         _EepromRead
                        _EepromWrite
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1458
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1462
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _EepromWrite                                          5     0      5    1716
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _EepromRead                                           4     0      4     858
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isrLowPrio                                          22    22      0     845
                                             32 COMRAM    22    22      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              7 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                             19 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isrHighPrio                                          7     7      0       0
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EepromRead
   _EepromWrite
   ___awdiv
   ___awmod

 _isrLowPrio (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _isrHighPrio (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      32       5       31.2%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     36      41       1       69.1%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      73      12        0.0%
DATA                 0      0      73       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Dec 07 18:52:55 2020

           ___awdiv@sign 0083                       bsr 000FE0                      l160 05D4  
                    l152 0726                      l321 1570                      l161 05DA  
                    l242 0DB4                      l234 0CAC                      l170 069E  
                    l162 05E0                      l154 0544                      l323 157E  
                    l243 0DBC                      l324 1580                      l180 0A4E  
                    l172 07EA                      l164 0668                      l156 055A  
                    l237 0CF0                      l173 0770                      l165 0684  
                    l318 1592                      l254 0FA2                      l246 0E3C  
                    l238 0CF8                      l247 0F12                      l183 0848  
                    l175 07EA                      l192 0C6E                      l176 07BC  
                    l168 0692                      l257 100A                      l169 0698  
                    l571 13FE                      l558 134C                      _PR2 000FBB  
                    _PR4 000F52             ___awmod@sign 0083                      wreg 000FE8  
                   l2000 156C                     l2002 156E                     l2100 13B4  
                   l2110 13EE                     l2102 13CA                     l2040 129C  
                   l2112 13F6                     l2104 13D2                     l2200 0358  
                   l2120 02B6                     l2050 12C2                     l2042 12A4  
                   l2106 13D8                     l2210 03A4                     l2202 0370  
                   l2130 02E0                     l2122 02B8                     l2060 12FA  
                   l2052 12CA                     l2044 12A8                     l2036 1288  
                   l2108 13DE                     l2300 063E                     l2220 03E8  
                   l2212 03A8                     l2204 037C                     l2140 02EC  
                   l2132 02E2                     l2124 02D8                     l2116 02A8  
                   l2070 1326                     l2062 1300                     l2054 12DC  
                   l2046 12B6                     l2038 128E                     l2310 0720  
                   l2302 0676                     l2230 0420                     l2222 03F4  
                   l2214 03C0                     l2206 0380                     l2150 02FE  
                   l2142 02F0                     l2134 02E4                     l2126 02DA  
                   l2118 02AE                     l2064 1316                     l2056 12E4  
                   l2072 132C                     l2048 12BE                     l2080 134E  
                   l2400 0A22                     l2320 07CA                     l2312 074C  
                   l2240 046C                     l2232 0438                     l2224 03F8  
                   l2216 03CC                     l2208 0398                     l2160 030E  
                   l2152 0302                     l2144 02F4                     l2136 02E6  
                   l2128 02DE                     l2074 133C                     l2066 131E  
                   l2058 12EC                     l2090 137C                     l2082 1354  
                   l2410 0A7C                     l2402 0A3A                     l2330 0826  
                   l2322 07E4                     l2314 075A                     l2306 06B4  
                   l2250 04B0                     l2242 0470                     l2234 0444  
                   l2226 0410                     l2218 03D0                     l2170 031C  
                   l2162 0312                     l2154 0306                     l2146 02F6  
                   l2138 02EA                     l2076 1344                     l2068 1320  
                   l2092 1384                     l2084 1362                     l2500 0CB4  
                   l2420 0AB6                     l2412 0A8E                     l2340 087E  
                   l2404 0A48                     l2332 082E                     l2324 07F8  
                   l2316 077E                     l2308 06FA                     l2260 04E8  
                   l2252 04BC                     l2244 0488                     l2236 0448  
                   l2228 041C                     l2180 0330                     l2172 031E  
                   l2164 0314                     l2156 0308                     l2148 02FA  
                   l2094 1396                     l2086 136A                     l2510 0E00  
                   l2502 0D00                     l2430 0AEE                     l2422 0ABC  
                   l2414 0A96                     l2406 0A5C                     l2350 08CE  
                   l2342 0896                     l2334 0840                     l2326 0806  
                   l2318 07B4                     l2270 0516                     l2262 0500  
                   l2254 04C0                     l2246 0494                     l2238 0460  
                   l2190 0344                     l2182 0334                     l2174 0324  
                   l2166 0318                     l2158 030C                     l2096 139E  
                   l2088 136E                     l2520 0F1A                     l2504 0D3C  
                   l2440 0B1C                     l2432 0AF6                     l2424 0ACE  
                   l2416 0A9C                     l2408 0A6E                     l2360 0914  
                   l2352 08D2                     l2344 08A4                     l2336 0868  
                   l2328 0814                     l2280 0520                     l2272 0518  
                   l2264 050C                     l2256 04D8                     l2248 0498  
                   l2192 0348                     l2184 0338                     l2176 0328  
                   l2168 031A                     l2098 13A6                     l2530 0F88  
                   l2522 0F62                     l2506 0D78                     l2514 0E42  
                   l2450 0B56                     l2442 0B2E                     l2434 0AFC  
                   l2426 0AD6                     l2418 0AAE                     l2370 0950  
                   l2362 0922                     l2354 08EA                     l2346 08A8  
                   l2338 087A                     l2290 0536                     l2282 0522  
                   l2274 051A                     l2266 0510                     l2258 04E4  
                   l2194 034C                     l2186 033C                     l2178 032C  
                   l2540 0FEA                     l2532 0F9A                     l2524 0F64  
                   l2508 0DC4                     l2516 0EB4                     l2460 0B8E  
                   l2452 0B5C                     l2444 0B36                     l2436 0B0E  
                   l2428 0ADC                     l2380 09A0                     l2372 0968  
                   l2364 0926                     l2356 08F8                     l2348 08C0  
                   l2292 0568                     l2284 0524                     l2276 051C  
                   l2268 0514                     l2196 0350                     l2188 0340  
                   l2542 0FFC                     l2534 0FA4                     l2526 0F6A  
                   l2518 0EEA                     l2470 0BBC                     l2462 0B96  
                   l2454 0B6E                     l2446 0B3C                     l2438 0B16  
                   l2390 09E6                     l2382 09A4                     l2374 0976  
                   l2366 093E                     l2358 08FC                     l2294 059E  
                   l2286 0526                     l2278 051E                     l2198 0354  
                   l2536 0FDC                     l2528 0F7A                     l2480 0BF6  
                   l2472 0BCE                     l2464 0B9C                     l2456 0B76  
                   l2448 0B4E                     l2392 09F4                     l2384 09BC  
                   l2376 097A                     l2368 094C                     l2288 0528  
                   l2538 0FE2                     l2546 1016                     l2490 0C8C  
                   l2474 0BD6                     l2466 0BAE                     l2458 0B7C  
                   l2394 09F8                     l2386 09CA                     l2378 0992  
                   l2298 05F6                     l2548 1050                     l2476 0BDC  
                   l2468 0BB6                     l2492 0C8E                     l2484 0BFC  
                   l2396 0A10                     l2388 09CE                     l2478 0BEE  
                   l2486 0C72                     l2494 0C90                     l2398 0A1E  
                   l2830 06D4                     l2488 0C84                     l2832 0C10  
                   l2496 0C92                     l2834 0E56                     l2498 0CA4  
                   l1980 158C                     l2836 102A                     l2828 0618  
                   l1982 158E                     l1974 1582                     l1990 1558  
                   l1976 1586                     l1992 155C                     l1978 158A  
                   l1994 155E                     l1986 1550                     l1996 1560  
                   l1988 1554                     l1998 1562                     u2000 0F98  
                   u2001 0F92       EepromWrite@address 007E                     u1220 157E  
                   u1300 12DC                     u2020 0FFA                     u1221 157A  
                   u1301 12D8                     u2021 0FF4                     u1310 12FA  
                   u1311 12F6                     u2015 0F9A                     u1320 1316  
                   u1400 0536                     u1321 1312                     u1401 0532  
                   u1330 133C                     u2050 107A                     u1410 0544  
                   u1331 1338                     u2051 1072                     u2035 0FFC  
                   u1411 0540                     u1340 1362                     u1420 0554  
                   u1341 135E                     u2045 1006                     u1421 054E  
                   u1350 137C                     u2070 109C                     u1510 0652  
                   u1351 1378                     u2071 1094                     u1511 0648  
                   u1280 129C                     u1360 1396                     u1600 073C  
                   u1440 0568                     u1281 1298                     u1361 1392  
                   u1601 0736                     u1505 05F2                     u1441 0564  
                   u1290 12B6                     u1370 13B4                     u1530 0676  
                   u1450 0598                     u1291 12B2                     u1371 13B0  
                   u1531 0672                     u1451 0592                     u1435 0556  
                   u1380 13CA                     u2068 107E                     u1700 0814  
                   u1620 074C                     u1381 13C6                     u1701 0810  
                   u1621 0748                     u1390 13EE                     u1710 0826  
                   u1630 075A                     u1470 05CE                     u1391 13EA  
                   u1711 0822                     u1631 0756                     u1615 073E  
                   u1471 05C8                     u2088 10A0                     u1800 0AAE  
                   u1720 0840                     u1640 077E                     u1560 06AE  
                   u1528 0656                     u1801 0AAA                     u1721 083C  
                   u1641 077A                     u1561 06A8                     u1545 0680  
                   u1465 059A                     u1810 0ACE                     u1730 0858  
                   u1650 07B4                     u1490 05F0                     u1811 0ACA  
                   u1731 0852                     u1651 07B0                     u1555 068E  
                   u1491 05EA                     u1900 0BEE                     u1820 0AEE  
                   u1660 07CA                     u1580 070E                     u1901 0BEA  
                   u1821 0AEA                     u1661 07C6                     u1581 0704  
                   u1485 05D0                     u1910 0C84                     u1830 0B0E  
                   u1750 0868                     u1670 07E4                     u1911 0C80  
                   u1831 0B0A                     u1751 0864                     u1671 07E0  
                   u1575 06B0                     u1920 0CA4                     u1840 0B2E  
                   u1760 0A5C                     u1680 07F8                     u1921 0CA0  
                   u1841 0B2A                     u1761 0A58                     u1745 085A  
                   u1681 07F4                     u1930 0EC4                     u1850 0B4E  
                   u1770 0A6E                     u1690 0806                     u1931 0EBE  
                   u1851 0B4A                     u1771 0A6A                     u1691 0802  
                   u1940 0ED8                     u1932 0EC6                     u1860 0B6E  
                   u1780 0A7C                     u1941 0ED2                     u1861 0B6A  
                   u1781 0A78                     u1950 0EEA                     u1942 0EDA  
                   u1870 0B8E                     u1790 0A8E                     u1598 0712  
                   u1951 0EE6                     u1871 0B8A                     u1791 0A8A  
                   u1960 0EFA                     u1880 0BAE                     u1961 0EF4  
                   u1881 0BAA                     u1970 0F0C                     u1890 0BCE  
                   u1971 0F06                     u1891 0BCA                     u1990 0F88  
                   u1991 0F84                     u1975 0EFC                     u1985 0F0E  
                   _TMR2 000FBC                     _main 02A8                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0042  
                   start 02A4      __end_of_EepromWrite 1582             ___param_bank 000000  
           main@headLoad 01BF            _driveParams_A 0077            _driveParams_B 0070  
           ?_isrHighPrio 0001                    ?_main 0001          __end_of___awdiv 134E  
                  _EEADR 000FA9          __end_of___awmod 1400          __end_of___lldiv 14A4  
             _EepromRead 1582                    _T0CON 000FD5          ___awdiv@divisor 0080  
                  _T1CON 000FCD                    _T2CON 000FBA                    _T4CON 000F51  
                  i1l361 14A2                    i1l281 018A                    i1l354 1492  
                  i1l338 14FC                    i1l290 028C                    i1l339 150C  
                  i1l285 0210                    i1l277 0112                    i1l287 0256  
                  i2l315 1274                    i2l307 11D6                    i2l296 11AA  
                  i2l298 10F0          ___awdiv@counter 0082                    _PORTA 000F80  
                  _PORTC 000F82             main@menuEdit 01B8                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94             main@menuMode 006C  
    ___lmul@multiplicand 000C                    _blink 01C2           __pbitbssCOMRAM 01B8  
                  tablat 000FF5            _counter1000Hz 0068                    plusw2 000FDB  
                  ttemp5 0043                    ttemp6 0046                    ttemp7 004A  
                  status 000FD8            _counter6000Hz 003E                    wtemp8 0043  
        __initialization 150E             __end_of_main 10B4            main@cmdSwitch 01C0  
                 ??_main 0086            __activetblptr 000002                   _EEADRH 000FAA  
                 _EEDATA 000FA8                   _EECON2 000FA7         ___awdiv@dividend 007E  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 i1l2010 14D2                   i1l2020 142E                   i1l2012 14DC  
                 i1l2004 14A4                   i1l2030 1480                   i1l2022 143A  
                 i1l2014 1400                   i1l2006 14B4                   i1l2032 1482  
                 i1l2024 1448                   i1l2016 1410                   i1l2008 14C2  
                 i1l2034 148C                   i1l2026 1452                   i1l2018 1426  
                 i1l2028 1470                   i1l2600 00C4                   i1l2610 0120  
                 i1l2602 00D4                   i1l2620 01A4                   i1l2612 0124  
                 i1l2604 00E6                   i1l2630 0288                   i1l2622 0200  
                 i1l2614 0146                   i1l2606 00F4                   i1l2624 0220  
                 i1l2616 0156                   i1l2608 0104                   i1l2626 0266  
                 i1l2618 0172                   i1l2628 0278                   i1l2580 002E  
                 i1l2590 0076                   i1l2582 003C                   i1l2592 0078  
                 i1l2584 003E                   i1l2594 008A                   i1l2586 005C  
                 i1l2596 008E                   i1l2588 0068                   i1l2598 009C  
                 i2l2640 1124                   i2l2632 10C4                   i2l2642 1132  
                 i2l2634 10D2                   i2l2650 11AA                   i2l2660 1202  
                 i2l2652 11B8                   i2l2644 1164                   i2l2636 10E2  
                 i2l2670 1242                   i2l2662 1212                   i2l2654 11C8  
                 i2l2646 1180                   i2l2638 1116                   i2l2672 1252  
                 i2l2664 1224                   i2l2656 11E8                   i2l2648 119A  
                 i2l2674 1264                   i2l2666 122A                   i2l2658 11F4  
                 i2l2676 126A                   i2l2668 1234              _EepromWrite 1550  
                 _OSCCON 000FD3                   ___lmul 14A4                ??___awdiv 0082  
              ??___awmod 0082                ??___lldiv 001C                   clear_0 152C  
                 clear_1 153C         ___awdiv@quotient 0084          ___awmod@divisor 0080  
        ___awmod@counter 0082              ?_EepromRead 007E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8     main@startDisplayMode 008F  
             __accesstop 0060  __end_of__initialization 1542            ___rparam_used 000001  
         __pcstackCOMRAM 0001             __pidataBANK0 1594     __size_of_isrHighPrio 1280  
             __pbssBANK0 0060      __size_of_EepromRead 0012        main@cmdSwitchLast 01BB  
      main@cmdSwitchLong 01B9                  ?___lmul 0008                  _CCP2CON 000F66  
                _CCP3CON 000F5D                  _CCP5CON 000F54           ___lmul@product 0010  
                _OSCTUNE 000F9B                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 1288          __size_of___lmul 006A                  ___awmod 134E  
                ___lldiv 1400                  __pcinit 150E                  __ramtop 1000  
                __ptext0 02A8                  __ptext1 134E                  __ptext2 1288  
                __ptext3 1550                  __ptext4 1582                  __ptext6 14A4  
                __ptext7 1400               _isrLowPrio 0018          _isrLowPrio$1074 002A  
       ___awmod@dividend 007E           __pintcode_body 10B4     end_of_initialization 1542  
           ?_EepromWrite 007E            __Lmediumconst 0000                  int_func 10B4  
        ___lldiv@divisor 0018          ___lldiv@counter 0020                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE      isrLowPrio@deviation 002E  
     main@externalSignal 01C1                _PORTAbits 000F80                _PORTBbits 000F81  
           ??_EepromRead 0082               main@counts 0089       __end_of_EepromRead 1594  
         __end_of___lmul 150E              ?_isrLowPrio 0001      start_initialization 150E  
      main@eepromAddress 0060                 ??___lmul 0010              __pdataBANK0 0090  
          ??_isrHighPrio 0001              __pbssCOMRAM 0039            __pcstackBANK0 007E  
        main@eepromValue 008D     __size_of_EepromWrite 0032                __pnvBANK0 008D  
    __size_of_isrLowPrio 028C                __pintcode 0008                 ?___awdiv 007E  
               ?___awmod 007E                 ?___lldiv 0014          main@displayMode 008E  
main@cmdSwitchStartCount 0064       main@cmdSwitchShort 01BA              __pintcodelo 0018  
               _CCPTMRS0 000F49                 _CCPTMRS1 000F48      __end_of_isrHighPrio 1288  
               _IPR1bits 000F9F                 _IPR2bits 000FA2                 _PIE1bits 000F9D  
               _IPR4bits 000F7C                 _PIE2bits 000FA0                 _IPR5bits 000F7F  
               _PIE4bits 000F7A                 _PIE5bits 000F7D                 i1u210_20 005C  
               i1u210_21 0058                 i1u123_20 14C2                 i1u211_20 0076  
               i1u123_21 14BE                 i1u211_21 0072                 i1u124_20 14FC  
               i1u220_20 0142                 i1u212_20 008A                 i1u124_21 14F8  
               i1u220_21 013C                 i1u212_21 0086                 i1u125_20 1426  
               i1u221_20 0144                 i1u213_20 00C4                 i1u125_21 1422  
               i1u213_21 00C0                 i1u126_20 1448                 i1u222_20 0156  
               i1u214_20 00E4                 i1u126_21 1444                 i1u222_21 0152  
               i1u214_21 00DE                 i1u127_20 1470                 i1u223_20 01A4  
               i1u127_21 146C                 i1u223_21 01A0                 i1u215_25 00E6  
               i1u224_20 0220                 i1u216_20 00F4                 i1u224_21 021C  
               i1u216_21 00F0                 i1u217_20 0104                 i1u209_20 003C  
               i1u217_21 0100                 i1u209_21 0038                 i1u218_20 0112  
               i1u218_21 010E                 i1u219_20 0120                 i1u219_21 011C  
               i2u230_40 1132                 i2u230_41 112E                 i2u231_40 1164  
               i2u231_41 1160                 i2u240_40 1242                 i2u232_40 119A  
               i2u240_41 123E                 i2u232_41 1196                 i2u241_40 1252  
               i2u233_40 11B8                 i2u225_40 10D2                 i2u241_41 124E  
               i2u233_41 11B4                 i2u225_41 10CE                 i2u242_40 1264  
               i2u234_40 11C8                 i2u226_40 10E2                 i2u242_41 1260  
               i2u234_41 11C4                 i2u226_41 10DE                 i2u235_40 11D6  
               i2u227_40 10F0                 i2u235_41 11D2                 i2u227_41 10EC  
               i2u236_40 11E8                 i2u228_40 1116                 i2u236_41 11E4  
               i2u228_41 1112                 i2u237_40 1202                 i2u229_40 1124  
               i2u237_41 11FE                 i2u229_41 1120                 i2u238_40 1212  
               i2u238_41 120E                 i2u239_40 1224                 i2u239_41 1220  
               _PIR1bits 000F9E                 _PIR2bits 000FA1                 _PIR4bits 000F7B  
               _PIR5bits 000F7E                 _RCONbits 000FD0                main@speed 006D  
 isrLowPrio@clockDivider 003D              _driveParams 0090        ___lmul@multiplier 0008  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0               _EECON1bits 000FA6  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00C6  
       __size_of___awmod 00B2         __size_of___lldiv 00A4             ??_isrLowPrio 0021  
            _isrHighPrio 0008            __size_of_main 0E0C       __end_of_isrLowPrio 02A4  
               int$flags 0042                 main@bcd1 006F                 main@bcd2 006E  
               main@tg43 01BE                 main@dot1 01BD                 main@dot2 01BC  
      isrLowPrio@percent 0032          EepromWrite@data 0082               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000         ___lldiv@dividend 0014  
      EepromRead@address 007E         ___lldiv@quotient 001C            ??_EepromWrite 0083  
         isrLowPrio@sign 0036     isrLowPrio@counter500 0039  
