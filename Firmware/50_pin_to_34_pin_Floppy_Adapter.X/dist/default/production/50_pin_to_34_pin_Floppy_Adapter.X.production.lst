

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 23 19:51:51 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 05/05/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F26K22 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	eeprom_data
    65  F00000  00 00 00 00 4C 00 00 00 	db	0,0,0,0,76,0,0,0	;# 
    66                           
    67                           	psect	nvBANK0
    68  000080                     __pnvBANK0:
    69                           	callstack 0
    70  000080                     main@eepromValue:
    71                           	callstack 0
    72  000080                     	ds	1
    73  000081                     main@displayMode:
    74                           	callstack 0
    75  000081                     	ds	1
    76  000082                     main@startDisplayMode:
    77                           	callstack 0
    78  000082                     	ds	1
    79  000083                     main@tg43Mode:
    80                           	callstack 0
    81  000083                     	ds	1
    82  000084                     main@readyDiskChangeMode:
    83                           	callstack 0
    84  000084                     	ds	1
    85  000085                     main@headLoadMode:
    86                           	callstack 0
    87  000085                     	ds	1
    88  000086                     _maxTrack:
    89                           	callstack 0
    90  000086                     	ds	1
    91  0000                     _CCP5CON	set	3924
    92  0000                     _CCP4CON	set	3927
    93  0000                     _CCP3CON	set	3933
    94  0000                     _CCPTMRS1	set	3912
    95  0000                     _CCPTMRS0	set	3913
    96  0000                     _T4CON	set	3921
    97  0000                     _PR4	set	3922
    98  0000                     _ANSELC	set	3898
    99  0000                     _ANSELB	set	3897
   100  0000                     _ANSELA	set	3896
   101  0000                     _EECON2	set	4007
   102  0000                     _EEDATA	set	4008
   103  0000                     _EECON1bits	set	4006
   104  0000                     _EEADRH	set	4010
   105  0000                     _EEADR	set	4009
   106  0000                     _PIR2bits	set	4001
   107  0000                     _TMR2	set	4028
   108  0000                     _PIR4bits	set	3963
   109  0000                     _PIR5bits	set	3966
   110  0000                     _PIR1bits	set	3998
   111  0000                     _PORTAbits	set	3968
   112  0000                     _PIE4bits	set	3962
   113  0000                     _PIE2bits	set	4000
   114  0000                     _PIE5bits	set	3965
   115  0000                     _IPR4bits	set	3964
   116  0000                     _CCP2CON	set	3942
   117  0000                     _IPR2bits	set	4002
   118  0000                     _IPR5bits	set	3967
   119  0000                     _T2CON	set	4026
   120  0000                     _PR2	set	4027
   121  0000                     _T1CON	set	4045
   122  0000                     _IPR1bits	set	3999
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PORTBbits	set	3969
   125  0000                     _PORTC	set	3970
   126  0000                     _PORTA	set	3968
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _TRISA	set	3986
   130  0000                     _T0CON	set	4053
   131  0000                     _INTCON2bits	set	4081
   132  0000                     _OSCTUNE	set	3995
   133  0000                     _OSCCON	set	4051
   134  0000                     _RCONbits	set	4048
   135  0000                     _INTCONbits	set	4082
   136                           
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140  001170                     __pcinit:
   141                           	callstack 0
   142  001170                     start_initialization:
   143                           	callstack 0
   144  001170                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Clear objects allocated to BANK0 (18 bytes)
   148  001170  EE00  F060         	lfsr	0,__pbssBANK0
   149  001174  0E12               	movlw	18
   150  001176                     clear_0:
   151  001176  6AEE               	clrf	postinc0,c
   152  001178  06E8               	decf	wreg,f,c
   153  00117A  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   156  00117C  6A30               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   157  00117E  6A2F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   158                           
   159                           ; Clear objects allocated to COMRAM (9 bytes)
   160  001180  EE00  F031         	lfsr	0,__pbssCOMRAM
   161  001184  0E09               	movlw	9
   162  001186                     clear_1:
   163  001186  6AEE               	clrf	postinc0,c
   164  001188  06E8               	decf	wreg,f,c
   165  00118A  E1FD               	bnz	clear_1
   166  00118C                     end_of_initialization:
   167                           	callstack 0
   168  00118C                     __end_of__initialization:
   169                           	callstack 0
   170  00118C  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   171  00118E  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   172  001190  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  001192  6EF8               	movwf	tblptru,c
   174  001194  0100               	movlb	0
   175  001196  EF3E  F001         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bitbssCOMRAM
   178  000178                     __pbitbssCOMRAM:
   179                           	callstack 0
   180  000178                     main@menuEdit:
   181                           	callstack 0
   182  000178                     	ds	1
   183  000179                     main@cmdSwitchLong:
   184                           	callstack 0
   185  000179                     	ds	1
   186  00017A                     main@cmdSwitchShort:
   187                           	callstack 0
   188  00017A                     	ds	1
   189  00017B                     main@cmdSwitchLast:
   190                           	callstack 0
   191  00017B                     	ds	1
   192  00017C                     main@dot2:
   193                           	callstack 0
   194  00017C                     	ds	1
   195  00017D                     main@dot1:
   196                           	callstack 0
   197  00017D                     	ds	1
   198  00017E                     main@tg43:
   199                           	callstack 0
   200  00017E                     	ds	1
   201  00017F                     main@readyDiskChange:
   202                           	callstack 0
   203  00017F                     	ds	1
   204  000180                     main@headLoad:
   205                           	callstack 0
   206  000180                     	ds	1
   207  000181                     main@cmdSwitch:
   208                           	callstack 0
   209  000181                     	ds	1
   210  000182                     main@diskChange:
   211                           	callstack 0
   212  000182                     	ds	1
   213  000183                     main@ready:
   214                           	callstack 0
   215  000183                     	ds	1
   216  000184                     main@externalSignal:
   217                           	callstack 0
   218  000184                     	ds	1
   219  000185                     _blink:
   220                           	callstack 0
   221  000185                     	ds	1
   222                           
   223                           	psect	bssCOMRAM
   224  000031                     __pbssCOMRAM:
   225                           	callstack 0
   226  000031                     isrLowPrio@counter500:
   227                           	callstack 0
   228  000031                     	ds	4
   229  000035                     isrLowPrio@clockDivider:
   230                           	callstack 0
   231  000035                     	ds	1
   232  000036                     _counter6000Hz:
   233                           	callstack 0
   234  000036                     	ds	4
   235                           
   236                           	psect	bssBANK0
   237  000060                     __pbssBANK0:
   238                           	callstack 0
   239  000060                     main@eepromAddress:
   240                           	callstack 0
   241  000060                     	ds	4
   242  000064                     main@cmdSwitchStartCount:
   243                           	callstack 0
   244  000064                     	ds	4
   245  000068                     _counter1000Hz:
   246                           	callstack 0
   247  000068                     	ds	4
   248  00006C                     main@speed:
   249                           	callstack 0
   250  00006C                     	ds	1
   251  00006D                     main@menuMode:
   252                           	callstack 0
   253  00006D                     	ds	1
   254  00006E                     main@bcd2:
   255                           	callstack 0
   256  00006E                     	ds	1
   257  00006F                     main@bcd1:
   258                           	callstack 0
   259  00006F                     	ds	1
   260  000070                     _speedDeviationPercentTenths:
   261                           	callstack 0
   262  000070                     	ds	1
   263  000071                     _track:
   264                           	callstack 0
   265  000071                     	ds	1
   266                           
   267                           	psect	cstackBANK0
   268  000072                     __pcstackBANK0:
   269                           	callstack 0
   270  000072                     ?___awdiv:
   271                           	callstack 0
   272  000072                     ?___awmod:
   273                           	callstack 0
   274  000072                     ___awdiv@dividend:
   275                           	callstack 0
   276  000072                     ___awmod@dividend:
   277                           	callstack 0
   278  000072                     EepromRead@address:
   279                           	callstack 0
   280  000072                     EepromWrite@address:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0x0
   284  000072                     	ds	2
   285  000074                     ___awdiv@divisor:
   286                           	callstack 0
   287  000074                     ___awmod@divisor:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x2
   291  000074                     	ds	2
   292  000076                     EepromWrite@data:
   293                           	callstack 0
   294  000076                     ___awdiv@counter:
   295                           	callstack 0
   296  000076                     ___awmod@counter:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x4
   300  000076                     	ds	1
   301  000077                     ___awdiv@sign:
   302                           	callstack 0
   303  000077                     ___awmod@sign:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x5
   307  000077                     	ds	1
   308  000078                     ___awdiv@quotient:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x6
   312  000078                     	ds	2
   313  00007A                     ??_main:
   314                           
   315                           ; 1 bytes @ 0x8
   316  00007A                     	ds	2
   317  00007C                     main@counts:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0xA
   321  00007C                     	ds	4
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	callstack 0
   326  000001                     ??_isrHighPrio:
   327  000001                     
   328                           ; 2 bytes @ 0x0
   329  000001                     	ds	1
   330  000002                     ?___lmul:
   331                           	callstack 0
   332  000002                     ___lmul@multiplier:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x1
   336  000002                     	ds	4
   337  000006                     ___lmul@multiplicand:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x5
   341  000006                     	ds	4
   342  00000A                     ___lmul@product:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x9
   346  00000A                     	ds	4
   347  00000E                     ?___lldiv:
   348                           	callstack 0
   349  00000E                     ___lldiv@dividend:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0xD
   353  00000E                     	ds	4
   354  000012                     ___lldiv@divisor:
   355                           	callstack 0
   356                           
   357                           ; 4 bytes @ 0x11
   358  000012                     	ds	4
   359  000016                     ___lldiv@quotient:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x15
   363  000016                     	ds	4
   364  00001A                     ___lldiv@counter:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x19
   368  00001A                     	ds	1
   369  00001B                     ??_isrLowPrio:
   370                           
   371                           ; 1 bytes @ 0x1A
   372  00001B                     	ds	7
   373  000022                     _isrLowPrio$1006:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x21
   377  000022                     	ds	4
   378  000026                     isrLowPrio@deviation:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x25
   382  000026                     	ds	4
   383  00002A                     isrLowPrio@percent:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x29
   387  00002A                     	ds	4
   388  00002E                     isrLowPrio@sign:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x2D
   392  00002E                     	ds	1
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 107 in file "avr-main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  counts          4   10[BANK0 ] unsigned long 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2  112[None  ] int 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        6 bytes
   418 ;; Hardware stack levels required when called:    4
   419 ;; This function calls:
   420 ;;		_EepromRead
   421 ;;		_EepromWrite
   422 ;;		___awdiv
   423 ;;		___awmod
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430  00027C                     __ptext0:
   431                           	callstack 0
   432  00027C                     _main:
   433                           	callstack 27
   434  00027C                     
   435                           ;avr-main.c: 109:     INTCONbits.PEIE = 0;
   436  00027C  9CF2               	bcf	242,6,c	;volatile
   437                           
   438                           ;avr-main.c: 110:     INTCONbits.GIE = 0;
   439  00027E  9EF2               	bcf	242,7,c	;volatile
   440                           
   441                           ;avr-main.c: 111:     RCONbits.IPEN = 1;
   442  000280  8ED0               	bsf	208,7,c	;volatile
   443  000282                     
   444                           ;avr-main.c: 114:     OSCCON = 0b01110000;
   445  000282  0E70               	movlw	112
   446  000284  6ED3               	movwf	211,c	;volatile
   447                           
   448                           ;avr-main.c: 115:     OSCTUNE = 0b01000000;
   449  000286  0E40               	movlw	64
   450  000288  6E9B               	movwf	155,c	;volatile
   451  00028A                     
   452                           ;avr-main.c: 118:     INTCONbits.T0IE = 0;
   453  00028A  9AF2               	bcf	242,5,c	;volatile
   454  00028C                     
   455                           ;avr-main.c: 119:     INTCON2bits.TMR0IP = 0;
   456  00028C  94F1               	bcf	241,2,c	;volatile
   457                           
   458                           ;avr-main.c: 120:     T0CON = 0x00;
   459  00028E  0E00               	movlw	0
   460  000290  6ED5               	movwf	213,c	;volatile
   461                           
   462                           ;avr-main.c: 123:     ANSELA = 0x00;
   463  000292  0E00               	movlw	0
   464  000294  010F               	movlb	15	; () banked
   465  000296  6F38               	movwf	56,b	;volatile
   466                           
   467                           ;avr-main.c: 124:     ANSELB = 0x00;
   468  000298  0E00               	movlw	0
   469  00029A  6F39               	movwf	57,b	;volatile
   470                           
   471                           ;avr-main.c: 125:     ANSELC = 0x00;
   472  00029C  0E00               	movlw	0
   473  00029E  6F3A               	movwf	58,b	;volatile
   474                           
   475                           ;avr-main.c: 127:     TRISA = 0b01010111;
   476  0002A0  0E57               	movlw	87
   477  0002A2  6E92               	movwf	146,c	;volatile
   478                           
   479                           ;avr-main.c: 128:     TRISB = 0b11111001;
   480  0002A4  0EF9               	movlw	249
   481  0002A6  6E93               	movwf	147,c	;volatile
   482                           
   483                           ;avr-main.c: 129:     TRISC = 0b00000000;
   484  0002A8  0E00               	movlw	0
   485  0002AA  6E94               	movwf	148,c	;volatile
   486  0002AC                     
   487                           ; BSR set to: 15
   488                           ;avr-main.c: 132:     PORTA &= 0b11111111;
   489  0002AC  5080               	movf	128,w,c	;volatile
   490  0002AE                     
   491                           ; BSR set to: 15
   492                           ;avr-main.c: 135:     PORTC = 0x00;
   493  0002AE  0E00               	movlw	0
   494  0002B0  6E82               	movwf	130,c	;volatile
   495  0002B2                     
   496                           ; BSR set to: 15
   497                           ;avr-main.c: 136:     PORTBbits.RB1 = 0;
   498  0002B2  9281               	bcf	129,1,c	;volatile
   499  0002B4                     
   500                           ; BSR set to: 15
   501                           ;avr-main.c: 137:     PORTBbits.RB2 = 0;
   502  0002B4  9481               	bcf	129,2,c	;volatile
   503  0002B6                     
   504                           ; BSR set to: 15
   505                           ;avr-main.c: 140:     PIE1bits.TMR1IE = 0;
   506  0002B6  909D               	bcf	157,0,c	;volatile
   507  0002B8                     
   508                           ; BSR set to: 15
   509                           ;avr-main.c: 141:     IPR1bits.TMR1IP = 0;
   510  0002B8  909F               	bcf	159,0,c	;volatile
   511  0002BA                     
   512                           ; BSR set to: 15
   513                           ;avr-main.c: 142:     T1CON = 0b00000011;
   514  0002BA  0E03               	movlw	3
   515  0002BC  6ECD               	movwf	205,c	;volatile
   516  0002BE                     
   517                           ; BSR set to: 15
   518                           ;avr-main.c: 145:     IPR1bits.TMR2IP = 0;
   519  0002BE  929F               	bcf	159,1,c	;volatile
   520  0002C0                     
   521                           ; BSR set to: 15
   522                           ;avr-main.c: 146:     PR2 = 166 - 1;
   523  0002C0  0EA5               	movlw	165
   524  0002C2  6EBB               	movwf	187,c	;volatile
   525  0002C4                     
   526                           ; BSR set to: 15
   527                           ;avr-main.c: 147:     T2CON = 0b01111100;
   528  0002C4  0E7C               	movlw	124
   529  0002C6  6EBA               	movwf	186,c	;volatile
   530  0002C8                     
   531                           ; BSR set to: 15
   532                           ;avr-main.c: 150:     IPR5bits.TMR4IP = 0;
   533  0002C8  907F               	bcf	127,0,c	;volatile
   534  0002CA                     
   535                           ; BSR set to: 15
   536                           ;avr-main.c: 151:     PR4 = 250 - 1;
   537  0002CA  0EF9               	movlw	249
   538  0002CC  6F52               	movwf	82,b	;volatile
   539  0002CE                     
   540                           ; BSR set to: 15
   541                           ;avr-main.c: 152:     T4CON = 0b01111100;
   542  0002CE  0E7C               	movlw	124
   543  0002D0  6F51               	movwf	81,b	;volatile
   544  0002D2                     
   545                           ; BSR set to: 15
   546                           ;avr-main.c: 155:     CCPTMRS0 = 0b00000000;
   547  0002D2  0E00               	movlw	0
   548  0002D4  6F49               	movwf	73,b	;volatile
   549  0002D6                     
   550                           ; BSR set to: 15
   551                           ;avr-main.c: 156:     CCPTMRS1 = 0b00000000;
   552  0002D6  0E00               	movlw	0
   553  0002D8  6F48               	movwf	72,b	;volatile
   554  0002DA                     
   555                           ; BSR set to: 15
   556                           ;avr-main.c: 159:     IPR2bits.CCP2IP = 1;
   557  0002DA  80A2               	bsf	162,0,c	;volatile
   558  0002DC                     
   559                           ; BSR set to: 15
   560                           ;avr-main.c: 160:     CCP2CON = 0b00000100;
   561  0002DC  0E04               	movlw	4
   562  0002DE  6E66               	movwf	102,c	;volatile
   563  0002E0                     
   564                           ; BSR set to: 15
   565                           ;avr-main.c: 163:     IPR4bits.CCP3IP = 0;
   566  0002E0  907C               	bcf	124,0,c	;volatile
   567  0002E2                     
   568                           ; BSR set to: 15
   569                           ;avr-main.c: 164:     CCP3CON = 0b00000100;
   570  0002E2  0E04               	movlw	4
   571  0002E4  6F5D               	movwf	93,b	;volatile
   572  0002E6                     
   573                           ; BSR set to: 15
   574                           ;avr-main.c: 167:     IPR4bits.CCP4IP = 1;
   575  0002E6  827C               	bsf	124,1,c	;volatile
   576  0002E8                     
   577                           ; BSR set to: 15
   578                           ;avr-main.c: 168:     CCP4CON = 0b00000100;
   579  0002E8  0E04               	movlw	4
   580  0002EA  6F57               	movwf	87,b	;volatile
   581  0002EC                     
   582                           ; BSR set to: 15
   583                           ;avr-main.c: 171:     IPR4bits.CCP5IP = 1;
   584  0002EC  847C               	bsf	124,2,c	;volatile
   585  0002EE                     
   586                           ; BSR set to: 15
   587                           ;avr-main.c: 172:     CCP5CON = 0b00000100;
   588  0002EE  0E04               	movlw	4
   589  0002F0  6F54               	movwf	84,b	;volatile
   590  0002F2                     
   591                           ; BSR set to: 15
   592                           ;avr-main.c: 175:     static __bit externalSignal = 0;;avr-main.c: 176:     static __bit
      +                           ready = 0;;avr-main.c: 177:     static __bit diskChange = 0;;avr-main.c: 178:     stati
      +                          c __bit cmdSwitch = 0;;avr-main.c: 181:     static __bit headLoad = 0;;avr-main.c: 182: 
      +                              static __bit readyDiskChange = 0;;avr-main.c: 183:     static __bit tg43 = 0;;avr-ma
      +                          in.c: 184:     static uint_fast8_t bcd1 = 0;;avr-main.c: 185:     static uint_fast8_t bc
      +                          d2 = 0;;avr-main.c: 186:     static __bit dot1 = 0;;avr-main.c: 187:     static __bit do
      +                          t2 = 0;
   593  0002F2  C060  F072         	movff	main@eepromAddress,EepromRead@address
   594  0002F6  C061  F073         	movff	main@eepromAddress+1,EepromRead@address+1
   595  0002FA  C062  F074         	movff	main@eepromAddress+2,EepromRead@address+2
   596  0002FE  C063  F075         	movff	main@eepromAddress+3,EepromRead@address+3
   597  000302  ECCD  F008         	call	_EepromRead	;wreg free
   598  000306  0100               	movlb	0	; () banked
   599  000308  6F80               	movwf	main@eepromValue& (0+255),b	;volatile
   600  00030A                     
   601                           ; BSR set to: 0
   602  00030A  0E01               	movlw	1
   603  00030C  2760               	addwf	main@eepromAddress& (0+255),f,b
   604  00030E  0E00               	movlw	0
   605  000310  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   606  000312  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   607  000314  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   608  000316                     
   609                           ; BSR set to: 0
   610                           ;avr-main.c: 211:     tg43Mode = (enum TG43Mode)eepromValue;
   611  000316  C080  F083         	movff	main@eepromValue,main@tg43Mode	;volatile
   612  00031A                     
   613                           ; BSR set to: 0
   614                           ;avr-main.c: 213:     eepromValue = EepromRead(eepromAddress++);
   615  00031A  C060  F072         	movff	main@eepromAddress,EepromRead@address
   616  00031E  C061  F073         	movff	main@eepromAddress+1,EepromRead@address+1
   617  000322  C062  F074         	movff	main@eepromAddress+2,EepromRead@address+2
   618  000326  C063  F075         	movff	main@eepromAddress+3,EepromRead@address+3
   619  00032A  ECCD  F008         	call	_EepromRead	;wreg free
   620  00032E  0100               	movlb	0	; () banked
   621  000330  6F80               	movwf	main@eepromValue& (0+255),b	;volatile
   622  000332                     
   623                           ; BSR set to: 0
   624  000332  0E01               	movlw	1
   625  000334  2760               	addwf	main@eepromAddress& (0+255),f,b
   626  000336  0E00               	movlw	0
   627  000338  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   628  00033A  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   629  00033C  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   630  00033E                     
   631                           ; BSR set to: 0
   632                           ;avr-main.c: 214:     headLoadMode = (enum HeadLoadMode)eepromValue;
   633  00033E  C080  F085         	movff	main@eepromValue,main@headLoadMode	;volatile
   634  000342                     
   635                           ; BSR set to: 0
   636                           ;avr-main.c: 216:     eepromValue = EepromRead(eepromAddress++);
   637  000342  C060  F072         	movff	main@eepromAddress,EepromRead@address
   638  000346  C061  F073         	movff	main@eepromAddress+1,EepromRead@address+1
   639  00034A  C062  F074         	movff	main@eepromAddress+2,EepromRead@address+2
   640  00034E  C063  F075         	movff	main@eepromAddress+3,EepromRead@address+3
   641  000352  ECCD  F008         	call	_EepromRead	;wreg free
   642  000356  0100               	movlb	0	; () banked
   643  000358  6F80               	movwf	main@eepromValue& (0+255),b	;volatile
   644  00035A                     
   645                           ; BSR set to: 0
   646  00035A  0E01               	movlw	1
   647  00035C  2760               	addwf	main@eepromAddress& (0+255),f,b
   648  00035E  0E00               	movlw	0
   649  000360  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   650  000362  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   651  000364  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   652  000366                     
   653                           ; BSR set to: 0
   654                           ;avr-main.c: 217:     readyDiskChangeMode = (enum ReadyDiskChangeMode)eepromValue;
   655  000366  C080  F084         	movff	main@eepromValue,main@readyDiskChangeMode	;volatile
   656  00036A                     
   657                           ; BSR set to: 0
   658                           ;avr-main.c: 219:     eepromValue = EepromRead(eepromAddress++);
   659  00036A  C060  F072         	movff	main@eepromAddress,EepromRead@address
   660  00036E  C061  F073         	movff	main@eepromAddress+1,EepromRead@address+1
   661  000372  C062  F074         	movff	main@eepromAddress+2,EepromRead@address+2
   662  000376  C063  F075         	movff	main@eepromAddress+3,EepromRead@address+3
   663  00037A  ECCD  F008         	call	_EepromRead	;wreg free
   664  00037E  0100               	movlb	0	; () banked
   665  000380  6F80               	movwf	main@eepromValue& (0+255),b	;volatile
   666  000382                     
   667                           ; BSR set to: 0
   668  000382  0E01               	movlw	1
   669  000384  2760               	addwf	main@eepromAddress& (0+255),f,b
   670  000386  0E00               	movlw	0
   671  000388  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   672  00038A  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   673  00038C  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   674  00038E                     
   675                           ; BSR set to: 0
   676                           ;avr-main.c: 220:     startDisplayMode = (enum DisplayMode)eepromValue;
   677  00038E  C080  F082         	movff	main@eepromValue,main@startDisplayMode	;volatile
   678  000392                     
   679                           ; BSR set to: 0
   680                           ;avr-main.c: 222:     eepromValue = EepromRead(eepromAddress++);
   681  000392  C060  F072         	movff	main@eepromAddress,EepromRead@address
   682  000396  C061  F073         	movff	main@eepromAddress+1,EepromRead@address+1
   683  00039A  C062  F074         	movff	main@eepromAddress+2,EepromRead@address+2
   684  00039E  C063  F075         	movff	main@eepromAddress+3,EepromRead@address+3
   685  0003A2  ECCD  F008         	call	_EepromRead	;wreg free
   686  0003A6  0100               	movlb	0	; () banked
   687  0003A8  6F80               	movwf	main@eepromValue& (0+255),b	;volatile
   688  0003AA                     
   689                           ; BSR set to: 0
   690  0003AA  0E01               	movlw	1
   691  0003AC  2760               	addwf	main@eepromAddress& (0+255),f,b
   692  0003AE  0E00               	movlw	0
   693  0003B0  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
   694  0003B2  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
   695  0003B4  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
   696  0003B6                     
   697                           ; BSR set to: 0
   698                           ;avr-main.c: 223:     maxTrack = (int_fast8_t)eepromValue;
   699  0003B6  C080  F086         	movff	main@eepromValue,_maxTrack	;volatile
   700  0003BA                     
   701                           ; BSR set to: 0
   702                           ;avr-main.c: 225:     displayMode = startDisplayMode;
   703  0003BA  C082  F081         	movff	main@startDisplayMode,main@displayMode
   704  0003BE                     
   705                           ; BSR set to: 0
   706                           ;avr-main.c: 227:     INTCONbits.PEIE = 1;
   707  0003BE  8CF2               	bsf	242,6,c	;volatile
   708  0003C0                     
   709                           ; BSR set to: 0
   710                           ;avr-main.c: 228:     INTCONbits.GIE = 1;
   711  0003C0  8EF2               	bsf	242,7,c	;volatile
   712  0003C2                     
   713                           ; BSR set to: 0
   714                           ;avr-main.c: 230:     PIE1bits.TMR2IE = 1;
   715  0003C2  829D               	bsf	157,1,c	;volatile
   716  0003C4                     
   717                           ; BSR set to: 0
   718                           ;avr-main.c: 231:     PIE5bits.TMR4IE = 1;
   719  0003C4  807D               	bsf	125,0,c	;volatile
   720  0003C6                     
   721                           ; BSR set to: 0
   722                           ;avr-main.c: 233:     PIE2bits.CCP2IE = 1;
   723  0003C6  80A0               	bsf	160,0,c	;volatile
   724  0003C8                     
   725                           ; BSR set to: 0
   726                           ;avr-main.c: 234:     PIE4bits.CCP3IE = 1;
   727  0003C8  807A               	bsf	122,0,c	;volatile
   728  0003CA                     
   729                           ; BSR set to: 0
   730                           ;avr-main.c: 235:     PIE4bits.CCP4IE = 1;
   731  0003CA  827A               	bsf	122,1,c	;volatile
   732  0003CC                     
   733                           ; BSR set to: 0
   734                           ;avr-main.c: 236:     PIE4bits.CCP5IE = 1;
   735  0003CC  847A               	bsf	122,2,c	;volatile
   736  0003CE                     l3020:
   737                           
   738                           ; BSR set to: 0
   739                           ;avr-main.c: 239:     {;avr-main.c: 240:         if (!PORTBbits.RB0)
   740  0003CE  B081               	btfsc	129,0,c	;volatile
   741  0003D0  EFEC  F001         	goto	u2781
   742  0003D4  EFEE  F001         	goto	u2780
   743  0003D8                     u2781:
   744  0003D8  EFC3  F003         	goto	l164
   745  0003DC                     u2780:
   746  0003DC                     
   747                           ; BSR set to: 0
   748                           ;avr-main.c: 241:         {;avr-main.c: 242:             externalSignal = PORTBbits.RB7;
   749  0003DC  BE81               	btfsc	129,7,c	;volatile
   750  0003DE  EFF3  F001         	goto	u2791
   751  0003E2  EFF6  F001         	goto	u2790
   752  0003E6                     u2791:
   753  0003E6  8830               	bsf	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
   754  0003E8  EFF7  F001         	goto	u2805
   755  0003EC                     u2790:
   756  0003EC  9830               	bcf	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
   757  0003EE                     u2805:
   758                           
   759                           ;avr-main.c: 245:             {;avr-main.c: 246:                 switch (tg43Mode)
   760  0003EE  EF67  F002         	goto	l3044
   761  0003F2                     l166:
   762                           
   763                           ; BSR set to: 0
   764                           ;avr-main.c: 249:                     tg43 = !PORTBbits.RB4 && track >= 44;
   765  0003F2  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   766  0003F4  B881               	btfsc	129,4,c	;volatile
   767  0003F6  EFFF  F001         	goto	u2811
   768  0003FA  EF01  F002         	goto	u2810
   769  0003FE                     u2811:
   770  0003FE  EF95  F002         	goto	l3046
   771  000402                     u2810:
   772  000402                     
   773                           ; BSR set to: 0
   774  000402  5171               	movf	_track& (0+255),w,b	;volatile
   775  000404  0A80               	xorlw	128
   776  000406  0F54               	addlw	-172
   777  000408  A0D8               	btfss	status,0,c
   778  00040A  EF09  F002         	goto	u2821
   779  00040E  EF0B  F002         	goto	u2820
   780  000412                     u2821:
   781  000412  EF95  F002         	goto	l3046
   782  000416                     u2820:
   783  000416                     l3026:
   784                           
   785                           ; BSR set to: 0
   786  000416  8C2F               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   787  000418  EF95  F002         	goto	l3046
   788  00041C                     l170:
   789                           
   790                           ; BSR set to: 0
   791                           ;avr-main.c: 252:                     tg43 = PORTBbits.RB4 && track >= 44;
   792  00041C  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   793  00041E  A881               	btfss	129,4,c	;volatile
   794  000420  EF14  F002         	goto	u2831
   795  000424  EF16  F002         	goto	u2830
   796  000428                     u2831:
   797  000428  EF95  F002         	goto	l3046
   798  00042C                     u2830:
   799  00042C                     
   800                           ; BSR set to: 0
   801  00042C  5171               	movf	_track& (0+255),w,b	;volatile
   802  00042E  0A80               	xorlw	128
   803  000430  0F54               	addlw	-172
   804  000432  A0D8               	btfss	status,0,c
   805  000434  EF1E  F002         	goto	u2841
   806  000438  EF20  F002         	goto	u2840
   807  00043C                     u2841:
   808  00043C  EF95  F002         	goto	l3046
   809  000440                     u2840:
   810  000440  EF0B  F002         	goto	l3026
   811  000444                     l3032:
   812                           
   813                           ; BSR set to: 0
   814                           ;avr-main.c: 255:                     tg43 = track >= 44;
   815  000444  5171               	movf	_track& (0+255),w,b	;volatile
   816  000446  0A80               	xorlw	128
   817  000448  0F54               	addlw	-172
   818  00044A  B0D8               	btfsc	status,0,c
   819  00044C  EF2A  F002         	goto	u2851
   820  000450  EF2D  F002         	goto	u2850
   821  000454                     u2851:
   822  000454  8C2F               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   823  000456  EF2E  F002         	goto	u2865
   824  00045A                     u2850:
   825  00045A  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   826  00045C                     u2865:
   827                           
   828                           ;avr-main.c: 256:                     break;
   829  00045C  EF95  F002         	goto	l3046
   830  000460                     l174:
   831                           
   832                           ; BSR set to: 0
   833                           ;avr-main.c: 258:                     tg43 = PORTBbits.RB4 && track >= 60;
   834  000460  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   835  000462  A881               	btfss	129,4,c	;volatile
   836  000464  EF36  F002         	goto	u2871
   837  000468  EF38  F002         	goto	u2870
   838  00046C                     u2871:
   839  00046C  EF95  F002         	goto	l3046
   840  000470                     u2870:
   841  000470                     
   842                           ; BSR set to: 0
   843  000470  5171               	movf	_track& (0+255),w,b	;volatile
   844  000472  0A80               	xorlw	128
   845  000474  0F44               	addlw	-188
   846  000476  A0D8               	btfss	status,0,c
   847  000478  EF40  F002         	goto	u2881
   848  00047C  EF42  F002         	goto	u2880
   849  000480                     u2881:
   850  000480  EF95  F002         	goto	l3046
   851  000484                     u2880:
   852  000484  EF0B  F002         	goto	l3026
   853  000488                     l177:
   854                           
   855                           ; BSR set to: 0
   856                           ;avr-main.c: 261:                     tg43 = (!PORTBbits.RB4 ? track >= 44 : track >= 60
      +                          );
   857  000488  A881               	btfss	129,4,c	;volatile
   858  00048A  EF49  F002         	goto	u2891
   859  00048E  EF4B  F002         	goto	u2890
   860  000492                     u2891:
   861  000492  EF22  F002         	goto	l3032
   862  000496                     u2890:
   863  000496                     
   864                           ; BSR set to: 0
   865  000496  5171               	movf	_track& (0+255),w,b	;volatile
   866  000498  0A80               	xorlw	128
   867  00049A  0F44               	addlw	-188
   868  00049C  B0D8               	btfsc	status,0,c
   869  00049E  EF53  F002         	goto	u2901
   870  0004A2  EF56  F002         	goto	u2900
   871  0004A6                     u2901:
   872  0004A6  8C2F               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   873  0004A8  EF57  F002         	goto	u2915
   874  0004AC                     u2900:
   875  0004AC  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   876  0004AE                     u2915:
   877  0004AE  EF95  F002         	goto	l3046
   878  0004B2                     l183:
   879                           
   880                           ; BSR set to: 0
   881                           ;avr-main.c: 267:                     tg43 = 0;
   882  0004B2  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   883                           
   884                           ;avr-main.c: 268:                     break;
   885  0004B4  EF95  F002         	goto	l3046
   886  0004B8                     l184:
   887                           
   888                           ; BSR set to: 0
   889                           ;avr-main.c: 270:                     tg43 = externalSignal;
   890  0004B8  B830               	btfsc	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
   891  0004BA  EF61  F002         	goto	u2921
   892  0004BE  EF64  F002         	goto	u2920
   893  0004C2                     u2921:
   894  0004C2  8C2F               	bsf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   895  0004C4  EF65  F002         	goto	u2935
   896  0004C8                     u2920:
   897  0004C8  9C2F               	bcf	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   898  0004CA                     u2935:
   899                           
   900                           ;avr-main.c: 271:                     break;
   901  0004CA  EF95  F002         	goto	l3046
   902  0004CE                     l3044:
   903  0004CE  0100               	movlb	0	; () banked
   904  0004D0  5183               	movf	main@tg43Mode& (0+255),w,b
   905  0004D2  6F7A               	movwf	??_main& (0+255),b
   906  0004D4  6B7B               	clrf	(??_main+1)& (0+255),b
   907                           
   908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   909                           ; Switch size 1, requested type "simple"
   910                           ; Number of cases is 1, Range of values is 0 to 0
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte            4     3 (average)
   914                           ;	Chosen strategy is simple_byte
   915  0004D6  517B               	movf	(??_main+1)& (0+255),w,b
   916  0004D8  0A00               	xorlw	0	; case 0
   917  0004DA  B4D8               	btfsc	status,2,c
   918  0004DC  EF72  F002         	goto	l3522
   919  0004E0  EF95  F002         	goto	l3046
   920  0004E4                     l3522:
   921                           
   922                           ; BSR set to: 0
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 8, Range of values is 0 to 7
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte           25    13 (average)
   928                           ;	Chosen strategy is simple_byte
   929  0004E4  517A               	movf	??_main& (0+255),w,b
   930  0004E6  0A00               	xorlw	0	; case 0
   931  0004E8  B4D8               	btfsc	status,2,c
   932  0004EA  EFF9  F001         	goto	l166
   933  0004EE  0A01               	xorlw	1	; case 1
   934  0004F0  B4D8               	btfsc	status,2,c
   935  0004F2  EF0E  F002         	goto	l170
   936  0004F6  0A03               	xorlw	3	; case 2
   937  0004F8  B4D8               	btfsc	status,2,c
   938  0004FA  EF22  F002         	goto	l3032
   939  0004FE  0A01               	xorlw	1	; case 3
   940  000500  B4D8               	btfsc	status,2,c
   941  000502  EF30  F002         	goto	l174
   942  000506  0A07               	xorlw	7	; case 4
   943  000508  B4D8               	btfsc	status,2,c
   944  00050A  EF44  F002         	goto	l177
   945  00050E  0A01               	xorlw	1	; case 5
   946  000510  B4D8               	btfsc	status,2,c
   947  000512  EF0B  F002         	goto	l3026
   948  000516  0A03               	xorlw	3	; case 6
   949  000518  B4D8               	btfsc	status,2,c
   950  00051A  EF59  F002         	goto	l183
   951  00051E  0A01               	xorlw	1	; case 7
   952  000520  B4D8               	btfsc	status,2,c
   953  000522  EF5C  F002         	goto	l184
   954  000526  EF95  F002         	goto	l3046
   955  00052A                     l3046:
   956                           
   957                           ;avr-main.c: 273:                 PORTAbits.RA5 = !tg43;
   958  00052A  AC2F               	btfss	(main@tg43/(0+8))^0,main@tg43& (0+7),c
   959  00052C  EF9A  F002         	goto	u2941
   960  000530  EF9F  F002         	goto	u2940
   961  000534                     u2941:
   962  000534  0100               	movlb	0	; () banked
   963  000536  6B7A               	clrf	??_main& (0+255),b
   964  000538  2B7A               	incf	??_main& (0+255),f,b
   965  00053A  EFA1  F002         	goto	u2958
   966  00053E                     u2940:
   967  00053E  0100               	movlb	0	; () banked
   968  000540  6B7A               	clrf	??_main& (0+255),b
   969  000542                     u2958:
   970  000542  3B7A               	swapf	??_main& (0+255),f,b
   971  000544  477A               	rlncf	??_main& (0+255),f,b
   972  000546  5080               	movf	128,w,c	;volatile
   973  000548  197A               	xorwf	??_main& (0+255),w,b
   974  00054A  0BDF               	andlw	-33
   975  00054C  197A               	xorwf	??_main& (0+255),w,b
   976  00054E  6E80               	movwf	128,c	;volatile
   977                           
   978                           ;avr-main.c: 274:             };avr-main.c: 277:             {;avr-main.c: 278:         
      +                                  switch (headLoadMode)
   979  000550  EFC2  F002         	goto	l3050
   980  000554                     l186:
   981                           
   982                           ; BSR set to: 0
   983                           ;avr-main.c: 281:                     headLoad = !PORTAbits.RA0;
   984  000554  8030               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
   985  000556  A080               	btfss	128,0,c	;volatile
   986  000558  EFAF  F002         	goto	u2965
   987  00055C  9030               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
   988  00055E                     u2965:
   989                           
   990                           ;avr-main.c: 282:                     break;
   991  00055E  EFDF  F002         	goto	l3052
   992  000562                     l188:
   993                           
   994                           ; BSR set to: 0
   995                           ;avr-main.c: 284:                     headLoad = 1;
   996  000562  8030               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
   997                           
   998                           ;avr-main.c: 285:                     break;
   999  000564  EFDF  F002         	goto	l3052
  1000  000568                     l189:
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;avr-main.c: 287:                     headLoad = 0;
  1004  000568  9030               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1005                           
  1006                           ;avr-main.c: 288:                     break;
  1007  00056A  EFDF  F002         	goto	l3052
  1008  00056E                     l190:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;avr-main.c: 290:                     headLoad = externalSignal;
  1012  00056E  B830               	btfsc	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
  1013  000570  EFBC  F002         	goto	u2971
  1014  000574  EFBF  F002         	goto	u2970
  1015  000578                     u2971:
  1016  000578  8030               	bsf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1017  00057A  EFC0  F002         	goto	u2985
  1018  00057E                     u2970:
  1019  00057E  9030               	bcf	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1020  000580                     u2985:
  1021                           
  1022                           ;avr-main.c: 291:                     break;
  1023  000580  EFDF  F002         	goto	l3052
  1024  000584                     l3050:
  1025                           
  1026                           ; BSR set to: 0
  1027  000584  5185               	movf	main@headLoadMode& (0+255),w,b
  1028  000586  6F7A               	movwf	??_main& (0+255),b
  1029  000588  6B7B               	clrf	(??_main+1)& (0+255),b
  1030                           
  1031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1032                           ; Switch size 1, requested type "simple"
  1033                           ; Number of cases is 1, Range of values is 0 to 0
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte            4     3 (average)
  1037                           ;	Chosen strategy is simple_byte
  1038  00058A  517B               	movf	(??_main+1)& (0+255),w,b
  1039  00058C  0A00               	xorlw	0	; case 0
  1040  00058E  B4D8               	btfsc	status,2,c
  1041  000590  EFCC  F002         	goto	l3524
  1042  000594  EFDF  F002         	goto	l3052
  1043  000598                     l3524:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ; Switch size 1, requested type "simple"
  1047                           ; Number of cases is 4, Range of values is 0 to 3
  1048                           ; switch strategies available:
  1049                           ; Name         Instructions Cycles
  1050                           ; simple_byte           13     7 (average)
  1051                           ;	Chosen strategy is simple_byte
  1052  000598  517A               	movf	??_main& (0+255),w,b
  1053  00059A  0A00               	xorlw	0	; case 0
  1054  00059C  B4D8               	btfsc	status,2,c
  1055  00059E  EFAA  F002         	goto	l186
  1056  0005A2  0A01               	xorlw	1	; case 1
  1057  0005A4  B4D8               	btfsc	status,2,c
  1058  0005A6  EFB1  F002         	goto	l188
  1059  0005AA  0A03               	xorlw	3	; case 2
  1060  0005AC  B4D8               	btfsc	status,2,c
  1061  0005AE  EFB4  F002         	goto	l189
  1062  0005B2  0A01               	xorlw	1	; case 3
  1063  0005B4  B4D8               	btfsc	status,2,c
  1064  0005B6  EFB7  F002         	goto	l190
  1065  0005BA  EFDF  F002         	goto	l3052
  1066  0005BE                     l3052:
  1067                           
  1068                           ;avr-main.c: 293:                 PORTAbits.RA7 = !headLoad;
  1069  0005BE  A030               	btfss	(main@headLoad/(0+8))^0,main@headLoad& (0+7),c
  1070  0005C0  EFE4  F002         	goto	u2991
  1071  0005C4  EFE9  F002         	goto	u2990
  1072  0005C8                     u2991:
  1073  0005C8  0100               	movlb	0	; () banked
  1074  0005CA  6B7A               	clrf	??_main& (0+255),b
  1075  0005CC  2B7A               	incf	??_main& (0+255),f,b
  1076  0005CE  EFEB  F002         	goto	u3008
  1077  0005D2                     u2990:
  1078  0005D2  0100               	movlb	0	; () banked
  1079  0005D4  6B7A               	clrf	??_main& (0+255),b
  1080  0005D6                     u3008:
  1081  0005D6  337A               	rrcf	??_main& (0+255),f,b
  1082  0005D8  337A               	rrcf	??_main& (0+255),f,b
  1083  0005DA  5080               	movf	128,w,c	;volatile
  1084  0005DC  197A               	xorwf	??_main& (0+255),w,b
  1085  0005DE  0B7F               	andlw	-129
  1086  0005E0  197A               	xorwf	??_main& (0+255),w,b
  1087  0005E2  6E80               	movwf	128,c	;volatile
  1088  0005E4                     
  1089                           ; BSR set to: 0
  1090                           ;avr-main.c: 294:             };avr-main.c: 297:             {;avr-main.c: 298:         
      +                                  ready = !PORTAbits.RA2;
  1091  0005E4  8630               	bsf	(main@ready/(0+8))^0,main@ready& (0+7),c
  1092  0005E6  A480               	btfss	128,2,c	;volatile
  1093  0005E8  EFF7  F002         	goto	u3015
  1094  0005EC  9630               	bcf	(main@ready/(0+8))^0,main@ready& (0+7),c
  1095  0005EE                     u3015:
  1096  0005EE                     
  1097                           ;avr-main.c: 299:                 diskChange = !PORTAbits.RA6;
  1098  0005EE  8430               	bsf	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1099  0005F0  AC80               	btfss	128,6,c	;volatile
  1100  0005F2  EFFC  F002         	goto	u3025
  1101  0005F6  9430               	bcf	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1102  0005F8                     u3025:
  1103                           
  1104                           ;avr-main.c: 301:                 switch (readyDiskChangeMode)
  1105  0005F8  EF73  F003         	goto	l3076
  1106  0005FC                     l192:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;avr-main.c: 304:                     readyDiskChange = ready;
  1110  0005FC  B630               	btfsc	(main@ready/(0+8))^0,main@ready& (0+7),c
  1111  0005FE  EF03  F003         	goto	u3031
  1112  000602  EF06  F003         	goto	u3030
  1113  000606                     u3031:
  1114  000606  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1115  000608  EF07  F003         	goto	u3045
  1116  00060C                     u3030:
  1117  00060C  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1118  00060E                     u3045:
  1119                           
  1120                           ;avr-main.c: 305:                     break;
  1121  00060E  EFAD  F003         	goto	l3078
  1122  000612                     l194:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;avr-main.c: 307:                     readyDiskChange = !diskChange;
  1126  000612  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1127  000614  A430               	btfss	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1128  000616  EF0E  F003         	goto	u3055
  1129  00061A  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1130  00061C                     u3055:
  1131                           
  1132                           ;avr-main.c: 308:                     break;
  1133  00061C  EFAD  F003         	goto	l3078
  1134  000620                     l195:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;avr-main.c: 310:                     readyDiskChange = ready && !diskChange;
  1138  000620  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1139  000622  A630               	btfss	(main@ready/(0+8))^0,main@ready& (0+7),c
  1140  000624  EF16  F003         	goto	u3061
  1141  000628  EF18  F003         	goto	u3060
  1142  00062C                     u3061:
  1143  00062C  EFAD  F003         	goto	l3078
  1144  000630                     u3060:
  1145  000630                     
  1146                           ; BSR set to: 0
  1147  000630  B430               	btfsc	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1148  000632  EF1D  F003         	goto	u3071
  1149  000636  EF1F  F003         	goto	u3070
  1150  00063A                     u3071:
  1151  00063A  EFAD  F003         	goto	l3078
  1152  00063E                     u3070:
  1153  00063E                     l3060:
  1154                           
  1155                           ; BSR set to: 0
  1156  00063E  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1157  000640  EFAD  F003         	goto	l3078
  1158  000644                     l198:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;avr-main.c: 313:                     readyDiskChange = ready || !diskChange;
  1162  000644  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1163  000646  B630               	btfsc	(main@ready/(0+8))^0,main@ready& (0+7),c
  1164  000648  EF28  F003         	goto	u3081
  1165  00064C  EF2A  F003         	goto	u3080
  1166  000650                     u3081:
  1167  000650  EFAD  F003         	goto	l3078
  1168  000654                     u3080:
  1169  000654                     
  1170                           ; BSR set to: 0
  1171  000654  A430               	btfss	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1172  000656  EF2F  F003         	goto	u3091
  1173  00065A  EF31  F003         	goto	u3090
  1174  00065E                     u3091:
  1175  00065E  EFAD  F003         	goto	l3078
  1176  000662                     u3090:
  1177  000662                     l3064:
  1178                           
  1179                           ; BSR set to: 0
  1180  000662  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1181  000664  EFAD  F003         	goto	l3078
  1182  000668                     l201:
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;avr-main.c: 316:                     readyDiskChange = !ready;
  1186  000668  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1187  00066A  A630               	btfss	(main@ready/(0+8))^0,main@ready& (0+7),c
  1188  00066C  EF39  F003         	goto	u3105
  1189  000670  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1190  000672                     u3105:
  1191                           
  1192                           ;avr-main.c: 317:                     break;
  1193  000672  EFAD  F003         	goto	l3078
  1194  000676                     l202:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;avr-main.c: 319:                     readyDiskChange = diskChange;
  1198  000676  B430               	btfsc	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1199  000678  EF40  F003         	goto	u3111
  1200  00067C  EF43  F003         	goto	u3110
  1201  000680                     u3111:
  1202  000680  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1203  000682  EF44  F003         	goto	u3125
  1204  000686                     u3110:
  1205  000686  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1206  000688                     u3125:
  1207                           
  1208                           ;avr-main.c: 320:                     break;
  1209  000688  EFAD  F003         	goto	l3078
  1210  00068C                     l203:
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;avr-main.c: 322:                     readyDiskChange = !ready && diskChange;
  1214  00068C  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1215  00068E  B630               	btfsc	(main@ready/(0+8))^0,main@ready& (0+7),c
  1216  000690  EF4C  F003         	goto	u3131
  1217  000694  EF4E  F003         	goto	u3130
  1218  000698                     u3131:
  1219  000698  EFAD  F003         	goto	l3078
  1220  00069C                     u3130:
  1221  00069C                     
  1222                           ; BSR set to: 0
  1223  00069C  A430               	btfss	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1224  00069E  EF53  F003         	goto	u3141
  1225  0006A2  EF55  F003         	goto	u3140
  1226  0006A6                     u3141:
  1227  0006A6  EFAD  F003         	goto	l3078
  1228  0006AA                     u3140:
  1229  0006AA  EF1F  F003         	goto	l3060
  1230  0006AE                     l206:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;avr-main.c: 325:                     readyDiskChange = !ready || diskChange;
  1234  0006AE  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1235  0006B0  A630               	btfss	(main@ready/(0+8))^0,main@ready& (0+7),c
  1236  0006B2  EF5D  F003         	goto	u3151
  1237  0006B6  EF5F  F003         	goto	u3150
  1238  0006BA                     u3151:
  1239  0006BA  EFAD  F003         	goto	l3078
  1240  0006BE                     u3150:
  1241  0006BE                     
  1242                           ; BSR set to: 0
  1243  0006BE  B430               	btfsc	(main@diskChange/(0+8))^0,main@diskChange& (0+7),c
  1244  0006C0  EF64  F003         	goto	u3161
  1245  0006C4  EF66  F003         	goto	u3160
  1246  0006C8                     u3161:
  1247  0006C8  EFAD  F003         	goto	l3078
  1248  0006CC                     u3160:
  1249  0006CC  EF31  F003         	goto	l3064
  1250  0006D0                     l211:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;avr-main.c: 334:                     readyDiskChange = externalSignal;
  1254  0006D0  B830               	btfsc	(main@externalSignal/(0+8))^0,main@externalSignal& (0+7),c
  1255  0006D2  EF6D  F003         	goto	u3171
  1256  0006D6  EF70  F003         	goto	u3170
  1257  0006DA                     u3171:
  1258  0006DA  8E2F               	bsf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1259  0006DC  EF71  F003         	goto	u3185
  1260  0006E0                     u3170:
  1261  0006E0  9E2F               	bcf	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1262  0006E2                     u3185:
  1263                           
  1264                           ;avr-main.c: 335:                     break;
  1265  0006E2  EFAD  F003         	goto	l3078
  1266  0006E6                     l3076:
  1267  0006E6  0100               	movlb	0	; () banked
  1268  0006E8  5184               	movf	main@readyDiskChangeMode& (0+255),w,b
  1269  0006EA  6F7A               	movwf	??_main& (0+255),b
  1270  0006EC  6B7B               	clrf	(??_main+1)& (0+255),b
  1271                           
  1272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1273                           ; Switch size 1, requested type "simple"
  1274                           ; Number of cases is 1, Range of values is 0 to 0
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            4     3 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279  0006EE  517B               	movf	(??_main+1)& (0+255),w,b
  1280  0006F0  0A00               	xorlw	0	; case 0
  1281  0006F2  B4D8               	btfsc	status,2,c
  1282  0006F4  EF7E  F003         	goto	l3526
  1283  0006F8  EFAD  F003         	goto	l3078
  1284  0006FC                     l3526:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ; Switch size 1, requested type "simple"
  1288                           ; Number of cases is 11, Range of values is 0 to 10
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte           34    18 (average)
  1292                           ;	Chosen strategy is simple_byte
  1293  0006FC  517A               	movf	??_main& (0+255),w,b
  1294  0006FE  0A00               	xorlw	0	; case 0
  1295  000700  B4D8               	btfsc	status,2,c
  1296  000702  EFFE  F002         	goto	l192
  1297  000706  0A01               	xorlw	1	; case 1
  1298  000708  B4D8               	btfsc	status,2,c
  1299  00070A  EF09  F003         	goto	l194
  1300  00070E  0A03               	xorlw	3	; case 2
  1301  000710  B4D8               	btfsc	status,2,c
  1302  000712  EF10  F003         	goto	l195
  1303  000716  0A01               	xorlw	1	; case 3
  1304  000718  B4D8               	btfsc	status,2,c
  1305  00071A  EF22  F003         	goto	l198
  1306  00071E  0A07               	xorlw	7	; case 4
  1307  000720  B4D8               	btfsc	status,2,c
  1308  000722  EF34  F003         	goto	l201
  1309  000726  0A01               	xorlw	1	; case 5
  1310  000728  B4D8               	btfsc	status,2,c
  1311  00072A  EF3B  F003         	goto	l202
  1312  00072E  0A03               	xorlw	3	; case 6
  1313  000730  B4D8               	btfsc	status,2,c
  1314  000732  EF46  F003         	goto	l203
  1315  000736  0A01               	xorlw	1	; case 7
  1316  000738  B4D8               	btfsc	status,2,c
  1317  00073A  EF57  F003         	goto	l206
  1318  00073E  0A0F               	xorlw	15	; case 8
  1319  000740  B4D8               	btfsc	status,2,c
  1320  000742  EF1F  F003         	goto	l3060
  1321  000746  0A01               	xorlw	1	; case 9
  1322  000748  B4D8               	btfsc	status,2,c
  1323  00074A  EF31  F003         	goto	l3064
  1324  00074E  0A03               	xorlw	3	; case 10
  1325  000750  B4D8               	btfsc	status,2,c
  1326  000752  EF68  F003         	goto	l211
  1327  000756  EFAD  F003         	goto	l3078
  1328  00075A                     l3078:
  1329                           
  1330                           ;avr-main.c: 338:                 PORTAbits.RA3 = !readyDiskChange;
  1331  00075A  AE2F               	btfss	(main@readyDiskChange/(0+8))^0,main@readyDiskChange& (0+7),c
  1332  00075C  EFB2  F003         	goto	u3191
  1333  000760  EFB7  F003         	goto	u3190
  1334  000764                     u3191:
  1335  000764  0100               	movlb	0	; () banked
  1336  000766  6B7A               	clrf	??_main& (0+255),b
  1337  000768  2B7A               	incf	??_main& (0+255),f,b
  1338  00076A  EFB9  F003         	goto	u3208
  1339  00076E                     u3190:
  1340  00076E  0100               	movlb	0	; () banked
  1341  000770  6B7A               	clrf	??_main& (0+255),b
  1342  000772                     u3208:
  1343  000772  477A               	rlncf	??_main& (0+255),f,b
  1344  000774  477A               	rlncf	??_main& (0+255),f,b
  1345  000776  477A               	rlncf	??_main& (0+255),f,b
  1346  000778  5080               	movf	128,w,c	;volatile
  1347  00077A  197A               	xorwf	??_main& (0+255),w,b
  1348  00077C  0BF7               	andlw	-9
  1349  00077E  197A               	xorwf	??_main& (0+255),w,b
  1350  000780  6E80               	movwf	128,c	;volatile
  1351                           
  1352                           ;avr-main.c: 339:             };avr-main.c: 340:         }
  1353  000782  EF81  F005         	goto	l3192
  1354  000786                     l164:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;avr-main.c: 342:         {;avr-main.c: 343:             PORTA = 0b11111111;
  1358  000786  6880               	setf	128,c	;volatile
  1359                           
  1360                           ;avr-main.c: 346:             {;avr-main.c: 347:                 cmdSwitch = PORTBbits.R
      +                          B6;
  1361  000788  BC81               	btfsc	129,6,c	;volatile
  1362  00078A  EFC9  F003         	goto	u3211
  1363  00078E  EFCC  F003         	goto	u3210
  1364  000792                     u3211:
  1365  000792  8230               	bsf	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1366  000794  EFCD  F003         	goto	u3225
  1367  000798                     u3210:
  1368  000798  9230               	bcf	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1369  00079A                     u3225:
  1370                           
  1371                           ;avr-main.c: 349:                 if (cmdSwitch)
  1372  00079A  A230               	btfss	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1373  00079C  EFD2  F003         	goto	u3231
  1374  0007A0  EFD4  F003         	goto	u3230
  1375  0007A4                     u3231:
  1376  0007A4  EF23  F004         	goto	l213
  1377  0007A8                     u3230:
  1378  0007A8                     
  1379                           ;avr-main.c: 350:                 {;avr-main.c: 351:                     if (!cmdSwitchL
      +                          ast)
  1380  0007A8  B62F               	btfsc	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1381  0007AA  EFD9  F003         	goto	u3241
  1382  0007AE  EFDB  F003         	goto	u3240
  1383  0007B2                     u3241:
  1384  0007B2  EFE6  F003         	goto	l214
  1385  0007B6                     u3240:
  1386  0007B6                     
  1387                           ;avr-main.c: 352:                     {;avr-main.c: 353:                         cmdSwit
      +                          chStartCount = counter1000Hz;
  1388  0007B6  C068  F064         	movff	_counter1000Hz,main@cmdSwitchStartCount	;volatile
  1389  0007BA  C069  F065         	movff	_counter1000Hz+1,main@cmdSwitchStartCount+1	;volatile
  1390  0007BE  C06A  F066         	movff	_counter1000Hz+2,main@cmdSwitchStartCount+2	;volatile
  1391  0007C2  C06B  F067         	movff	_counter1000Hz+3,main@cmdSwitchStartCount+3	;volatile
  1392                           
  1393                           ;avr-main.c: 355:                         cmdSwitchLast = 1;
  1394  0007C6  862F               	bsf	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1395                           
  1396                           ;avr-main.c: 356:                     }
  1397  0007C8  EF23  F004         	goto	l213
  1398  0007CC                     l214:
  1399                           
  1400                           ;avr-main.c: 358:                     {;avr-main.c: 359:                         if(!cmd
      +                          SwitchLong)
  1401  0007CC  B22F               	btfsc	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1402  0007CE  EFEB  F003         	goto	u3251
  1403  0007D2  EFED  F003         	goto	u3250
  1404  0007D6                     u3251:
  1405  0007D6  EF23  F004         	goto	l213
  1406  0007DA                     u3250:
  1407  0007DA                     
  1408                           ;avr-main.c: 360:                         {;avr-main.c: 361:                            
      +                           uint_fast16_t counts = counter1000Hz - cmdSwitchStartCount;
  1409  0007DA  0100               	movlb	0	; () banked
  1410  0007DC  5164               	movf	main@cmdSwitchStartCount& (0+255),w,b
  1411  0007DE  5D68               	subwf	_counter1000Hz& (0+255),w,b	;volatile
  1412  0007E0  6F7C               	movwf	main@counts& (0+255),b
  1413  0007E2  5165               	movf	(main@cmdSwitchStartCount+1)& (0+255),w,b
  1414  0007E4  5969               	subwfb	(_counter1000Hz+1)& (0+255),w,b	;volatile
  1415  0007E6  6F7D               	movwf	(main@counts+1)& (0+255),b
  1416  0007E8  5166               	movf	(main@cmdSwitchStartCount+2)& (0+255),w,b
  1417  0007EA  596A               	subwfb	(_counter1000Hz+2)& (0+255),w,b	;volatile
  1418  0007EC  6F7E               	movwf	(main@counts+2)& (0+255),b
  1419  0007EE  5167               	movf	(main@cmdSwitchStartCount+3)& (0+255),w,b
  1420  0007F0  596B               	subwfb	(_counter1000Hz+3)& (0+255),w,b	;volatile
  1421  0007F2  6F7F               	movwf	(main@counts+3)& (0+255),b
  1422                           
  1423                           ;avr-main.c: 362:                             if(counts >= 2000)
  1424  0007F4  517F               	movf	(main@counts+3)& (0+255),w,b
  1425  0007F6  117E               	iorwf	(main@counts+2)& (0+255),w,b
  1426  0007F8  E10B               	bnz	u3260
  1427  0007FA  0ED0               	movlw	208
  1428  0007FC  5D7C               	subwf	main@counts& (0+255),w,b
  1429  0007FE  0E07               	movlw	7
  1430  000800  597D               	subwfb	(main@counts+1)& (0+255),w,b
  1431  000802  A0D8               	btfss	status,0,c
  1432  000804  EF06  F004         	goto	u3261
  1433  000808  EF08  F004         	goto	u3260
  1434  00080C                     u3261:
  1435  00080C  EF0C  F004         	goto	l217
  1436  000810                     u3260:
  1437  000810                     
  1438                           ; BSR set to: 0
  1439                           ;avr-main.c: 363:                             {;avr-main.c: 364:                        
      +                                   cmdSwitchShort = 0;
  1440  000810  942F               	bcf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1441                           
  1442                           ;avr-main.c: 365:                                 cmdSwitchLong = 1;
  1443  000812  822F               	bsf	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1444                           
  1445                           ;avr-main.c: 366:                             }
  1446  000814  EF23  F004         	goto	l213
  1447  000818                     l217:
  1448                           
  1449                           ; BSR set to: 0
  1450  000818  B42F               	btfsc	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1451  00081A  EF11  F004         	goto	u3271
  1452  00081E  EF13  F004         	goto	u3270
  1453  000822                     u3271:
  1454  000822  EF23  F004         	goto	l216
  1455  000826                     u3270:
  1456  000826                     
  1457                           ; BSR set to: 0
  1458  000826  517F               	movf	(main@counts+3)& (0+255),w,b
  1459  000828  117E               	iorwf	(main@counts+2)& (0+255),w,b
  1460  00082A  117D               	iorwf	(main@counts+1)& (0+255),w,b
  1461  00082C  E109               	bnz	u3280
  1462  00082E  0E19               	movlw	25
  1463  000830  5D7C               	subwf	main@counts& (0+255),w,b
  1464  000832  A0D8               	btfss	status,0,c
  1465  000834  EF1E  F004         	goto	u3281
  1466  000838  EF20  F004         	goto	u3280
  1467  00083C                     u3281:
  1468  00083C  EF23  F004         	goto	l216
  1469  000840                     u3280:
  1470  000840                     
  1471                           ; BSR set to: 0
  1472                           ;avr-main.c: 368:                             {;avr-main.c: 369:                        
      +                                   cmdSwitchShort = 1;
  1473  000840  842F               	bsf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1474  000842  EF23  F004         	goto	l213
  1475  000846                     l216:
  1476  000846                     l213:
  1477                           
  1478                           ;avr-main.c: 374:             };avr-main.c: 377:             {;avr-main.c: 378:         
      +                                  if (!cmdSwitch && cmdSwitchLast)
  1479  000846  B230               	btfsc	(main@cmdSwitch/(0+8))^0,main@cmdSwitch& (0+7),c
  1480  000848  EF28  F004         	goto	u3291
  1481  00084C  EF2A  F004         	goto	u3290
  1482  000850                     u3291:
  1483  000850  EF81  F005         	goto	l3192
  1484  000854                     u3290:
  1485  000854  A62F               	btfss	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1486  000856  EF2F  F004         	goto	u3301
  1487  00085A  EF31  F004         	goto	u3300
  1488  00085E                     u3301:
  1489  00085E  EF81  F005         	goto	l3192
  1490  000862                     u3300:
  1491  000862                     
  1492                           ;avr-main.c: 379:                 {;avr-main.c: 380:                     if (cmdSwitchLo
      +                          ng)
  1493  000862  A22F               	btfss	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1494  000864  EF36  F004         	goto	u3311
  1495  000868  EF38  F004         	goto	u3310
  1496  00086C                     u3311:
  1497  00086C  EFD7  F004         	goto	l221
  1498  000870                     u3310:
  1499  000870                     
  1500                           ;avr-main.c: 381:                     {;avr-main.c: 382:                         if (men
      +                          uMode == M_Hidden)
  1501  000870  0100               	movlb	0	; () banked
  1502  000872  516D               	movf	main@menuMode& (0+255),w,b
  1503  000874  A4D8               	btfss	status,2,c
  1504  000876  EF3F  F004         	goto	u3321
  1505  00087A  EF41  F004         	goto	u3320
  1506  00087E                     u3321:
  1507  00087E  EF45  F004         	goto	l3100
  1508  000882                     u3320:
  1509  000882                     
  1510                           ; BSR set to: 0
  1511                           ;avr-main.c: 383:                         {;avr-main.c: 384:                            
      +                           menuMode = M_TG43;
  1512  000882  0E01               	movlw	1
  1513  000884  6F6D               	movwf	main@menuMode& (0+255),b
  1514                           
  1515                           ;avr-main.c: 385:                         }
  1516  000886  EFD4  F004         	goto	l3136
  1517  00088A                     l3100:
  1518                           
  1519                           ; BSR set to: 0
  1520  00088A  0E06               	movlw	6
  1521  00088C  196D               	xorwf	main@menuMode& (0+255),w,b
  1522  00088E  A4D8               	btfss	status,2,c
  1523  000890  EF4C  F004         	goto	u3331
  1524  000894  EF4E  F004         	goto	u3330
  1525  000898                     u3331:
  1526  000898  EF52  F004         	goto	l224
  1527  00089C                     u3330:
  1528  00089C                     
  1529                           ; BSR set to: 0
  1530                           ;avr-main.c: 387:                         {;avr-main.c: 388:                            
      +                           menuMode = M_Hidden;
  1531  00089C  0E00               	movlw	0
  1532  00089E  6F6D               	movwf	main@menuMode& (0+255),b
  1533                           
  1534                           ;avr-main.c: 389:                         }
  1535  0008A0  EFD4  F004         	goto	l3136
  1536  0008A4                     l224:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;avr-main.c: 391:                         {;avr-main.c: 392:                            
      +                           menuEdit = !menuEdit;
  1540  0008A4  A02F               	btfss	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1541  0008A6  EF57  F004         	goto	u3341
  1542  0008AA  EF5A  F004         	goto	u3340
  1543  0008AE                     u3341:
  1544  0008AE  802F               	bsf	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1545  0008B0  EF5B  F004         	goto	u3355
  1546  0008B4                     u3340:
  1547  0008B4  902F               	bcf	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1548  0008B6                     u3355:
  1549                           
  1550                           ;avr-main.c: 394:                             if(!menuEdit)
  1551  0008B6  B02F               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1552  0008B8  EF60  F004         	goto	u3361
  1553  0008BC  EF62  F004         	goto	u3360
  1554  0008C0                     u3361:
  1555  0008C0  EFD4  F004         	goto	l3136
  1556  0008C4                     u3360:
  1557  0008C4                     
  1558                           ;avr-main.c: 395:                             {;avr-main.c: 398:                        
      +                                   eepromAddress = 0x00;
  1559  0008C4  0E00               	movlw	0
  1560  0008C6  0100               	movlb	0	; () banked
  1561  0008C8  6F60               	movwf	main@eepromAddress& (0+255),b
  1562  0008CA  0E00               	movlw	0
  1563  0008CC  6F61               	movwf	(main@eepromAddress+1)& (0+255),b
  1564  0008CE  0E00               	movlw	0
  1565  0008D0  6F62               	movwf	(main@eepromAddress+2)& (0+255),b
  1566  0008D2  0E00               	movlw	0
  1567  0008D4  6F63               	movwf	(main@eepromAddress+3)& (0+255),b
  1568  0008D6                     
  1569                           ; BSR set to: 0
  1570                           ;avr-main.c: 399:                                 eepromValue = (uint_fast8_t)tg43Mode;
  1571  0008D6  C083  F080         	movff	main@tg43Mode,main@eepromValue	;volatile
  1572  0008DA                     
  1573                           ; BSR set to: 0
  1574                           ;avr-main.c: 400:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1575  0008DA  0E00               	movlw	0
  1576  0008DC  6F72               	movwf	EepromWrite@address& (0+255),b
  1577  0008DE  0E00               	movlw	0
  1578  0008E0  6F73               	movwf	(EepromWrite@address+1)& (0+255),b
  1579  0008E2  0E00               	movlw	0
  1580  0008E4  6F74               	movwf	(EepromWrite@address+2)& (0+255),b
  1581  0008E6  0E00               	movlw	0
  1582  0008E8  6F75               	movwf	(EepromWrite@address+3)& (0+255),b
  1583  0008EA  C080  F076         	movff	main@eepromValue,EepromWrite@data	;volatile
  1584  0008EE  EC9F  F008         	call	_EepromWrite	;wreg free
  1585  0008F2  0E01               	movlw	1
  1586  0008F4  0100               	movlb	0	; () banked
  1587  0008F6  2760               	addwf	main@eepromAddress& (0+255),f,b
  1588  0008F8  0E00               	movlw	0
  1589  0008FA  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1590  0008FC  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1591  0008FE  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1592  000900                     
  1593                           ; BSR set to: 0
  1594                           ;avr-main.c: 402:                                 eepromValue = (uint_fast8_t)headLoadMo
      +                          de;
  1595  000900  C085  F080         	movff	main@headLoadMode,main@eepromValue	;volatile
  1596  000904                     
  1597                           ; BSR set to: 0
  1598                           ;avr-main.c: 403:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1599  000904  C060  F072         	movff	main@eepromAddress,EepromWrite@address
  1600  000908  C061  F073         	movff	main@eepromAddress+1,EepromWrite@address+1
  1601  00090C  C062  F074         	movff	main@eepromAddress+2,EepromWrite@address+2
  1602  000910  C063  F075         	movff	main@eepromAddress+3,EepromWrite@address+3
  1603  000914  C080  F076         	movff	main@eepromValue,EepromWrite@data	;volatile
  1604  000918  EC9F  F008         	call	_EepromWrite	;wreg free
  1605  00091C  0E01               	movlw	1
  1606  00091E  0100               	movlb	0	; () banked
  1607  000920  2760               	addwf	main@eepromAddress& (0+255),f,b
  1608  000922  0E00               	movlw	0
  1609  000924  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1610  000926  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1611  000928  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1612  00092A                     
  1613                           ; BSR set to: 0
  1614                           ;avr-main.c: 405:                                 eepromValue = (uint_fast8_t)readyDiskC
      +                          hangeMode;
  1615  00092A  C084  F080         	movff	main@readyDiskChangeMode,main@eepromValue	;volatile
  1616  00092E                     
  1617                           ; BSR set to: 0
  1618                           ;avr-main.c: 406:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1619  00092E  C060  F072         	movff	main@eepromAddress,EepromWrite@address
  1620  000932  C061  F073         	movff	main@eepromAddress+1,EepromWrite@address+1
  1621  000936  C062  F074         	movff	main@eepromAddress+2,EepromWrite@address+2
  1622  00093A  C063  F075         	movff	main@eepromAddress+3,EepromWrite@address+3
  1623  00093E  C080  F076         	movff	main@eepromValue,EepromWrite@data	;volatile
  1624  000942  EC9F  F008         	call	_EepromWrite	;wreg free
  1625  000946  0E01               	movlw	1
  1626  000948  0100               	movlb	0	; () banked
  1627  00094A  2760               	addwf	main@eepromAddress& (0+255),f,b
  1628  00094C  0E00               	movlw	0
  1629  00094E  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1630  000950  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1631  000952  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1632  000954                     
  1633                           ; BSR set to: 0
  1634                           ;avr-main.c: 408:                                 eepromValue = (uint_fast8_t)startDispl
      +                          ayMode;
  1635  000954  C082  F080         	movff	main@startDisplayMode,main@eepromValue	;volatile
  1636  000958                     
  1637                           ; BSR set to: 0
  1638                           ;avr-main.c: 409:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1639  000958  C060  F072         	movff	main@eepromAddress,EepromWrite@address
  1640  00095C  C061  F073         	movff	main@eepromAddress+1,EepromWrite@address+1
  1641  000960  C062  F074         	movff	main@eepromAddress+2,EepromWrite@address+2
  1642  000964  C063  F075         	movff	main@eepromAddress+3,EepromWrite@address+3
  1643  000968  C080  F076         	movff	main@eepromValue,EepromWrite@data	;volatile
  1644  00096C  EC9F  F008         	call	_EepromWrite	;wreg free
  1645  000970  0E01               	movlw	1
  1646  000972  0100               	movlb	0	; () banked
  1647  000974  2760               	addwf	main@eepromAddress& (0+255),f,b
  1648  000976  0E00               	movlw	0
  1649  000978  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1650  00097A  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1651  00097C  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1652  00097E                     
  1653                           ; BSR set to: 0
  1654                           ;avr-main.c: 411:                                 eepromValue = (uint_fast8_t)maxTrack;
  1655  00097E  C086  F080         	movff	_maxTrack,main@eepromValue	;volatile
  1656  000982                     
  1657                           ; BSR set to: 0
  1658                           ;avr-main.c: 412:                                 EepromWrite(eepromAddress++, eepromVal
      +                          ue);
  1659  000982  C060  F072         	movff	main@eepromAddress,EepromWrite@address
  1660  000986  C061  F073         	movff	main@eepromAddress+1,EepromWrite@address+1
  1661  00098A  C062  F074         	movff	main@eepromAddress+2,EepromWrite@address+2
  1662  00098E  C063  F075         	movff	main@eepromAddress+3,EepromWrite@address+3
  1663  000992  C080  F076         	movff	main@eepromValue,EepromWrite@data	;volatile
  1664  000996  EC9F  F008         	call	_EepromWrite	;wreg free
  1665  00099A  0E01               	movlw	1
  1666  00099C  0100               	movlb	0	; () banked
  1667  00099E  2760               	addwf	main@eepromAddress& (0+255),f,b
  1668  0009A0  0E00               	movlw	0
  1669  0009A2  2361               	addwfc	(main@eepromAddress+1)& (0+255),f,b
  1670  0009A4  2362               	addwfc	(main@eepromAddress+2)& (0+255),f,b
  1671  0009A6  2363               	addwfc	(main@eepromAddress+3)& (0+255),f,b
  1672  0009A8                     l3136:
  1673                           
  1674                           ;avr-main.c: 416:                         cmdSwitchLong = 0;
  1675  0009A8  922F               	bcf	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  1676                           
  1677                           ;avr-main.c: 417:                     }
  1678  0009AA  EF80  F005         	goto	l3190
  1679  0009AE                     l221:
  1680  0009AE  A42F               	btfss	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1681  0009B0  EFDC  F004         	goto	u3371
  1682  0009B4  EFDE  F004         	goto	u3370
  1683  0009B8                     u3371:
  1684  0009B8  EF80  F005         	goto	l3190
  1685  0009BC                     u3370:
  1686  0009BC                     
  1687                           ;avr-main.c: 419:                     {;avr-main.c: 420:                         if (men
      +                          uMode != M_Hidden)
  1688  0009BC  0100               	movlb	0	; () banked
  1689  0009BE  516D               	movf	main@menuMode& (0+255),w,b
  1690  0009C0  B4D8               	btfsc	status,2,c
  1691  0009C2  EFE5  F004         	goto	u3381
  1692  0009C6  EFE7  F004         	goto	u3380
  1693  0009CA                     u3381:
  1694  0009CA  EF71  F005         	goto	l3182
  1695  0009CE                     u3380:
  1696  0009CE                     
  1697                           ; BSR set to: 0
  1698                           ;avr-main.c: 421:                         {;avr-main.c: 422:                            
      +                           if (!menuEdit)
  1699  0009CE  B02F               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  1700  0009D0  EFEC  F004         	goto	u3391
  1701  0009D4  EFEE  F004         	goto	u3390
  1702  0009D8                     u3391:
  1703  0009D8  EF4E  F005         	goto	l3180
  1704  0009DC                     u3390:
  1705  0009DC                     
  1706                           ; BSR set to: 0
  1707                           ;avr-main.c: 423:                             {;avr-main.c: 424:                        
      +                                   if(menuMode == M_Exit)
  1708  0009DC  0E06               	movlw	6
  1709  0009DE  196D               	xorwf	main@menuMode& (0+255),w,b
  1710  0009E0  A4D8               	btfss	status,2,c
  1711  0009E2  EFF5  F004         	goto	u3401
  1712  0009E6  EFF7  F004         	goto	u3400
  1713  0009EA                     u3401:
  1714  0009EA  EFFB  F004         	goto	l3146
  1715  0009EE                     u3400:
  1716  0009EE                     
  1717                           ; BSR set to: 0
  1718                           ;avr-main.c: 425:                                     menuMode = M_TG43;
  1719  0009EE  0E01               	movlw	1
  1720  0009F0  6F6D               	movwf	main@menuMode& (0+255),b
  1721  0009F2  EF7F  F005         	goto	l3188
  1722  0009F6                     l3146:
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;avr-main.c: 427:                                     menuMode++;
  1726  0009F6  2B6D               	incf	main@menuMode& (0+255),f,b
  1727  0009F8  EF7F  F005         	goto	l3188
  1728  0009FC                     l3148:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;avr-main.c: 434:                                     if(tg43Mode == TG_FromExternalSign
      +                          al)
  1732  0009FC  0E07               	movlw	7
  1733  0009FE  1983               	xorwf	main@tg43Mode& (0+255),w,b
  1734  000A00  A4D8               	btfss	status,2,c
  1735  000A02  EF05  F005         	goto	u3411
  1736  000A06  EF07  F005         	goto	u3410
  1737  000A0A                     u3411:
  1738  000A0A  EF0B  F005         	goto	l3152
  1739  000A0E                     u3410:
  1740  000A0E                     
  1741                           ; BSR set to: 0
  1742                           ;avr-main.c: 435:                                         tg43Mode = TG_Write_Active_44_
      +                          XX;
  1743  000A0E  0E00               	movlw	0
  1744  000A10  6F83               	movwf	main@tg43Mode& (0+255),b
  1745  000A12  EF7F  F005         	goto	l3188
  1746  000A16                     l3152:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;avr-main.c: 437:                                         tg43Mode++;
  1750  000A16  2B83               	incf	main@tg43Mode& (0+255),f,b
  1751  000A18  EF7F  F005         	goto	l3188
  1752  000A1C                     l3154:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;avr-main.c: 440:                                     if(headLoadMode == HL_FromExternal
      +                          Signal)
  1756  000A1C  0E03               	movlw	3
  1757  000A1E  1985               	xorwf	main@headLoadMode& (0+255),w,b
  1758  000A20  A4D8               	btfss	status,2,c
  1759  000A22  EF15  F005         	goto	u3421
  1760  000A26  EF17  F005         	goto	u3420
  1761  000A2A                     u3421:
  1762  000A2A  EF1B  F005         	goto	l3158
  1763  000A2E                     u3420:
  1764  000A2E                     
  1765                           ; BSR set to: 0
  1766                           ;avr-main.c: 441:                                         headLoadMode = HL_FromMotorBEn
      +                          able;
  1767  000A2E  0E00               	movlw	0
  1768  000A30  6F85               	movwf	main@headLoadMode& (0+255),b
  1769  000A32  EF7F  F005         	goto	l3188
  1770  000A36                     l3158:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;avr-main.c: 443:                                         headLoadMode++;
  1774  000A36  2B85               	incf	main@headLoadMode& (0+255),f,b
  1775  000A38  EF7F  F005         	goto	l3188
  1776  000A3C                     l3160:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;avr-main.c: 446:                                     if(readyDiskChangeMode == RDC_From
      +                          ExternalSignal)
  1780  000A3C  0E0A               	movlw	10
  1781  000A3E  1984               	xorwf	main@readyDiskChangeMode& (0+255),w,b
  1782  000A40  A4D8               	btfss	status,2,c
  1783  000A42  EF25  F005         	goto	u3431
  1784  000A46  EF27  F005         	goto	u3430
  1785  000A4A                     u3431:
  1786  000A4A  EF2B  F005         	goto	l3164
  1787  000A4E                     u3430:
  1788  000A4E                     
  1789                           ; BSR set to: 0
  1790                           ;avr-main.c: 447:                                         readyDiskChangeMode = RDC_From
      +                          Ready;
  1791  000A4E  0E00               	movlw	0
  1792  000A50  6F84               	movwf	main@readyDiskChangeMode& (0+255),b
  1793  000A52  EF7F  F005         	goto	l3188
  1794  000A56                     l3164:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;avr-main.c: 449:                                         readyDiskChangeMode++;
  1798  000A56  2B84               	incf	main@readyDiskChangeMode& (0+255),f,b
  1799  000A58  EF7F  F005         	goto	l3188
  1800  000A5C                     l3166:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;avr-main.c: 452:                                     if(startDisplayMode == D_Dark)
  1804  000A5C  0E03               	movlw	3
  1805  000A5E  1982               	xorwf	main@startDisplayMode& (0+255),w,b
  1806  000A60  A4D8               	btfss	status,2,c
  1807  000A62  EF35  F005         	goto	u3441
  1808  000A66  EF37  F005         	goto	u3440
  1809  000A6A                     u3441:
  1810  000A6A  EF3B  F005         	goto	l3170
  1811  000A6E                     u3440:
  1812  000A6E                     
  1813                           ; BSR set to: 0
  1814                           ;avr-main.c: 453:                                         startDisplayMode = D_Track;
  1815  000A6E  0E00               	movlw	0
  1816  000A70  6F82               	movwf	main@startDisplayMode& (0+255),b
  1817  000A72  EF7F  F005         	goto	l3188
  1818  000A76                     l3170:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;avr-main.c: 455:                                         startDisplayMode++;
  1822  000A76  2B82               	incf	main@startDisplayMode& (0+255),f,b
  1823  000A78  EF7F  F005         	goto	l3188
  1824  000A7C                     l3172:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;avr-main.c: 458:                                     if(maxTrack == 80)
  1828  000A7C  0E50               	movlw	80
  1829  000A7E  1986               	xorwf	_maxTrack& (0+255),w,b	;volatile
  1830  000A80  A4D8               	btfss	status,2,c
  1831  000A82  EF45  F005         	goto	u3451
  1832  000A86  EF47  F005         	goto	u3450
  1833  000A8A                     u3451:
  1834  000A8A  EF4B  F005         	goto	l3176
  1835  000A8E                     u3450:
  1836  000A8E                     
  1837                           ; BSR set to: 0
  1838                           ;avr-main.c: 459:                                         maxTrack = 32;
  1839  000A8E  0E20               	movlw	32
  1840  000A90  6F86               	movwf	_maxTrack& (0+255),b	;volatile
  1841  000A92  EF7F  F005         	goto	l3188
  1842  000A96                     l3176:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;avr-main.c: 461:                                         maxTrack++;
  1846  000A96  2B86               	incf	_maxTrack& (0+255),f,b	;volatile
  1847  000A98  EF7F  F005         	goto	l3188
  1848  000A9C                     l3180:
  1849                           
  1850                           ; BSR set to: 0
  1851  000A9C  516D               	movf	main@menuMode& (0+255),w,b
  1852  000A9E  6F7A               	movwf	??_main& (0+255),b
  1853  000AA0  6B7B               	clrf	(??_main+1)& (0+255),b
  1854                           
  1855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1856                           ; Switch size 1, requested type "simple"
  1857                           ; Number of cases is 1, Range of values is 0 to 0
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte            4     3 (average)
  1861                           ;	Chosen strategy is simple_byte
  1862  000AA2  517B               	movf	(??_main+1)& (0+255),w,b
  1863  000AA4  0A00               	xorlw	0	; case 0
  1864  000AA6  B4D8               	btfsc	status,2,c
  1865  000AA8  EF58  F005         	goto	l3528
  1866  000AAC  EF6F  F005         	goto	l233
  1867  000AB0                     l3528:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ; Switch size 1, requested type "simple"
  1871                           ; Number of cases is 5, Range of values is 1 to 5
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte           16     9 (average)
  1875                           ;	Chosen strategy is simple_byte
  1876  000AB0  517A               	movf	??_main& (0+255),w,b
  1877  000AB2  0A01               	xorlw	1	; case 1
  1878  000AB4  B4D8               	btfsc	status,2,c
  1879  000AB6  EFFE  F004         	goto	l3148
  1880  000ABA  0A03               	xorlw	3	; case 2
  1881  000ABC  B4D8               	btfsc	status,2,c
  1882  000ABE  EF0E  F005         	goto	l3154
  1883  000AC2  0A01               	xorlw	1	; case 3
  1884  000AC4  B4D8               	btfsc	status,2,c
  1885  000AC6  EF1E  F005         	goto	l3160
  1886  000ACA  0A07               	xorlw	7	; case 4
  1887  000ACC  B4D8               	btfsc	status,2,c
  1888  000ACE  EF2E  F005         	goto	l3166
  1889  000AD2  0A01               	xorlw	1	; case 5
  1890  000AD4  B4D8               	btfsc	status,2,c
  1891  000AD6  EF3E  F005         	goto	l3172
  1892  000ADA  EF6F  F005         	goto	l233
  1893  000ADE                     l233:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;avr-main.c: 467:                         }
  1897  000ADE  EF7F  F005         	goto	l3188
  1898  000AE2                     l3182:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;avr-main.c: 469:                         {;avr-main.c: 470:                            
      +                           if (displayMode == D_Dark)
  1902  000AE2  0E03               	movlw	3
  1903  000AE4  1981               	xorwf	main@displayMode& (0+255),w,b
  1904  000AE6  A4D8               	btfss	status,2,c
  1905  000AE8  EF78  F005         	goto	u3461
  1906  000AEC  EF7A  F005         	goto	u3460
  1907  000AF0                     u3461:
  1908  000AF0  EF7E  F005         	goto	l3186
  1909  000AF4                     u3460:
  1910  000AF4                     
  1911                           ; BSR set to: 0
  1912                           ;avr-main.c: 471:                                 displayMode = D_Track;
  1913  000AF4  0E00               	movlw	0
  1914  000AF6  6F81               	movwf	main@displayMode& (0+255),b
  1915  000AF8  EF7F  F005         	goto	l3188
  1916  000AFC                     l3186:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;avr-main.c: 473:                                 displayMode++;
  1920  000AFC  2B81               	incf	main@displayMode& (0+255),f,b
  1921  000AFE                     l3188:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;avr-main.c: 476:                         cmdSwitchShort = 0;
  1925  000AFE  942F               	bcf	(main@cmdSwitchShort/(0+8))^0,main@cmdSwitchShort& (0+7),c
  1926  000B00                     l3190:
  1927                           
  1928                           ;avr-main.c: 479:                     cmdSwitchLast = 0;
  1929  000B00  962F               	bcf	(main@cmdSwitchLast/(0+8))^0,main@cmdSwitchLast& (0+7),c
  1930  000B02                     l3192:
  1931                           
  1932                           ;avr-main.c: 485:         {;avr-main.c: 486:             if (menuMode != M_Hidden)
  1933  000B02  0100               	movlb	0	; () banked
  1934  000B04  516D               	movf	main@menuMode& (0+255),w,b
  1935  000B06  B4D8               	btfsc	status,2,c
  1936  000B08  EF88  F005         	goto	u3471
  1937  000B0C  EF8A  F005         	goto	u3470
  1938  000B10                     u3471:
  1939  000B10  EF83  F006         	goto	l3230
  1940  000B14                     u3470:
  1941  000B14                     
  1942                           ; BSR set to: 0
  1943                           ;avr-main.c: 487:             {;avr-main.c: 488:                 bcd1 = (uint_fast8_t) m
      +                          enuMode;
  1944  000B14  C06D  F06F         	movff	main@menuMode,main@bcd1
  1945                           
  1946                           ;avr-main.c: 490:                 switch(menuMode)
  1947  000B18  EFBF  F005         	goto	l3200
  1948  000B1C                     l257:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;avr-main.c: 493:                     bcd2 = (uint_fast8_t) tg43Mode;
  1952  000B1C  C083  F06E         	movff	main@tg43Mode,main@bcd2
  1953                           
  1954                           ;avr-main.c: 494:                     break;
  1955  000B20  EFE0  F005         	goto	l3202
  1956  000B24                     l259:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;avr-main.c: 496:                     bcd2 = (uint_fast8_t) headLoadMode;
  1960  000B24  C085  F06E         	movff	main@headLoadMode,main@bcd2
  1961                           
  1962                           ;avr-main.c: 497:                     break;
  1963  000B28  EFE0  F005         	goto	l3202
  1964  000B2C                     l260:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;avr-main.c: 499:                     bcd2 = (uint_fast8_t) readyDiskChangeMode;
  1968  000B2C  C084  F06E         	movff	main@readyDiskChangeMode,main@bcd2
  1969                           
  1970                           ;avr-main.c: 500:                     break;
  1971  000B30  EFE0  F005         	goto	l3202
  1972  000B34                     l261:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;avr-main.c: 502:                     bcd2 = (uint_fast8_t) startDisplayMode;
  1976  000B34  C082  F06E         	movff	main@startDisplayMode,main@bcd2
  1977                           
  1978                           ;avr-main.c: 503:                     break;
  1979  000B38  EFE0  F005         	goto	l3202
  1980  000B3C                     l3196:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;avr-main.c: 505:                     bcd1 = (uint_fast8_t) (maxTrack / 10);
  1984  000B3C  5186               	movf	_maxTrack& (0+255),w,b	;volatile
  1985  000B3E  6F72               	movwf	___awdiv@dividend& (0+255),b
  1986  000B40  6B73               	clrf	(___awdiv@dividend+1)& (0+255),b
  1987  000B42  BF72               	btfsc	___awdiv@dividend& (0+255),7,b
  1988  000B44  0773               	decf	(___awdiv@dividend+1)& (0+255),f,b
  1989  000B46  0E00               	movlw	0
  1990  000B48  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  1991  000B4A  0E0A               	movlw	10
  1992  000B4C  6F74               	movwf	___awdiv@divisor& (0+255),b
  1993  000B4E  EC5C  F007         	call	___awdiv	;wreg free
  1994  000B52  0100               	movlb	0	; () banked
  1995  000B54  5172               	movf	?___awdiv& (0+255),w,b
  1996  000B56  6F6F               	movwf	main@bcd1& (0+255),b
  1997                           
  1998                           ;avr-main.c: 506:                     bcd2 = (uint_fast8_t) (maxTrack % 10);
  1999  000B58  5186               	movf	_maxTrack& (0+255),w,b	;volatile
  2000  000B5A  6F72               	movwf	___awmod@dividend& (0+255),b
  2001  000B5C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  2002  000B5E  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  2003  000B60  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  2004  000B62  0E00               	movlw	0
  2005  000B64  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  2006  000B66  0E0A               	movlw	10
  2007  000B68  6F74               	movwf	___awmod@divisor& (0+255),b
  2008  000B6A  ECBF  F007         	call	___awmod	;wreg free
  2009  000B6E  0100               	movlb	0	; () banked
  2010  000B70  5172               	movf	?___awmod& (0+255),w,b
  2011  000B72  6F6E               	movwf	main@bcd2& (0+255),b
  2012                           
  2013                           ;avr-main.c: 507:                     break;
  2014  000B74  EFE0  F005         	goto	l3202
  2015  000B78                     l263:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;avr-main.c: 509:                     bcd2 = 0xFF;
  2019  000B78  696E               	setf	main@bcd2& (0+255),b
  2020                           
  2021                           ;avr-main.c: 510:                     break;
  2022  000B7A  EFE0  F005         	goto	l3202
  2023  000B7E                     l3200:
  2024                           
  2025                           ; BSR set to: 0
  2026  000B7E  516D               	movf	main@menuMode& (0+255),w,b
  2027  000B80  6F7A               	movwf	??_main& (0+255),b
  2028  000B82  6B7B               	clrf	(??_main+1)& (0+255),b
  2029                           
  2030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 1, Range of values is 0 to 0
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte            4     3 (average)
  2036                           ;	Chosen strategy is simple_byte
  2037  000B84  517B               	movf	(??_main+1)& (0+255),w,b
  2038  000B86  0A00               	xorlw	0	; case 0
  2039  000B88  B4D8               	btfsc	status,2,c
  2040  000B8A  EFC9  F005         	goto	l3530
  2041  000B8E  EFBC  F005         	goto	l263
  2042  000B92                     l3530:
  2043                           
  2044                           ; BSR set to: 0
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 5, Range of values is 1 to 5
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte           16     9 (average)
  2050                           ;	Chosen strategy is simple_byte
  2051  000B92  517A               	movf	??_main& (0+255),w,b
  2052  000B94  0A01               	xorlw	1	; case 1
  2053  000B96  B4D8               	btfsc	status,2,c
  2054  000B98  EF8E  F005         	goto	l257
  2055  000B9C  0A03               	xorlw	3	; case 2
  2056  000B9E  B4D8               	btfsc	status,2,c
  2057  000BA0  EF92  F005         	goto	l259
  2058  000BA4  0A01               	xorlw	1	; case 3
  2059  000BA6  B4D8               	btfsc	status,2,c
  2060  000BA8  EF96  F005         	goto	l260
  2061  000BAC  0A07               	xorlw	7	; case 4
  2062  000BAE  B4D8               	btfsc	status,2,c
  2063  000BB0  EF9A  F005         	goto	l261
  2064  000BB4  0A01               	xorlw	1	; case 5
  2065  000BB6  B4D8               	btfsc	status,2,c
  2066  000BB8  EF9E  F005         	goto	l3196
  2067  000BBC  EFBC  F005         	goto	l263
  2068  000BC0                     l3202:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;avr-main.c: 513:                 if (menuEdit ^ cmdSwitchLong)
  2072  000BC0  B22F               	btfsc	(main@cmdSwitchLong/(0+8))^0,main@cmdSwitchLong& (0+7),c
  2073  000BC2  EFE5  F005         	goto	u3481
  2074  000BC6  EFE8  F005         	goto	u3480
  2075  000BCA                     u3481:
  2076  000BCA  0E01               	movlw	1
  2077  000BCC  EFE9  F005         	goto	u3482
  2078  000BD0                     u3480:
  2079  000BD0  0E00               	movlw	0
  2080  000BD2                     u3482:
  2081  000BD2  6F7A               	movwf	??_main& (0+255),b
  2082  000BD4  B02F               	btfsc	(main@menuEdit/(0+8))^0,main@menuEdit& (0+7),c
  2083  000BD6  EFEF  F005         	goto	u3491
  2084  000BDA  EFF2  F005         	goto	u3490
  2085  000BDE                     u3491:
  2086  000BDE  0E01               	movlw	1
  2087  000BE0  EFF3  F005         	goto	u3492
  2088  000BE4                     u3490:
  2089  000BE4  0E00               	movlw	0
  2090  000BE6                     u3492:
  2091  000BE6  1B7A               	xorwf	??_main& (0+255),f,b
  2092  000BE8  B4D8               	btfsc	status,2,c
  2093  000BEA  EFF9  F005         	goto	u3501
  2094  000BEE  EFFB  F005         	goto	u3500
  2095  000BF2                     u3501:
  2096  000BF2  EF0F  F006         	goto	l264
  2097  000BF6                     u3500:
  2098  000BF6                     
  2099                           ; BSR set to: 0
  2100                           ;avr-main.c: 514:                 {;avr-main.c: 515:                     dot1 = dot2 = b
      +                          link;
  2101  000BF6  BA30               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2102  000BF8  EF00  F006         	goto	u3511
  2103  000BFC  EF03  F006         	goto	u3510
  2104  000C00                     u3511:
  2105  000C00  882F               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2106  000C02  EF04  F006         	goto	u3525
  2107  000C06                     u3510:
  2108  000C06  982F               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2109  000C08                     u3525:
  2110  000C08  B82F               	btfsc	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2111  000C0A  EF09  F006         	goto	u3521
  2112  000C0E  EF0C  F006         	goto	u3520
  2113  000C12                     u3521:
  2114  000C12  8A2F               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2115  000C14  EF0D  F006         	goto	u3535
  2116  000C18                     u3520:
  2117  000C18  9A2F               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2118  000C1A                     u3535:
  2119                           
  2120                           ;avr-main.c: 516:                 }
  2121  000C1A  EFA0  F006         	goto	l3232
  2122  000C1E                     l264:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;avr-main.c: 518:                 {;avr-main.c: 519:                     dot1 = dot2 = 1
      +                          ;
  2126  000C1E  882F               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2127  000C20  8A2F               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2128  000C22  EFA0  F006         	goto	l3232
  2129  000C26                     l3206:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;avr-main.c: 527:                     bcd1 = (uint_fast8_t) (track / 10);
  2133  000C26  5171               	movf	_track& (0+255),w,b	;volatile
  2134  000C28  6F72               	movwf	___awdiv@dividend& (0+255),b
  2135  000C2A  6B73               	clrf	(___awdiv@dividend+1)& (0+255),b
  2136  000C2C  BF72               	btfsc	___awdiv@dividend& (0+255),7,b
  2137  000C2E  0773               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2138  000C30  0E00               	movlw	0
  2139  000C32  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  2140  000C34  0E0A               	movlw	10
  2141  000C36  6F74               	movwf	___awdiv@divisor& (0+255),b
  2142  000C38  EC5C  F007         	call	___awdiv	;wreg free
  2143  000C3C  0100               	movlb	0	; () banked
  2144  000C3E  5172               	movf	?___awdiv& (0+255),w,b
  2145  000C40  6F6F               	movwf	main@bcd1& (0+255),b
  2146                           
  2147                           ;avr-main.c: 528:                     bcd2 = (uint_fast8_t) (track % 10);
  2148  000C42  5171               	movf	_track& (0+255),w,b	;volatile
  2149  000C44  6F72               	movwf	___awmod@dividend& (0+255),b
  2150  000C46  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  2151  000C48  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  2152  000C4A  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  2153  000C4C  0E00               	movlw	0
  2154  000C4E  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  2155  000C50  0E0A               	movlw	10
  2156  000C52  6F74               	movwf	___awmod@divisor& (0+255),b
  2157  000C54  ECBF  F007         	call	___awmod	;wreg free
  2158  000C58  0100               	movlb	0	; () banked
  2159  000C5A  5172               	movf	?___awmod& (0+255),w,b
  2160  000C5C  6F6E               	movwf	main@bcd2& (0+255),b
  2161  000C5E                     
  2162                           ; BSR set to: 0
  2163                           ;avr-main.c: 529:                     dot1 = 0;
  2164  000C5E  9A2F               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2165  000C60                     
  2166                           ; BSR set to: 0
  2167                           ;avr-main.c: 530:                     dot2 = 1;
  2168  000C60  882F               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2169                           
  2170                           ;avr-main.c: 531:                     break;
  2171  000C62  EFA0  F006         	goto	l3232
  2172  000C66                     l270:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;avr-main.c: 534:                     speed = speedDeviationPercentTenths;
  2176  000C66  C070  F06C         	movff	_speedDeviationPercentTenths,main@speed	;volatile
  2177  000C6A                     
  2178                           ; BSR set to: 0
  2179                           ;avr-main.c: 535:                     if(speed < 0)
  2180  000C6A  BF6C               	btfsc	main@speed& (0+255),7,b
  2181  000C6C  EF3C  F006         	goto	u3540
  2182  000C70  EF3A  F006         	goto	u3541
  2183  000C74                     u3541:
  2184  000C74  EF49  F006         	goto	l271
  2185  000C78                     u3540:
  2186  000C78                     
  2187                           ; BSR set to: 0
  2188                           ;avr-main.c: 536:                     {;avr-main.c: 537:                         dot1 = 
      +                          blink;
  2189  000C78  BA30               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2190  000C7A  EF41  F006         	goto	u3551
  2191  000C7E  EF44  F006         	goto	u3550
  2192  000C82                     u3551:
  2193  000C82  8A2F               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2194  000C84  EF45  F006         	goto	u3565
  2195  000C88                     u3550:
  2196  000C88  9A2F               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2197  000C8A                     u3565:
  2198  000C8A                     
  2199                           ;avr-main.c: 538:                         speed = -speed;
  2200  000C8A  0100               	movlb	0	; () banked
  2201  000C8C  6D6C               	negf	main@speed& (0+255),b
  2202                           
  2203                           ;avr-main.c: 539:                     }
  2204  000C8E  EF4A  F006         	goto	l3218
  2205  000C92                     l271:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;avr-main.c: 541:                     {;avr-main.c: 542:                         dot1 = 
      +                          1;
  2209  000C92  8A2F               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2210  000C94                     l3218:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;avr-main.c: 544:                     bcd1 = (uint_fast8_t) (speed / 10);
  2214  000C94  516C               	movf	main@speed& (0+255),w,b
  2215  000C96  6F72               	movwf	___awdiv@dividend& (0+255),b
  2216  000C98  6B73               	clrf	(___awdiv@dividend+1)& (0+255),b
  2217  000C9A  BF72               	btfsc	___awdiv@dividend& (0+255),7,b
  2218  000C9C  0773               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2219  000C9E  0E00               	movlw	0
  2220  000CA0  6F75               	movwf	(___awdiv@divisor+1)& (0+255),b
  2221  000CA2  0E0A               	movlw	10
  2222  000CA4  6F74               	movwf	___awdiv@divisor& (0+255),b
  2223  000CA6  EC5C  F007         	call	___awdiv	;wreg free
  2224  000CAA  0100               	movlb	0	; () banked
  2225  000CAC  5172               	movf	?___awdiv& (0+255),w,b
  2226  000CAE  6F6F               	movwf	main@bcd1& (0+255),b
  2227                           
  2228                           ;avr-main.c: 545:                     bcd2 = (uint_fast8_t) (speed % 10);
  2229  000CB0  516C               	movf	main@speed& (0+255),w,b
  2230  000CB2  6F72               	movwf	___awmod@dividend& (0+255),b
  2231  000CB4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  2232  000CB6  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  2233  000CB8  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  2234  000CBA  0E00               	movlw	0
  2235  000CBC  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  2236  000CBE  0E0A               	movlw	10
  2237  000CC0  6F74               	movwf	___awmod@divisor& (0+255),b
  2238  000CC2  ECBF  F007         	call	___awmod	;wreg free
  2239  000CC6  0100               	movlb	0	; () banked
  2240  000CC8  5172               	movf	?___awmod& (0+255),w,b
  2241  000CCA  6F6E               	movwf	main@bcd2& (0+255),b
  2242  000CCC                     
  2243                           ; BSR set to: 0
  2244                           ;avr-main.c: 546:                     dot2 = 0;
  2245  000CCC  982F               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2246                           
  2247                           ;avr-main.c: 547:                     break;
  2248  000CCE  EFA0  F006         	goto	l3232
  2249  000CD2                     l3222:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;avr-main.c: 550:                     bcd1 = (uint_fast8_t) (01 / 10);
  2253  000CD2  0E00               	movlw	0
  2254  000CD4  6F6F               	movwf	main@bcd1& (0+255),b
  2255                           
  2256                           ;avr-main.c: 551:                     bcd2 = (uint_fast8_t) (01 % 10);
  2257  000CD6  0E01               	movlw	1
  2258  000CD8  6F6E               	movwf	main@bcd2& (0+255),b
  2259  000CDA                     
  2260                           ; BSR set to: 0
  2261                           ;avr-main.c: 552:                     dot1 = blink;
  2262  000CDA  BA30               	btfsc	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2263  000CDC  EF72  F006         	goto	u3571
  2264  000CE0  EF75  F006         	goto	u3570
  2265  000CE4                     u3571:
  2266  000CE4  8A2F               	bsf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2267  000CE6  EF76  F006         	goto	u3585
  2268  000CEA                     u3570:
  2269  000CEA  9A2F               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2270  000CEC                     u3585:
  2271  000CEC                     
  2272                           ;avr-main.c: 553:                     dot2 = !blink;
  2273  000CEC  882F               	bsf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2274  000CEE  AA30               	btfss	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  2275  000CF0  EF7B  F006         	goto	u3595
  2276  000CF4  982F               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2277  000CF6                     u3595:
  2278                           
  2279                           ;avr-main.c: 554:                     break;
  2280  000CF6  EFA0  F006         	goto	l3232
  2281  000CFA                     l274:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;avr-main.c: 557:                     bcd2 = bcd1 = 0xFF;
  2285  000CFA  696F               	setf	main@bcd1& (0+255),b
  2286  000CFC  696E               	setf	main@bcd2& (0+255),b
  2287                           
  2288                           ;avr-main.c: 558:                     dot2 = dot1 = 0;
  2289  000CFE  9A2F               	bcf	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2290  000D00  982F               	bcf	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2291                           
  2292                           ;avr-main.c: 559:                     break;
  2293  000D02  EFA0  F006         	goto	l3232
  2294  000D06                     l3230:
  2295                           
  2296                           ; BSR set to: 0
  2297  000D06  5181               	movf	main@displayMode& (0+255),w,b
  2298  000D08  6F7A               	movwf	??_main& (0+255),b
  2299  000D0A  6B7B               	clrf	(??_main+1)& (0+255),b
  2300                           
  2301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2302                           ; Switch size 1, requested type "simple"
  2303                           ; Number of cases is 1, Range of values is 0 to 0
  2304                           ; switch strategies available:
  2305                           ; Name         Instructions Cycles
  2306                           ; simple_byte            4     3 (average)
  2307                           ;	Chosen strategy is simple_byte
  2308  000D0C  517B               	movf	(??_main+1)& (0+255),w,b
  2309  000D0E  0A00               	xorlw	0	; case 0
  2310  000D10  B4D8               	btfsc	status,2,c
  2311  000D12  EF8D  F006         	goto	l3532
  2312  000D16  EFA0  F006         	goto	l3232
  2313  000D1A                     l3532:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 4, Range of values is 0 to 3
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte           13     7 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322  000D1A  517A               	movf	??_main& (0+255),w,b
  2323  000D1C  0A00               	xorlw	0	; case 0
  2324  000D1E  B4D8               	btfsc	status,2,c
  2325  000D20  EF13  F006         	goto	l3206
  2326  000D24  0A01               	xorlw	1	; case 1
  2327  000D26  B4D8               	btfsc	status,2,c
  2328  000D28  EF33  F006         	goto	l270
  2329  000D2C  0A03               	xorlw	3	; case 2
  2330  000D2E  B4D8               	btfsc	status,2,c
  2331  000D30  EF69  F006         	goto	l3222
  2332  000D34  0A01               	xorlw	1	; case 3
  2333  000D36  B4D8               	btfsc	status,2,c
  2334  000D38  EF7D  F006         	goto	l274
  2335  000D3C  EFA0  F006         	goto	l3232
  2336  000D40                     l3232:
  2337                           
  2338                           ;avr-main.c: 563:             PORTC = (bcd1 & 0xF) | ((bcd2 << 4) & 0xF0);
  2339  000D40  C06E  F07A         	movff	main@bcd2,??_main
  2340  000D44  0100               	movlb	0	; () banked
  2341  000D46  3B7A               	swapf	??_main& (0+255),f,b
  2342  000D48  0EF0               	movlw	240
  2343  000D4A  177A               	andwf	??_main& (0+255),f,b
  2344  000D4C  0EF0               	movlw	240
  2345  000D4E  177A               	andwf	??_main& (0+255),f,b
  2346  000D50  516F               	movf	main@bcd1& (0+255),w,b
  2347  000D52  0B0F               	andlw	15
  2348  000D54  117A               	iorwf	??_main& (0+255),w,b
  2349  000D56  6E82               	movwf	130,c	;volatile
  2350                           
  2351                           ;avr-main.c: 564:             PORTBbits.RB1 = !dot1;
  2352  000D58  AA2F               	btfss	(main@dot1/(0+8))^0,main@dot1& (0+7),c
  2353  000D5A  EFB1  F006         	goto	u3601
  2354  000D5E  EFB5  F006         	goto	u3600
  2355  000D62                     u3601:
  2356  000D62  6B7A               	clrf	??_main& (0+255),b
  2357  000D64  2B7A               	incf	??_main& (0+255),f,b
  2358  000D66  EFB7  F006         	goto	u3618
  2359  000D6A                     u3600:
  2360  000D6A  0100               	movlb	0	; () banked
  2361  000D6C  6B7A               	clrf	??_main& (0+255),b
  2362  000D6E                     u3618:
  2363  000D6E  477A               	rlncf	??_main& (0+255),f,b
  2364  000D70  5081               	movf	129,w,c	;volatile
  2365  000D72  197A               	xorwf	??_main& (0+255),w,b
  2366  000D74  0BFD               	andlw	-3
  2367  000D76  197A               	xorwf	??_main& (0+255),w,b
  2368  000D78  6E81               	movwf	129,c	;volatile
  2369                           
  2370                           ;avr-main.c: 565:             PORTBbits.RB2 = !dot2;
  2371  000D7A  A82F               	btfss	(main@dot2/(0+8))^0,main@dot2& (0+7),c
  2372  000D7C  EFC2  F006         	goto	u3621
  2373  000D80  EFC6  F006         	goto	u3620
  2374  000D84                     u3621:
  2375  000D84  6B7A               	clrf	??_main& (0+255),b
  2376  000D86  2B7A               	incf	??_main& (0+255),f,b
  2377  000D88  EFC8  F006         	goto	u3638
  2378  000D8C                     u3620:
  2379  000D8C  0100               	movlb	0	; () banked
  2380  000D8E  6B7A               	clrf	??_main& (0+255),b
  2381  000D90                     u3638:
  2382  000D90  477A               	rlncf	??_main& (0+255),f,b
  2383  000D92  477A               	rlncf	??_main& (0+255),f,b
  2384  000D94  5081               	movf	129,w,c	;volatile
  2385  000D96  197A               	xorwf	??_main& (0+255),w,b
  2386  000D98  0BFB               	andlw	-5
  2387  000D9A  197A               	xorwf	??_main& (0+255),w,b
  2388  000D9C  6E81               	movwf	129,c	;volatile
  2389  000D9E  EFE7  F001         	goto	l3020
  2390  000DA2  EF3C  F001         	goto	start
  2391  000DA6                     __end_of_main:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function ___awmod *****************
  2395 ;; Defined at:
  2396 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  dividend        2    0[BANK0 ] int 
  2399 ;;  divisor         2    2[BANK0 ] int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  sign            1    5[BANK0 ] unsigned char 
  2402 ;;  counter         1    4[BANK0 ] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  2    0[BANK0 ] int 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        6 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    3
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text1
  2427  000F7E                     __ptext1:
  2428                           	callstack 0
  2429  000F7E                     ___awmod:
  2430                           	callstack 27
  2431  000F7E  0E00               	movlw	0
  2432  000F80  0100               	movlb	0	; () banked
  2433  000F82  6F77               	movwf	___awmod@sign& (0+255),b
  2434  000F84                     
  2435                           ; BSR set to: 0
  2436  000F84  BF73               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2437  000F86  EFC9  F007         	goto	u2720
  2438  000F8A  EFC7  F007         	goto	u2721
  2439  000F8E                     u2721:
  2440  000F8E  EFCF  F007         	goto	l2890
  2441  000F92                     u2720:
  2442  000F92                     
  2443                           ; BSR set to: 0
  2444  000F92  6D72               	negf	___awmod@dividend& (0+255),b
  2445  000F94  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  2446  000F96  B0D8               	btfsc	status,0,c
  2447  000F98  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  2448  000F9A                     
  2449                           ; BSR set to: 0
  2450  000F9A  0E01               	movlw	1
  2451  000F9C  6F77               	movwf	___awmod@sign& (0+255),b
  2452  000F9E                     l2890:
  2453                           
  2454                           ; BSR set to: 0
  2455  000F9E  BF75               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2456  000FA0  EFD6  F007         	goto	u2730
  2457  000FA4  EFD4  F007         	goto	u2731
  2458  000FA8                     u2731:
  2459  000FA8  EFDA  F007         	goto	l2894
  2460  000FAC                     u2730:
  2461  000FAC                     
  2462                           ; BSR set to: 0
  2463  000FAC  6D74               	negf	___awmod@divisor& (0+255),b
  2464  000FAE  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  2465  000FB0  B0D8               	btfsc	status,0,c
  2466  000FB2  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  2467  000FB4                     l2894:
  2468                           
  2469                           ; BSR set to: 0
  2470  000FB4  5174               	movf	___awmod@divisor& (0+255),w,b
  2471  000FB6  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2472  000FB8  B4D8               	btfsc	status,2,c
  2473  000FBA  EFE1  F007         	goto	u2741
  2474  000FBE  EFE3  F007         	goto	u2740
  2475  000FC2                     u2741:
  2476  000FC2  EF07  F008         	goto	l2910
  2477  000FC6                     u2740:
  2478  000FC6                     
  2479                           ; BSR set to: 0
  2480  000FC6  0E01               	movlw	1
  2481  000FC8  6F76               	movwf	___awmod@counter& (0+255),b
  2482  000FCA  EFEB  F007         	goto	l2900
  2483  000FCE                     l2898:
  2484                           
  2485                           ; BSR set to: 0
  2486  000FCE  90D8               	bcf	status,0,c
  2487  000FD0  3774               	rlcf	___awmod@divisor& (0+255),f,b
  2488  000FD2  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2489  000FD4  2B76               	incf	___awmod@counter& (0+255),f,b
  2490  000FD6                     l2900:
  2491                           
  2492                           ; BSR set to: 0
  2493  000FD6  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2494  000FD8  EFF0  F007         	goto	u2751
  2495  000FDC  EFF2  F007         	goto	u2750
  2496  000FE0                     u2751:
  2497  000FE0  EFE7  F007         	goto	l2898
  2498  000FE4                     u2750:
  2499  000FE4                     l2902:
  2500                           
  2501                           ; BSR set to: 0
  2502  000FE4  5174               	movf	___awmod@divisor& (0+255),w,b
  2503  000FE6  5D72               	subwf	___awmod@dividend& (0+255),w,b
  2504  000FE8  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  2505  000FEA  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2506  000FEC  A0D8               	btfss	status,0,c
  2507  000FEE  EFFB  F007         	goto	u2761
  2508  000FF2  EFFD  F007         	goto	u2760
  2509  000FF6                     u2761:
  2510  000FF6  EF01  F008         	goto	l2906
  2511  000FFA                     u2760:
  2512  000FFA                     
  2513                           ; BSR set to: 0
  2514  000FFA  5174               	movf	___awmod@divisor& (0+255),w,b
  2515  000FFC  5F72               	subwf	___awmod@dividend& (0+255),f,b
  2516  000FFE  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  2517  001000  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2518  001002                     l2906:
  2519                           
  2520                           ; BSR set to: 0
  2521  001002  90D8               	bcf	status,0,c
  2522  001004  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2523  001006  3374               	rrcf	___awmod@divisor& (0+255),f,b
  2524  001008                     
  2525                           ; BSR set to: 0
  2526  001008  2F76               	decfsz	___awmod@counter& (0+255),f,b
  2527  00100A  EFF2  F007         	goto	l2902
  2528  00100E                     l2910:
  2529                           
  2530                           ; BSR set to: 0
  2531  00100E  5177               	movf	___awmod@sign& (0+255),w,b
  2532  001010  B4D8               	btfsc	status,2,c
  2533  001012  EF0D  F008         	goto	u2771
  2534  001016  EF0F  F008         	goto	u2770
  2535  00101A                     u2771:
  2536  00101A  EF13  F008         	goto	l2914
  2537  00101E                     u2770:
  2538  00101E                     
  2539                           ; BSR set to: 0
  2540  00101E  6D72               	negf	___awmod@dividend& (0+255),b
  2541  001020  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  2542  001022  B0D8               	btfsc	status,0,c
  2543  001024  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  2544  001026                     l2914:
  2545                           
  2546                           ; BSR set to: 0
  2547  001026  C072  F072         	movff	___awmod@dividend,?___awmod
  2548  00102A  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  2549  00102E                     
  2550                           ; BSR set to: 0
  2551  00102E  0012               	return		;funcret
  2552  001030                     __end_of___awmod:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function ___awdiv *****************
  2556 ;; Defined at:
  2557 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  dividend        2    0[BANK0 ] int 
  2560 ;;  divisor         2    2[BANK0 ] int 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  quotient        2    6[BANK0 ] int 
  2563 ;;  sign            1    5[BANK0 ] unsigned char 
  2564 ;;  counter         1    4[BANK0 ] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    0[BANK0 ] int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        8 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:    3
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text2
  2589  000EB8                     __ptext2:
  2590                           	callstack 0
  2591  000EB8                     ___awdiv:
  2592                           	callstack 27
  2593  000EB8  0E00               	movlw	0
  2594  000EBA  0100               	movlb	0	; () banked
  2595  000EBC  6F77               	movwf	___awdiv@sign& (0+255),b
  2596  000EBE                     
  2597                           ; BSR set to: 0
  2598  000EBE  BF75               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2599  000EC0  EF66  F007         	goto	u2660
  2600  000EC4  EF64  F007         	goto	u2661
  2601  000EC8                     u2661:
  2602  000EC8  EF6C  F007         	goto	l2846
  2603  000ECC                     u2660:
  2604  000ECC                     
  2605                           ; BSR set to: 0
  2606  000ECC  6D74               	negf	___awdiv@divisor& (0+255),b
  2607  000ECE  1F75               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2608  000ED0  B0D8               	btfsc	status,0,c
  2609  000ED2  2B75               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2610  000ED4                     
  2611                           ; BSR set to: 0
  2612  000ED4  0E01               	movlw	1
  2613  000ED6  6F77               	movwf	___awdiv@sign& (0+255),b
  2614  000ED8                     l2846:
  2615                           
  2616                           ; BSR set to: 0
  2617  000ED8  BF73               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2618  000EDA  EF73  F007         	goto	u2670
  2619  000EDE  EF71  F007         	goto	u2671
  2620  000EE2                     u2671:
  2621  000EE2  EF79  F007         	goto	l2852
  2622  000EE6                     u2670:
  2623  000EE6                     
  2624                           ; BSR set to: 0
  2625  000EE6  6D72               	negf	___awdiv@dividend& (0+255),b
  2626  000EE8  1F73               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2627  000EEA  B0D8               	btfsc	status,0,c
  2628  000EEC  2B73               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2629  000EEE                     
  2630                           ; BSR set to: 0
  2631  000EEE  0E01               	movlw	1
  2632  000EF0  1B77               	xorwf	___awdiv@sign& (0+255),f,b
  2633  000EF2                     l2852:
  2634                           
  2635                           ; BSR set to: 0
  2636  000EF2  0E00               	movlw	0
  2637  000EF4  6F79               	movwf	(___awdiv@quotient+1)& (0+255),b
  2638  000EF6  0E00               	movlw	0
  2639  000EF8  6F78               	movwf	___awdiv@quotient& (0+255),b
  2640  000EFA                     
  2641                           ; BSR set to: 0
  2642  000EFA  5174               	movf	___awdiv@divisor& (0+255),w,b
  2643  000EFC  1175               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2644  000EFE  B4D8               	btfsc	status,2,c
  2645  000F00  EF84  F007         	goto	u2681
  2646  000F04  EF86  F007         	goto	u2680
  2647  000F08                     u2681:
  2648  000F08  EFAE  F007         	goto	l2874
  2649  000F0C                     u2680:
  2650  000F0C                     
  2651                           ; BSR set to: 0
  2652  000F0C  0E01               	movlw	1
  2653  000F0E  6F76               	movwf	___awdiv@counter& (0+255),b
  2654  000F10  EF8E  F007         	goto	l2860
  2655  000F14                     l2858:
  2656                           
  2657                           ; BSR set to: 0
  2658  000F14  90D8               	bcf	status,0,c
  2659  000F16  3774               	rlcf	___awdiv@divisor& (0+255),f,b
  2660  000F18  3775               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2661  000F1A  2B76               	incf	___awdiv@counter& (0+255),f,b
  2662  000F1C                     l2860:
  2663                           
  2664                           ; BSR set to: 0
  2665  000F1C  AF75               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2666  000F1E  EF93  F007         	goto	u2691
  2667  000F22  EF95  F007         	goto	u2690
  2668  000F26                     u2691:
  2669  000F26  EF8A  F007         	goto	l2858
  2670  000F2A                     u2690:
  2671  000F2A                     l2862:
  2672                           
  2673                           ; BSR set to: 0
  2674  000F2A  90D8               	bcf	status,0,c
  2675  000F2C  3778               	rlcf	___awdiv@quotient& (0+255),f,b
  2676  000F2E  3779               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2677  000F30                     
  2678                           ; BSR set to: 0
  2679  000F30  5174               	movf	___awdiv@divisor& (0+255),w,b
  2680  000F32  5D72               	subwf	___awdiv@dividend& (0+255),w,b
  2681  000F34  5175               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2682  000F36  5973               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2683  000F38  A0D8               	btfss	status,0,c
  2684  000F3A  EFA1  F007         	goto	u2701
  2685  000F3E  EFA3  F007         	goto	u2700
  2686  000F42                     u2701:
  2687  000F42  EFA8  F007         	goto	l2870
  2688  000F46                     u2700:
  2689  000F46                     
  2690                           ; BSR set to: 0
  2691  000F46  5174               	movf	___awdiv@divisor& (0+255),w,b
  2692  000F48  5F72               	subwf	___awdiv@dividend& (0+255),f,b
  2693  000F4A  5175               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2694  000F4C  5B73               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2695  000F4E                     
  2696                           ; BSR set to: 0
  2697  000F4E  8178               	bsf	___awdiv@quotient& (0+255),0,b
  2698  000F50                     l2870:
  2699                           
  2700                           ; BSR set to: 0
  2701  000F50  90D8               	bcf	status,0,c
  2702  000F52  3375               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2703  000F54  3374               	rrcf	___awdiv@divisor& (0+255),f,b
  2704  000F56                     
  2705                           ; BSR set to: 0
  2706  000F56  2F76               	decfsz	___awdiv@counter& (0+255),f,b
  2707  000F58  EF95  F007         	goto	l2862
  2708  000F5C                     l2874:
  2709                           
  2710                           ; BSR set to: 0
  2711  000F5C  5177               	movf	___awdiv@sign& (0+255),w,b
  2712  000F5E  B4D8               	btfsc	status,2,c
  2713  000F60  EFB4  F007         	goto	u2711
  2714  000F64  EFB6  F007         	goto	u2710
  2715  000F68                     u2711:
  2716  000F68  EFBA  F007         	goto	l2878
  2717  000F6C                     u2710:
  2718  000F6C                     
  2719                           ; BSR set to: 0
  2720  000F6C  6D78               	negf	___awdiv@quotient& (0+255),b
  2721  000F6E  1F79               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2722  000F70  B0D8               	btfsc	status,0,c
  2723  000F72  2B79               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2724  000F74                     l2878:
  2725                           
  2726                           ; BSR set to: 0
  2727  000F74  C078  F072         	movff	___awdiv@quotient,?___awdiv
  2728  000F78  C079  F073         	movff	___awdiv@quotient+1,?___awdiv+1
  2729  000F7C                     
  2730                           ; BSR set to: 0
  2731  000F7C  0012               	return		;funcret
  2732  000F7E                     __end_of___awdiv:
  2733                           	callstack 0
  2734                           
  2735 ;; *************** function _EepromWrite *****************
  2736 ;; Defined at:
  2737 ;;		line 706 in file "avr-main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  address         4    0[BANK0 ] unsigned long 
  2740 ;;  data            1    4[BANK0 ] unsigned char 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        5 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    3
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text3
  2767  00113E                     __ptext3:
  2768                           	callstack 0
  2769  00113E                     _EepromWrite:
  2770                           	callstack 27
  2771  00113E                     
  2772                           ;avr-main.c: 706: void EepromWrite(uint_fast16_t address, uint_fast8_t data);avr-main.c:
      +                           707: {;avr-main.c: 708:     EEADR = address & 0xFF;
  2773  00113E  C072  FFA9         	movff	EepromWrite@address,4009	;volatile
  2774  001142                     
  2775                           ;avr-main.c: 709:     EEADRH = (address << 8) & 0xFF;
  2776  001142  0E00               	movlw	0
  2777  001144  6EAA               	movwf	170,c	;volatile
  2778  001146                     
  2779                           ;avr-main.c: 711:     EEDATA = data;
  2780  001146  C076  FFA8         	movff	EepromWrite@data,4008	;volatile
  2781  00114A                     
  2782                           ;avr-main.c: 713:     EECON1bits.EEPGD = 0;
  2783  00114A  9EA6               	bcf	166,7,c	;volsfr
  2784  00114C                     
  2785                           ;avr-main.c: 714:     EECON1bits.CFGS = 0;
  2786  00114C  9CA6               	bcf	166,6,c	;volsfr
  2787  00114E                     
  2788                           ;avr-main.c: 715:     EECON1bits.WREN = 1;
  2789  00114E  84A6               	bsf	166,2,c	;volsfr
  2790  001150                     
  2791                           ;avr-main.c: 716:     INTCONbits.GIE = 0;
  2792  001150  9EF2               	bcf	242,7,c	;volatile
  2793                           
  2794                           ;avr-main.c: 718:     EECON2 = 0x55;
  2795  001152  0E55               	movlw	85
  2796  001154  6EA7               	movwf	167,c	;volsfr
  2797                           
  2798                           ;avr-main.c: 719:     EECON2 = 0xAA;
  2799  001156  0EAA               	movlw	170
  2800  001158  6EA7               	movwf	167,c	;volsfr
  2801  00115A                     
  2802                           ;avr-main.c: 721:     EECON1bits.WR = 1;
  2803  00115A  82A6               	bsf	166,1,c	;volsfr
  2804  00115C                     
  2805                           ;avr-main.c: 723:     INTCONbits.GIE = 1;
  2806  00115C  8EF2               	bsf	242,7,c	;volatile
  2807  00115E                     l329:
  2808  00115E  B2A6               	btfsc	166,1,c	;volsfr
  2809  001160  EFB4  F008         	goto	u2651
  2810  001164  EFB6  F008         	goto	u2650
  2811  001168                     u2651:
  2812  001168  EFAF  F008         	goto	l329
  2813  00116C                     u2650:
  2814  00116C                     
  2815                           ;avr-main.c: 726:     EECON1bits.WREN = 0;
  2816  00116C  94A6               	bcf	166,2,c	;volsfr
  2817  00116E  0012               	return		;funcret
  2818  001170                     __end_of_EepromWrite:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _EepromRead *****************
  2822 ;; Defined at:
  2823 ;;		line 694 in file "avr-main.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  address         4    0[BANK0 ] unsigned long 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;Total ram usage:        4 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    3
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text4
  2852  00119A                     __ptext4:
  2853                           	callstack 0
  2854  00119A                     _EepromRead:
  2855                           	callstack 27
  2856  00119A                     
  2857                           ;avr-main.c: 694: uint_fast8_t EepromRead(uint_fast16_t address);avr-main.c: 695: {;avr-
      +                          main.c: 696:     EEADR = address & 0xFF;
  2858  00119A  C072  FFA9         	movff	EepromRead@address,4009	;volatile
  2859  00119E                     
  2860                           ;avr-main.c: 697:     EEADRH = (address << 8) & 0xFF;
  2861  00119E  0E00               	movlw	0
  2862  0011A0  6EAA               	movwf	170,c	;volatile
  2863  0011A2                     
  2864                           ;avr-main.c: 699:     EECON1bits.EEPGD=0;
  2865  0011A2  9EA6               	bcf	166,7,c	;volsfr
  2866  0011A4                     
  2867                           ;avr-main.c: 700:     EECON1bits.CFGS=0;
  2868  0011A4  9CA6               	bcf	166,6,c	;volsfr
  2869  0011A6                     
  2870                           ;avr-main.c: 701:     EECON1bits.RD=1;
  2871  0011A6  80A6               	bsf	166,0,c	;volsfr
  2872                           
  2873                           ;avr-main.c: 703:     return EEDATA;
  2874  0011A8  50A8               	movf	168,w,c	;volatile
  2875  0011AA  0012               	return		;funcret
  2876  0011AC                     __end_of_EepromRead:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _isrLowPrio *****************
  2880 ;; Defined at:
  2881 ;;		line 570 in file "avr-main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  percent         4   41[COMRAM] unsigned long 
  2886 ;;  deviation       4   37[COMRAM] unsigned long 
  2887 ;;  sign            1   45[COMRAM] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:       20 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    2
  2904 ;; This function calls:
  2905 ;;		___lldiv
  2906 ;;		___lmul
  2907 ;; This function is called by:
  2908 ;;		Interrupt level 1
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	intcodelo
  2913  000018                     __pintcodelo:
  2914                           	callstack 0
  2915  000018                     _isrLowPrio:
  2916                           	callstack 27
  2917                           
  2918                           ;incstack = 0
  2919  000018  803A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2920  00001A  CFD8 F01F          	movff	status,??_isrLowPrio+4
  2921  00001E  CFE8 F020          	movff	wreg,??_isrLowPrio+5
  2922  000022  CFE0 F021          	movff	bsr,??_isrLowPrio+6
  2923  000026                     
  2924                           ;avr-main.c: 573:     if (PIR1bits.TMR2IF)
  2925  000026  A29E               	btfss	158,1,c	;volatile
  2926  000028  EF18  F000         	goto	i1u237_21
  2927  00002C  EF1A  F000         	goto	i1u237_20
  2928  000030                     i1u237_21:
  2929  000030  EF30  F000         	goto	i1l2494
  2930  000034                     i1u237_20:
  2931  000034                     
  2932                           ;avr-main.c: 574:     {;avr-main.c: 575:         PIR1bits.TMR2IF = 0;
  2933  000034  929E               	bcf	158,1,c	;volatile
  2934  000036                     
  2935                           ;avr-main.c: 577:         if(counter6000Hz < ((0xffffffffu) - 1))
  2936  000036  0EFE               	movlw	254
  2937  000038  5C36               	subwf	_counter6000Hz^0,w,c	;volatile
  2938  00003A  0EFF               	movlw	255
  2939  00003C  5837               	subwfb	(_counter6000Hz+1)^0,w,c	;volatile
  2940  00003E  0EFF               	movlw	255
  2941  000040  5838               	subwfb	(_counter6000Hz+2)^0,w,c	;volatile
  2942  000042  0EFF               	movlw	255
  2943  000044  5839               	subwfb	(_counter6000Hz+3)^0,w,c	;volatile
  2944  000046  B0D8               	btfsc	status,0,c
  2945  000048  EF28  F000         	goto	i1u238_21
  2946  00004C  EF2A  F000         	goto	i1u238_20
  2947  000050                     i1u238_21:
  2948  000050  EF30  F000         	goto	i1l2494
  2949  000054                     i1u238_20:
  2950  000054                     
  2951                           ;avr-main.c: 578:             counter6000Hz++;
  2952  000054  0E01               	movlw	1
  2953  000056  2636               	addwf	_counter6000Hz^0,f,c	;volatile
  2954  000058  0E00               	movlw	0
  2955  00005A  2237               	addwfc	(_counter6000Hz+1)^0,f,c	;volatile
  2956  00005C  2238               	addwfc	(_counter6000Hz+2)^0,f,c	;volatile
  2957  00005E  2239               	addwfc	(_counter6000Hz+3)^0,f,c	;volatile
  2958  000060                     i1l2494:
  2959                           
  2960                           ;avr-main.c: 582:     if (PIR5bits.TMR4IF)
  2961  000060  A07E               	btfss	126,0,c	;volatile
  2962  000062  EF35  F000         	goto	i1u239_21
  2963  000066  EF37  F000         	goto	i1u239_20
  2964  00006A                     i1u239_21:
  2965  00006A  EF6F  F000         	goto	i1l2510
  2966  00006E                     i1u239_20:
  2967  00006E                     
  2968                           ;avr-main.c: 583:     {;avr-main.c: 584:         PIR5bits.TMR4IF = 0;
  2969  00006E  907E               	bcf	126,0,c	;volatile
  2970  000070                     
  2971                           ;avr-main.c: 586:         static uint_fast8_t clockDivider;;avr-main.c: 587:         sta
      +                          tic uint_fast16_t counter500;;avr-main.c: 589:         if(++clockDivider >= 4)
  2972  000070  2A35               	incf	isrLowPrio@clockDivider^0,f,c
  2973  000072  0E03               	movlw	3
  2974  000074  6435               	cpfsgt	isrLowPrio@clockDivider^0,c
  2975  000076  EF3F  F000         	goto	i1u240_21
  2976  00007A  EF41  F000         	goto	i1u240_20
  2977  00007E                     i1u240_21:
  2978  00007E  EF6F  F000         	goto	i1l2510
  2979  000082                     i1u240_20:
  2980  000082                     
  2981                           ;avr-main.c: 590:         {;avr-main.c: 591:             clockDivider = 0;
  2982  000082  0E00               	movlw	0
  2983  000084  6E35               	movwf	isrLowPrio@clockDivider^0,c
  2984  000086                     
  2985                           ;avr-main.c: 593:             counter1000Hz++;
  2986  000086  0E01               	movlw	1
  2987  000088  0100               	movlb	0	; () banked
  2988  00008A  2768               	addwf	_counter1000Hz& (0+255),f,b	;volatile
  2989  00008C  0E00               	movlw	0
  2990  00008E  2369               	addwfc	(_counter1000Hz+1)& (0+255),f,b	;volatile
  2991  000090  236A               	addwfc	(_counter1000Hz+2)& (0+255),f,b	;volatile
  2992  000092  236B               	addwfc	(_counter1000Hz+3)& (0+255),f,b	;volatile
  2993  000094                     
  2994                           ; BSR set to: 0
  2995                           ;avr-main.c: 595:             if(++counter500 >= 500)
  2996  000094  0E01               	movlw	1
  2997  000096  2631               	addwf	isrLowPrio@counter500^0,f,c
  2998  000098  0E00               	movlw	0
  2999  00009A  2232               	addwfc	(isrLowPrio@counter500+1)^0,f,c
  3000  00009C  2233               	addwfc	(isrLowPrio@counter500+2)^0,f,c
  3001  00009E  2234               	addwfc	(isrLowPrio@counter500+3)^0,f,c
  3002  0000A0  5034               	movf	(isrLowPrio@counter500+3)^0,w,c
  3003  0000A2  1033               	iorwf	(isrLowPrio@counter500+2)^0,w,c
  3004  0000A4  E10B               	bnz	i1u241_20
  3005  0000A6  0EF4               	movlw	244
  3006  0000A8  5C31               	subwf	isrLowPrio@counter500^0,w,c
  3007  0000AA  0E01               	movlw	1
  3008  0000AC  5832               	subwfb	(isrLowPrio@counter500+1)^0,w,c
  3009  0000AE  A0D8               	btfss	status,0,c
  3010  0000B0  EF5C  F000         	goto	i1u241_21
  3011  0000B4  EF5E  F000         	goto	i1u241_20
  3012  0000B8                     i1u241_21:
  3013  0000B8  EF6F  F000         	goto	i1l2510
  3014  0000BC                     i1u241_20:
  3015  0000BC                     
  3016                           ; BSR set to: 0
  3017                           ;avr-main.c: 596:             {;avr-main.c: 597:                 counter500 = 0;
  3018  0000BC  0E00               	movlw	0
  3019  0000BE  6E31               	movwf	isrLowPrio@counter500^0,c
  3020  0000C0  0E00               	movlw	0
  3021  0000C2  6E32               	movwf	(isrLowPrio@counter500+1)^0,c
  3022  0000C4  0E00               	movlw	0
  3023  0000C6  6E33               	movwf	(isrLowPrio@counter500+2)^0,c
  3024  0000C8  0E00               	movlw	0
  3025  0000CA  6E34               	movwf	(isrLowPrio@counter500+3)^0,c
  3026  0000CC                     
  3027                           ; BSR set to: 0
  3028                           ;avr-main.c: 598:                 blink = !blink;
  3029  0000CC  AA30               	btfss	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3030  0000CE  EF6B  F000         	goto	i1u242_21
  3031  0000D2  EF6E  F000         	goto	i1u242_20
  3032  0000D6                     i1u242_21:
  3033  0000D6  8A30               	bsf	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3034  0000D8  EF6F  F000         	goto	i1u243_25
  3035  0000DC                     i1u242_20:
  3036  0000DC  9A30               	bcf	(_blink/(0+8))^0,_blink& (0+7),c	;volatile
  3037  0000DE                     i1u243_25:
  3038  0000DE                     i1l2510:
  3039                           
  3040                           ;avr-main.c: 604:     if (PIR4bits.CCP3IF)
  3041  0000DE  A07B               	btfss	123,0,c	;volatile
  3042  0000E0  EF74  F000         	goto	i1u244_21
  3043  0000E4  EF76  F000         	goto	i1u244_20
  3044  0000E8                     i1u244_21:
  3045  0000E8  EF34  F001         	goto	i1l305
  3046  0000EC                     i1u244_20:
  3047  0000EC                     
  3048                           ;avr-main.c: 605:     {;avr-main.c: 606:         PIR4bits.CCP3IF = 0;
  3049  0000EC  907B               	bcf	123,0,c	;volatile
  3050                           
  3051                           ;avr-main.c: 608:         if (!PORTBbits.RB0 && !PORTBbits.RB5)
  3052  0000EE  B081               	btfsc	129,0,c	;volatile
  3053  0000F0  EF7C  F000         	goto	i1u245_21
  3054  0000F4  EF7E  F000         	goto	i1u245_20
  3055  0000F8                     i1u245_21:
  3056  0000F8  EF34  F001         	goto	i1l305
  3057  0000FC                     i1u245_20:
  3058  0000FC  BA81               	btfsc	129,5,c	;volatile
  3059  0000FE  EF83  F000         	goto	i1u246_21
  3060  000102  EF85  F000         	goto	i1u246_20
  3061  000106                     i1u246_21:
  3062  000106  EF34  F001         	goto	i1l305
  3063  00010A                     i1u246_20:
  3064  00010A                     
  3065                           ;avr-main.c: 609:         {;avr-main.c: 610:             TMR2 = 0;
  3066  00010A  0E00               	movlw	0
  3067  00010C  6EBC               	movwf	188,c	;volatile
  3068  00010E                     
  3069                           ;avr-main.c: 612:             char sign = 1004 > counter6000Hz;
  3070  00010E  5039               	movf	(_counter6000Hz+3)^0,w,c	;volatile
  3071  000110  1038               	iorwf	(_counter6000Hz+2)^0,w,c	;volatile
  3072  000112  E10C               	bnz	i1u247_20
  3073  000114  0EEC               	movlw	236
  3074  000116  5C36               	subwf	_counter6000Hz^0,w,c	;volatile
  3075  000118  0E03               	movlw	3
  3076  00011A  5837               	subwfb	(_counter6000Hz+1)^0,w,c	;volatile
  3077  00011C  A0D8               	btfss	status,0,c
  3078  00011E  EF93  F000         	goto	i1u247_21
  3079  000122  EF96  F000         	goto	i1u247_20
  3080  000126                     i1u247_21:
  3081  000126  0E01               	movlw	1
  3082  000128  EF97  F000         	goto	i1u248_20
  3083  00012C                     i1u247_20:
  3084  00012C  0E00               	movlw	0
  3085  00012E                     i1u248_20:
  3086  00012E  6E2E               	movwf	isrLowPrio@sign^0,c
  3087  000130                     
  3088                           ;avr-main.c: 613:             uint_fast16_t deviation = sign ?
  3089  000130  502E               	movf	isrLowPrio@sign^0,w,c
  3090  000132  A4D8               	btfss	status,2,c
  3091  000134  EF9E  F000         	goto	i1u249_21
  3092  000138  EFA0  F000         	goto	i1u249_20
  3093  00013C                     i1u249_21:
  3094  00013C  EFAE  F000         	goto	i1l2524
  3095  000140                     i1u249_20:
  3096  000140  0E14               	movlw	20
  3097  000142  2436               	addwf	_counter6000Hz^0,w,c	;volatile
  3098  000144  6E26               	movwf	isrLowPrio@deviation^0,c
  3099  000146  0EFC               	movlw	252
  3100  000148  2037               	addwfc	(_counter6000Hz+1)^0,w,c	;volatile
  3101  00014A  6E27               	movwf	(isrLowPrio@deviation+1)^0,c
  3102  00014C  0EFF               	movlw	255
  3103  00014E  2038               	addwfc	(_counter6000Hz+2)^0,w,c	;volatile
  3104  000150  6E28               	movwf	(isrLowPrio@deviation+2)^0,c
  3105  000152  0EFF               	movlw	255
  3106  000154  2039               	addwfc	(_counter6000Hz+3)^0,w,c	;volatile
  3107  000156  6E29               	movwf	(isrLowPrio@deviation+3)^0,c
  3108  000158  EFBA  F000         	goto	i1l296
  3109  00015C                     i1l2524:
  3110  00015C  5036               	movf	_counter6000Hz^0,w,c	;volatile
  3111  00015E  08EC               	sublw	236
  3112  000160  6E26               	movwf	isrLowPrio@deviation^0,c
  3113  000162  0E03               	movlw	3
  3114  000164  5437               	subfwb	(_counter6000Hz+1)^0,w,c	;volatile
  3115  000166  6E27               	movwf	(isrLowPrio@deviation+1)^0,c
  3116  000168  0E00               	movlw	0
  3117  00016A  5438               	subfwb	(_counter6000Hz+2)^0,w,c	;volatile
  3118  00016C  6E28               	movwf	(isrLowPrio@deviation+2)^0,c
  3119  00016E  0E00               	movlw	0
  3120  000170  5439               	subfwb	(_counter6000Hz+3)^0,w,c	;volatile
  3121  000172  6E29               	movwf	(isrLowPrio@deviation+3)^0,c
  3122  000174                     i1l296:
  3123                           
  3124                           ;avr-main.c: 616:             uint_fast16_t percent = deviation >= 99 ?
  3125  000174  5029               	movf	(isrLowPrio@deviation+3)^0,w,c
  3126  000176  1028               	iorwf	(isrLowPrio@deviation+2)^0,w,c
  3127  000178  1027               	iorwf	(isrLowPrio@deviation+1)^0,w,c
  3128  00017A  E107               	bnz	i1u250_21
  3129  00017C  0E63               	movlw	99
  3130  00017E  5C26               	subwf	isrLowPrio@deviation^0,w,c
  3131  000180  B0D8               	btfsc	status,0,c
  3132  000182  EFC5  F000         	goto	i1u250_21
  3133  000186  EFC7  F000         	goto	i1u250_20
  3134  00018A                     i1u250_21:
  3135  00018A  EFF5  F000         	goto	i1l2528
  3136  00018E                     i1u250_20:
  3137  00018E  C026  F002         	movff	isrLowPrio@deviation,___lmul@multiplier
  3138  000192  C027  F003         	movff	isrLowPrio@deviation+1,___lmul@multiplier+1
  3139  000196  C028  F004         	movff	isrLowPrio@deviation+2,___lmul@multiplier+2
  3140  00019A  C029  F005         	movff	isrLowPrio@deviation+3,___lmul@multiplier+3
  3141  00019E  0E0A               	movlw	10
  3142  0001A0  6E06               	movwf	___lmul@multiplicand^0,c
  3143  0001A2  0E00               	movlw	0
  3144  0001A4  6E07               	movwf	(___lmul@multiplicand+1)^0,c
  3145  0001A6  0E00               	movlw	0
  3146  0001A8  6E08               	movwf	(___lmul@multiplicand+2)^0,c
  3147  0001AA  0E00               	movlw	0
  3148  0001AC  6E09               	movwf	(___lmul@multiplicand+3)^0,c
  3149  0001AE  EC6A  F008         	call	___lmul	;wreg free
  3150  0001B2  C002  F00E         	movff	?___lmul,___lldiv@dividend
  3151  0001B6  C003  F00F         	movff	?___lmul+1,___lldiv@dividend+1
  3152  0001BA  C004  F010         	movff	?___lmul+2,___lldiv@dividend+2
  3153  0001BE  C005  F011         	movff	?___lmul+3,___lldiv@dividend+3
  3154  0001C2  0E0A               	movlw	10
  3155  0001C4  6E12               	movwf	___lldiv@divisor^0,c
  3156  0001C6  0E00               	movlw	0
  3157  0001C8  6E13               	movwf	(___lldiv@divisor+1)^0,c
  3158  0001CA  0E00               	movlw	0
  3159  0001CC  6E14               	movwf	(___lldiv@divisor+2)^0,c
  3160  0001CE  0E00               	movlw	0
  3161  0001D0  6E15               	movwf	(___lldiv@divisor+3)^0,c
  3162  0001D2  EC18  F008         	call	___lldiv	;wreg free
  3163  0001D6  C00E  F02A         	movff	?___lldiv,isrLowPrio@percent
  3164  0001DA  C00F  F02B         	movff	?___lldiv+1,isrLowPrio@percent+1
  3165  0001DE  C010  F02C         	movff	?___lldiv+2,isrLowPrio@percent+2
  3166  0001E2  C011  F02D         	movff	?___lldiv+3,isrLowPrio@percent+3
  3167  0001E6  EFFD  F000         	goto	i1l300
  3168  0001EA                     i1l2528:
  3169  0001EA  0E63               	movlw	99
  3170  0001EC  6E2A               	movwf	isrLowPrio@percent^0,c
  3171  0001EE  0E00               	movlw	0
  3172  0001F0  6E2B               	movwf	(isrLowPrio@percent+1)^0,c
  3173  0001F2  0E00               	movlw	0
  3174  0001F4  6E2C               	movwf	(isrLowPrio@percent+2)^0,c
  3175  0001F6  0E00               	movlw	0
  3176  0001F8  6E2D               	movwf	(isrLowPrio@percent+3)^0,c
  3177  0001FA                     i1l300:
  3178                           
  3179                           ;avr-main.c: 620:             speedDeviationPercentTenths = sign ? (int_fast16_t)percent
      +                           : -((int_fast16_t)percent);
  3180  0001FA  502E               	movf	isrLowPrio@sign^0,w,c
  3181  0001FC  A4D8               	btfss	status,2,c
  3182  0001FE  EF03  F001         	goto	i1u251_21
  3183  000202  EF05  F001         	goto	i1u251_20
  3184  000206                     i1u251_21:
  3185  000206  EF20  F001         	goto	i1l302
  3186  00020A                     i1u251_20:
  3187  00020A  C02A  F01B         	movff	isrLowPrio@percent,??_isrLowPrio
  3188  00020E  C02B  F01C         	movff	isrLowPrio@percent+1,??_isrLowPrio+1
  3189  000212  C02C  F01D         	movff	isrLowPrio@percent+2,??_isrLowPrio+2
  3190  000216  C02D  F01E         	movff	isrLowPrio@percent+3,??_isrLowPrio+3
  3191  00021A  1E1B               	comf	??_isrLowPrio^0,f,c
  3192  00021C  1E1C               	comf	(??_isrLowPrio+1)^0,f,c
  3193  00021E  1E1D               	comf	(??_isrLowPrio+2)^0,f,c
  3194  000220  1E1E               	comf	(??_isrLowPrio+3)^0,f,c
  3195  000222  2A1B               	incf	??_isrLowPrio^0,f,c
  3196  000224  0E00               	movlw	0
  3197  000226  221C               	addwfc	(??_isrLowPrio+1)^0,f,c
  3198  000228  221D               	addwfc	(??_isrLowPrio+2)^0,f,c
  3199  00022A  221E               	addwfc	(??_isrLowPrio+3)^0,f,c
  3200  00022C  C01B  F022         	movff	??_isrLowPrio,_isrLowPrio$1006
  3201  000230  C01C  F023         	movff	??_isrLowPrio+1,_isrLowPrio$1006+1
  3202  000234  C01D  F024         	movff	??_isrLowPrio+2,_isrLowPrio$1006+2
  3203  000238  C01E  F025         	movff	??_isrLowPrio+3,_isrLowPrio$1006+3
  3204  00023C  EF28  F001         	goto	i1l304
  3205  000240                     i1l302:
  3206  000240  C02A  F022         	movff	isrLowPrio@percent,_isrLowPrio$1006
  3207  000244  C02B  F023         	movff	isrLowPrio@percent+1,_isrLowPrio$1006+1
  3208  000248  C02C  F024         	movff	isrLowPrio@percent+2,_isrLowPrio$1006+2
  3209  00024C  C02D  F025         	movff	isrLowPrio@percent+3,_isrLowPrio$1006+3
  3210  000250                     i1l304:
  3211  000250  C022  F070         	movff	_isrLowPrio$1006,_speedDeviationPercentTenths	;volatile
  3212  000254                     
  3213                           ;avr-main.c: 622:             counter6000Hz = 0;
  3214  000254  0E00               	movlw	0
  3215  000256  6E36               	movwf	_counter6000Hz^0,c	;volatile
  3216  000258  0E00               	movlw	0
  3217  00025A  6E37               	movwf	(_counter6000Hz+1)^0,c	;volatile
  3218  00025C  0E00               	movlw	0
  3219  00025E  6E38               	movwf	(_counter6000Hz+2)^0,c	;volatile
  3220  000260  0E00               	movlw	0
  3221  000262  6E39               	movwf	(_counter6000Hz+3)^0,c	;volatile
  3222                           
  3223                           ;avr-main.c: 623:             TMR2 = 0;
  3224  000264  0E00               	movlw	0
  3225  000266  6EBC               	movwf	188,c	;volatile
  3226  000268                     i1l305:
  3227  000268  C021  FFE0         	movff	??_isrLowPrio+6,bsr
  3228  00026C  C020  FFE8         	movff	??_isrLowPrio+5,wreg
  3229  000270  C01F  FFD8         	movff	??_isrLowPrio+4,status
  3230  000274  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3231  000276  0010               	retfie	
  3232  000278                     __end_of_isrLowPrio:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function ___lmul *****************
  3236 ;; Defined at:
  3237 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  multiplier      4    1[COMRAM] unsigned long 
  3240 ;;  multiplicand    4    5[COMRAM] unsigned long 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  product         4    9[COMRAM] unsigned long 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  4    1[COMRAM] unsigned long 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3252 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3255 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;Total ram usage:       12 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_isrLowPrio
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text6
  3267  0010D4                     __ptext6:
  3268                           	callstack 0
  3269  0010D4                     ___lmul:
  3270                           	callstack 27
  3271  0010D4  0E00               	movlw	0
  3272  0010D6  6E0A               	movwf	___lmul@product^0,c
  3273  0010D8  0E00               	movlw	0
  3274  0010DA  6E0B               	movwf	(___lmul@product+1)^0,c
  3275  0010DC  0E00               	movlw	0
  3276  0010DE  6E0C               	movwf	(___lmul@product+2)^0,c
  3277  0010E0  0E00               	movlw	0
  3278  0010E2  6E0D               	movwf	(___lmul@product+3)^0,c
  3279  0010E4                     i1l2012:
  3280  0010E4  A002               	btfss	___lmul@multiplier^0,0,c
  3281  0010E6  EF77  F008         	goto	i1u134_21
  3282  0010EA  EF79  F008         	goto	i1u134_20
  3283  0010EE                     i1u134_21:
  3284  0010EE  EF81  F008         	goto	i1l2016
  3285  0010F2                     i1u134_20:
  3286  0010F2  5006               	movf	___lmul@multiplicand^0,w,c
  3287  0010F4  260A               	addwf	___lmul@product^0,f,c
  3288  0010F6  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  3289  0010F8  220B               	addwfc	(___lmul@product+1)^0,f,c
  3290  0010FA  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  3291  0010FC  220C               	addwfc	(___lmul@product+2)^0,f,c
  3292  0010FE  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  3293  001100  220D               	addwfc	(___lmul@product+3)^0,f,c
  3294  001102                     i1l2016:
  3295  001102  90D8               	bcf	status,0,c
  3296  001104  3606               	rlcf	___lmul@multiplicand^0,f,c
  3297  001106  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3298  001108  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3299  00110A  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3300  00110C  90D8               	bcf	status,0,c
  3301  00110E  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  3302  001110  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  3303  001112  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  3304  001114  3202               	rrcf	___lmul@multiplier^0,f,c
  3305  001116  5002               	movf	___lmul@multiplier^0,w,c
  3306  001118  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  3307  00111A  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  3308  00111C  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  3309  00111E  A4D8               	btfss	status,2,c
  3310  001120  EF94  F008         	goto	i1u135_21
  3311  001124  EF96  F008         	goto	i1u135_20
  3312  001128                     i1u135_21:
  3313  001128  EF72  F008         	goto	i1l2012
  3314  00112C                     i1u135_20:
  3315  00112C  C00A  F002         	movff	___lmul@product,?___lmul
  3316  001130  C00B  F003         	movff	___lmul@product+1,?___lmul+1
  3317  001134  C00C  F004         	movff	___lmul@product+2,?___lmul+2
  3318  001138  C00D  F005         	movff	___lmul@product+3,?___lmul+3
  3319  00113C  0012               	return		;funcret
  3320  00113E                     __end_of___lmul:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function ___lldiv *****************
  3324 ;; Defined at:
  3325 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  dividend        4   13[COMRAM] unsigned long 
  3328 ;;  divisor         4   17[COMRAM] unsigned long 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  quotient        4   21[COMRAM] unsigned long 
  3331 ;;  counter         1   25[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  4   13[COMRAM] unsigned long 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;Total ram usage:       13 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_isrLowPrio
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text7
  3356  001030                     __ptext7:
  3357                           	callstack 0
  3358  001030                     ___lldiv:
  3359                           	callstack 27
  3360  001030  0E00               	movlw	0
  3361  001032  6E16               	movwf	___lldiv@quotient^0,c
  3362  001034  0E00               	movlw	0
  3363  001036  6E17               	movwf	(___lldiv@quotient+1)^0,c
  3364  001038  0E00               	movlw	0
  3365  00103A  6E18               	movwf	(___lldiv@quotient+2)^0,c
  3366  00103C  0E00               	movlw	0
  3367  00103E  6E19               	movwf	(___lldiv@quotient+3)^0,c
  3368  001040  5012               	movf	___lldiv@divisor^0,w,c
  3369  001042  1013               	iorwf	(___lldiv@divisor+1)^0,w,c
  3370  001044  1014               	iorwf	(___lldiv@divisor+2)^0,w,c
  3371  001046  1015               	iorwf	(___lldiv@divisor+3)^0,w,c
  3372  001048  B4D8               	btfsc	status,2,c
  3373  00104A  EF29  F008         	goto	i1u136_21
  3374  00104E  EF2B  F008         	goto	i1u136_20
  3375  001052                     i1u136_21:
  3376  001052  EF61  F008         	goto	i1l362
  3377  001056                     i1u136_20:
  3378  001056  0E01               	movlw	1
  3379  001058  6E1A               	movwf	___lldiv@counter^0,c
  3380  00105A  EF35  F008         	goto	i1l2028
  3381  00105E                     i1l2026:
  3382  00105E  90D8               	bcf	status,0,c
  3383  001060  3612               	rlcf	___lldiv@divisor^0,f,c
  3384  001062  3613               	rlcf	(___lldiv@divisor+1)^0,f,c
  3385  001064  3614               	rlcf	(___lldiv@divisor+2)^0,f,c
  3386  001066  3615               	rlcf	(___lldiv@divisor+3)^0,f,c
  3387  001068  2A1A               	incf	___lldiv@counter^0,f,c
  3388  00106A                     i1l2028:
  3389  00106A  AE15               	btfss	(___lldiv@divisor+3)^0,7,c
  3390  00106C  EF3A  F008         	goto	i1u137_21
  3391  001070  EF3C  F008         	goto	i1u137_20
  3392  001074                     i1u137_21:
  3393  001074  EF2F  F008         	goto	i1l2026
  3394  001078                     i1u137_20:
  3395  001078                     i1l2030:
  3396  001078  90D8               	bcf	status,0,c
  3397  00107A  3616               	rlcf	___lldiv@quotient^0,f,c
  3398  00107C  3617               	rlcf	(___lldiv@quotient+1)^0,f,c
  3399  00107E  3618               	rlcf	(___lldiv@quotient+2)^0,f,c
  3400  001080  3619               	rlcf	(___lldiv@quotient+3)^0,f,c
  3401  001082  5012               	movf	___lldiv@divisor^0,w,c
  3402  001084  5C0E               	subwf	___lldiv@dividend^0,w,c
  3403  001086  5013               	movf	(___lldiv@divisor+1)^0,w,c
  3404  001088  580F               	subwfb	(___lldiv@dividend+1)^0,w,c
  3405  00108A  5014               	movf	(___lldiv@divisor+2)^0,w,c
  3406  00108C  5810               	subwfb	(___lldiv@dividend+2)^0,w,c
  3407  00108E  5015               	movf	(___lldiv@divisor+3)^0,w,c
  3408  001090  5811               	subwfb	(___lldiv@dividend+3)^0,w,c
  3409  001092  A0D8               	btfss	status,0,c
  3410  001094  EF4E  F008         	goto	i1u138_21
  3411  001098  EF50  F008         	goto	i1u138_20
  3412  00109C                     i1u138_21:
  3413  00109C  EF59  F008         	goto	i1l2038
  3414  0010A0                     i1u138_20:
  3415  0010A0  5012               	movf	___lldiv@divisor^0,w,c
  3416  0010A2  5E0E               	subwf	___lldiv@dividend^0,f,c
  3417  0010A4  5013               	movf	(___lldiv@divisor+1)^0,w,c
  3418  0010A6  5A0F               	subwfb	(___lldiv@dividend+1)^0,f,c
  3419  0010A8  5014               	movf	(___lldiv@divisor+2)^0,w,c
  3420  0010AA  5A10               	subwfb	(___lldiv@dividend+2)^0,f,c
  3421  0010AC  5015               	movf	(___lldiv@divisor+3)^0,w,c
  3422  0010AE  5A11               	subwfb	(___lldiv@dividend+3)^0,f,c
  3423  0010B0  8016               	bsf	___lldiv@quotient^0,0,c
  3424  0010B2                     i1l2038:
  3425  0010B2  90D8               	bcf	status,0,c
  3426  0010B4  3215               	rrcf	(___lldiv@divisor+3)^0,f,c
  3427  0010B6  3214               	rrcf	(___lldiv@divisor+2)^0,f,c
  3428  0010B8  3213               	rrcf	(___lldiv@divisor+1)^0,f,c
  3429  0010BA  3212               	rrcf	___lldiv@divisor^0,f,c
  3430  0010BC  2E1A               	decfsz	___lldiv@counter^0,f,c
  3431  0010BE  EF3C  F008         	goto	i1l2030
  3432  0010C2                     i1l362:
  3433  0010C2  C016  F00E         	movff	___lldiv@quotient,?___lldiv
  3434  0010C6  C017  F00F         	movff	___lldiv@quotient+1,?___lldiv+1
  3435  0010CA  C018  F010         	movff	___lldiv@quotient+2,?___lldiv+2
  3436  0010CE  C019  F011         	movff	___lldiv@quotient+3,?___lldiv+3
  3437  0010D2  0012               	return		;funcret
  3438  0010D4                     __end_of___lldiv:
  3439                           	callstack 0
  3440                           
  3441 ;; *************** function _isrHighPrio *****************
  3442 ;; Defined at:
  3443 ;;		line 628 in file "avr-main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        1 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		Interrupt level 2
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	intcode
  3471  000008                     __pintcode:
  3472                           	callstack 0
  3473  000008                     _isrHighPrio:
  3474                           	callstack 27
  3475                           
  3476                           ;incstack = 0
  3477  000008  823A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3478  00000A  EFD3  F006         	goto	int_func
  3479                           
  3480                           	psect	intcode_body
  3481  000DA6                     __pintcode_body:
  3482                           	callstack 27
  3483  000DA6                     int_func:
  3484                           	callstack 27
  3485  000DA6                     
  3486                           ;avr-main.c: 631:     if (PIR4bits.CCP5IF)
  3487  000DA6  A47B               	btfss	123,2,c	;volatile
  3488  000DA8  EFD8  F006         	goto	i2u252_41
  3489  000DAC  EFDA  F006         	goto	i2u252_40
  3490  000DB0                     i2u252_41:
  3491  000DB0  EF24  F007         	goto	i2l2552
  3492  000DB4                     i2u252_40:
  3493  000DB4                     
  3494                           ;avr-main.c: 632:     {;avr-main.c: 633:         PIR4bits.CCP5IF = 0;
  3495  000DB4  947B               	bcf	123,2,c	;volatile
  3496                           
  3497                           ;avr-main.c: 635:         if(!PORTBbits.RB0)
  3498  000DB6  B081               	btfsc	129,0,c	;volatile
  3499  000DB8  EFE0  F006         	goto	i2u253_41
  3500  000DBC  EFE2  F006         	goto	i2u253_40
  3501  000DC0                     i2u253_41:
  3502  000DC0  EF24  F007         	goto	i2l2552
  3503  000DC4                     i2u253_40:
  3504  000DC4                     
  3505                           ;avr-main.c: 636:         {;avr-main.c: 638:             __nop();__nop();__nop();__nop()
      +                          ;
  3506  000DC4  F000               	nop	
  3507  000DC6  F000               	nop	
  3508  000DC8  F000               	nop	
  3509  000DCA  F000               	nop	
  3510                           
  3511                           ;avr-main.c: 639:             __nop();__nop();__nop();__nop();
  3512  000DCC  F000               	nop	
  3513  000DCE  F000               	nop	
  3514  000DD0  F000               	nop	
  3515  000DD2  F000               	nop	
  3516                           
  3517                           ;avr-main.c: 640:             __nop();__nop();__nop();__nop();
  3518  000DD4  F000               	nop	
  3519  000DD6  F000               	nop	
  3520  000DD8  F000               	nop	
  3521  000DDA  F000               	nop	
  3522                           
  3523                           ;avr-main.c: 641:             __nop();
  3524  000DDC  F000               	nop	
  3525                           
  3526                           ;avr-main.c: 643:             if (!PORTAbits.RA4 && PORTBbits.RB4)
  3527  000DDE  B880               	btfsc	128,4,c	;volatile
  3528  000DE0  EFF4  F006         	goto	i2u254_41
  3529  000DE4  EFF6  F006         	goto	i2u254_40
  3530  000DE8                     i2u254_41:
  3531  000DE8  EF24  F007         	goto	i2l2552
  3532  000DEC                     i2u254_40:
  3533  000DEC  A881               	btfss	129,4,c	;volatile
  3534  000DEE  EFFB  F006         	goto	i2u255_41
  3535  000DF2  EFFD  F006         	goto	i2u255_40
  3536  000DF6                     i2u255_41:
  3537  000DF6  EF24  F007         	goto	i2l2552
  3538  000DFA                     i2u255_40:
  3539  000DFA                     
  3540                           ;avr-main.c: 644:             {;avr-main.c: 645:                 if (!PORTAbits.RA1)
  3541  000DFA  B280               	btfsc	128,1,c	;volatile
  3542  000DFC  EF02  F007         	goto	i2u256_41
  3543  000E00  EF04  F007         	goto	i2u256_40
  3544  000E04                     i2u256_41:
  3545  000E04  EF17  F007         	goto	i2l2548
  3546  000E08                     i2u256_40:
  3547  000E08                     
  3548                           ;avr-main.c: 646:                 {;avr-main.c: 647:                     if (++track > m
      +                          axTrack)
  3549  000E08  0100               	movlb	0	; () banked
  3550  000E0A  2B71               	incf	_track& (0+255),f,b	;volatile
  3551  000E0C  5186               	movf	_maxTrack& (0+255),w,b	;volatile
  3552  000E0E  0A80               	xorlw	128
  3553  000E10  6E01               	movwf	??_isrHighPrio^0,c
  3554  000E12  5171               	movf	_track& (0+255),w,b	;volatile
  3555  000E14  0A80               	xorlw	128
  3556  000E16  5C01               	subwf	??_isrHighPrio^0,w,c
  3557  000E18  B0D8               	btfsc	status,0,c
  3558  000E1A  EF11  F007         	goto	i2u257_41
  3559  000E1E  EF13  F007         	goto	i2u257_40
  3560  000E22                     i2u257_41:
  3561  000E22  EF24  F007         	goto	i2l311
  3562  000E26                     i2u257_40:
  3563  000E26                     
  3564                           ; BSR set to: 0
  3565                           ;avr-main.c: 648:                         track = maxTrack;
  3566  000E26  C086  F071         	movff	_maxTrack,_track	;volatile
  3567  000E2A  EF24  F007         	goto	i2l2552
  3568  000E2E                     i2l2548:
  3569                           
  3570                           ;avr-main.c: 651:                 {;avr-main.c: 652:                     if (--track < 0
      +                          )
  3571  000E2E  0100               	movlb	0	; () banked
  3572  000E30  0771               	decf	_track& (0+255),f,b	;volatile
  3573  000E32  BF71               	btfsc	_track& (0+255),7,b	;volatile
  3574  000E34  EF20  F007         	goto	i2u258_40
  3575  000E38  EF1E  F007         	goto	i2u258_41
  3576  000E3C                     i2u258_41:
  3577  000E3C  EF24  F007         	goto	i2l311
  3578  000E40                     i2u258_40:
  3579  000E40                     
  3580                           ; BSR set to: 0
  3581                           ;avr-main.c: 653:                         track = 0;
  3582  000E40  0E00               	movlw	0
  3583  000E42  6F71               	movwf	_track& (0+255),b	;volatile
  3584  000E44  EF24  F007         	goto	i2l2552
  3585  000E48                     i2l311:
  3586  000E48                     i2l2552:
  3587                           
  3588                           ;avr-main.c: 660:     if (PIR2bits.CCP2IF)
  3589  000E48  A0A1               	btfss	161,0,c	;volatile
  3590  000E4A  EF29  F007         	goto	i2u259_41
  3591  000E4E  EF2B  F007         	goto	i2u259_40
  3592  000E52                     i2u259_41:
  3593  000E52  EF3F  F007         	goto	i2l2560
  3594  000E56                     i2u259_40:
  3595  000E56                     
  3596                           ;avr-main.c: 661:     {;avr-main.c: 662:         PIR2bits.CCP2IF = 0;
  3597  000E56  90A1               	bcf	161,0,c	;volatile
  3598                           
  3599                           ;avr-main.c: 664:         if (!PORTBbits.RB0)
  3600  000E58  B081               	btfsc	129,0,c	;volatile
  3601  000E5A  EF31  F007         	goto	i2u260_41
  3602  000E5E  EF33  F007         	goto	i2u260_40
  3603  000E62                     i2u260_41:
  3604  000E62  EF3F  F007         	goto	i2l2560
  3605  000E66                     i2u260_40:
  3606  000E66                     
  3607                           ;avr-main.c: 665:         {;avr-main.c: 667:             __nop();__nop();
  3608  000E66  F000               	nop	
  3609  000E68  F000               	nop	
  3610                           
  3611                           ;avr-main.c: 669:             if (!PORTBbits.RB3)
  3612  000E6A  B681               	btfsc	129,3,c	;volatile
  3613  000E6C  EF3A  F007         	goto	i2u261_41
  3614  000E70  EF3C  F007         	goto	i2u261_40
  3615  000E74                     i2u261_41:
  3616  000E74  EF3F  F007         	goto	i2l2560
  3617  000E78                     i2u261_40:
  3618  000E78                     
  3619                           ;avr-main.c: 670:             {;avr-main.c: 671:                 track = 0;
  3620  000E78  0E00               	movlw	0
  3621  000E7A  0100               	movlb	0	; () banked
  3622  000E7C  6F71               	movwf	_track& (0+255),b	;volatile
  3623  000E7E                     i2l2560:
  3624                           
  3625                           ;avr-main.c: 677:     if (PIR4bits.CCP4IF)
  3626  000E7E  A27B               	btfss	123,1,c	;volatile
  3627  000E80  EF44  F007         	goto	i2u262_41
  3628  000E84  EF46  F007         	goto	i2u262_40
  3629  000E88                     i2u262_41:
  3630  000E88  EF5A  F007         	goto	i2l323
  3631  000E8C                     i2u262_40:
  3632  000E8C                     
  3633                           ;avr-main.c: 678:     {;avr-main.c: 679:         PIR4bits.CCP4IF = 0;
  3634  000E8C  927B               	bcf	123,1,c	;volatile
  3635                           
  3636                           ;avr-main.c: 681:         if (!PORTBbits.RB0)
  3637  000E8E  B081               	btfsc	129,0,c	;volatile
  3638  000E90  EF4C  F007         	goto	i2u263_41
  3639  000E94  EF4E  F007         	goto	i2u263_40
  3640  000E98                     i2u263_41:
  3641  000E98  EF5A  F007         	goto	i2l323
  3642  000E9C                     i2u263_40:
  3643  000E9C                     
  3644                           ;avr-main.c: 682:         {;avr-main.c: 684:             __nop();__nop();
  3645  000E9C  F000               	nop	
  3646  000E9E  F000               	nop	
  3647                           
  3648                           ;avr-main.c: 686:             if (!PORTBbits.RB3)
  3649  000EA0  B681               	btfsc	129,3,c	;volatile
  3650  000EA2  EF55  F007         	goto	i2u264_41
  3651  000EA6  EF57  F007         	goto	i2u264_40
  3652  000EAA                     i2u264_41:
  3653  000EAA  EF5A  F007         	goto	i2l323
  3654  000EAE                     i2u264_40:
  3655  000EAE                     
  3656                           ;avr-main.c: 687:             {;avr-main.c: 688:                 track = 0;
  3657  000EAE  0E00               	movlw	0
  3658  000EB0  0100               	movlb	0	; () banked
  3659  000EB2  6F71               	movwf	_track& (0+255),b	;volatile
  3660  000EB4                     i2l323:
  3661  000EB4  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3662  000EB6  0011               	retfie		f
  3663  000EB8                     __end_of_isrHighPrio:
  3664                           	callstack 0
  3665  0000                     
  3666                           	psect	rparam
  3667  0000                     
  3668                           	psect	temp
  3669  00003A                     btemp:
  3670                           	callstack 0
  3671  00003A                     	ds	1
  3672  0000                     int$flags	set	btemp
  3673  0000                     wtemp8	set	btemp+1
  3674  0000                     ttemp5	set	btemp+1
  3675  0000                     ttemp6	set	btemp+4
  3676  0000                     ttemp7	set	btemp+8
  3677                           
  3678                           	psect	idloc
  3679                           
  3680                           ;Config register IDLOC0 @ 0x200000
  3681                           ;	unspecified, using default values
  3682  200000                     	org	2097152
  3683  200000  FF                 	db	255
  3684                           
  3685                           ;Config register IDLOC1 @ 0x200001
  3686                           ;	unspecified, using default values
  3687  200001                     	org	2097153
  3688  200001  FF                 	db	255
  3689                           
  3690                           ;Config register IDLOC2 @ 0x200002
  3691                           ;	unspecified, using default values
  3692  200002                     	org	2097154
  3693  200002  FF                 	db	255
  3694                           
  3695                           ;Config register IDLOC3 @ 0x200003
  3696                           ;	unspecified, using default values
  3697  200003                     	org	2097155
  3698  200003  FF                 	db	255
  3699                           
  3700                           ;Config register IDLOC4 @ 0x200004
  3701                           ;	unspecified, using default values
  3702  200004                     	org	2097156
  3703  200004  FF                 	db	255
  3704                           
  3705                           ;Config register IDLOC5 @ 0x200005
  3706                           ;	unspecified, using default values
  3707  200005                     	org	2097157
  3708  200005  FF                 	db	255
  3709                           
  3710                           ;Config register IDLOC6 @ 0x200006
  3711                           ;	unspecified, using default values
  3712  200006                     	org	2097158
  3713  200006  FF                 	db	255
  3714                           
  3715                           ;Config register IDLOC7 @ 0x200007
  3716                           ;	unspecified, using default values
  3717  200007                     	org	2097159
  3718  200007  FF                 	db	255
  3719                           
  3720                           	psect	config
  3721                           
  3722                           ; Padding undefined space
  3723  300000                     	org	3145728
  3724  300000  FF                 	db	255
  3725                           
  3726                           ;Config register CONFIG1H @ 0x300001
  3727                           ;	Oscillator Selection bits
  3728                           ;	FOSC = INTIO67, Internal oscillator block
  3729                           ;	4X PLL Enable
  3730                           ;	PLLCFG = ON, Oscillator multiplied by 4
  3731                           ;	Primary clock enable bit
  3732                           ;	PRICLKEN = ON, Primary clock enabled
  3733                           ;	Fail-Safe Clock Monitor Enable bit
  3734                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3735                           ;	Internal/External Oscillator Switchover bit
  3736                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3737  300001                     	org	3145729
  3738  300001  38                 	db	56
  3739                           
  3740                           ;Config register CONFIG2L @ 0x300002
  3741                           ;	Power-up Timer Enable bit
  3742                           ;	PWRTEN = OFF, Power up timer disabled
  3743                           ;	Brown-out Reset Enable bits
  3744                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3745                           ;	Brown Out Reset Voltage bits
  3746                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3747  300002                     	org	3145730
  3748  300002  19                 	db	25
  3749                           
  3750                           ;Config register CONFIG2H @ 0x300003
  3751                           ;	Watchdog Timer Enable bits
  3752                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3753                           ;	Watchdog Timer Postscale Select bits
  3754                           ;	WDTPS = 32768, 1:32768
  3755  300003                     	org	3145731
  3756  300003  3C                 	db	60
  3757                           
  3758                           ; Padding undefined space
  3759  300004                     	org	3145732
  3760  300004  FF                 	db	255
  3761                           
  3762                           ;Config register CONFIG3H @ 0x300005
  3763                           ;	CCP2 MUX bit
  3764                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3765                           ;	PORTB A/D Enable bit
  3766                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3767                           ;	P3A/CCP3 Mux bit
  3768                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3769                           ;	HFINTOSC Fast Start-up
  3770                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3771                           ;	Timer3 Clock input mux bit
  3772                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3773                           ;	ECCP2 B output mux bit
  3774                           ;	P2BMX = PORTB5, P2B is on RB5
  3775                           ;	MCLR Pin Enable bit
  3776                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3777  300005                     	org	3145733
  3778  300005  BD                 	db	189
  3779                           
  3780                           ;Config register CONFIG4L @ 0x300006
  3781                           ;	Stack Full/Underflow Reset Enable bit
  3782                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3783                           ;	Single-Supply ICSP Enable bit
  3784                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3785                           ;	Extended Instruction Set Enable bit
  3786                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3787                           ;	Background Debug
  3788                           ;	DEBUG = 0x1, unprogrammed default
  3789  300006                     	org	3145734
  3790  300006  85                 	db	133
  3791                           
  3792                           ; Padding undefined space
  3793  300007                     	org	3145735
  3794  300007  FF                 	db	255
  3795                           
  3796                           ;Config register CONFIG5L @ 0x300008
  3797                           ;	Code Protection Block 0
  3798                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3799                           ;	Code Protection Block 1
  3800                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3801                           ;	Code Protection Block 2
  3802                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3803                           ;	Code Protection Block 3
  3804                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3805  300008                     	org	3145736
  3806  300008  0F                 	db	15
  3807                           
  3808                           ;Config register CONFIG5H @ 0x300009
  3809                           ;	Boot Block Code Protection bit
  3810                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3811                           ;	Data EEPROM Code Protection bit
  3812                           ;	CPD = OFF, Data EEPROM not code-protected
  3813  300009                     	org	3145737
  3814  300009  C0                 	db	192
  3815                           
  3816                           ;Config register CONFIG6L @ 0x30000A
  3817                           ;	Write Protection Block 0
  3818                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3819                           ;	Write Protection Block 1
  3820                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3821                           ;	Write Protection Block 2
  3822                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3823                           ;	Write Protection Block 3
  3824                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3825  30000A                     	org	3145738
  3826  30000A  0F                 	db	15
  3827                           
  3828                           ;Config register CONFIG6H @ 0x30000B
  3829                           ;	Configuration Register Write Protection bit
  3830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3831                           ;	Boot Block Write Protection bit
  3832                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3833                           ;	Data EEPROM Write Protection bit
  3834                           ;	WRTD = OFF, Data EEPROM not write-protected
  3835  30000B                     	org	3145739
  3836  30000B  E0                 	db	224
  3837                           
  3838                           ;Config register CONFIG7L @ 0x30000C
  3839                           ;	Table Read Protection Block 0
  3840                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3841                           ;	Table Read Protection Block 1
  3842                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3843                           ;	Table Read Protection Block 2
  3844                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3845                           ;	Table Read Protection Block 3
  3846                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3847  30000C                     	org	3145740
  3848  30000C  0F                 	db	15
  3849                           
  3850                           ;Config register CONFIG7H @ 0x30000D
  3851                           ;	Boot Block Table Read Protection bit
  3852                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3853  30000D                     	org	3145741
  3854  30000D  40                 	db	64
  3855                           tosu	equ	0xFFF
  3856                           tosh	equ	0xFFE
  3857                           tosl	equ	0xFFD
  3858                           stkptr	equ	0xFFC
  3859                           pclatu	equ	0xFFB
  3860                           pclath	equ	0xFFA
  3861                           pcl	equ	0xFF9
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           indf0	equ	0xFEF
  3869                           postinc0	equ	0xFEE
  3870                           postdec0	equ	0xFED
  3871                           preinc0	equ	0xFEC
  3872                           plusw0	equ	0xFEB
  3873                           fsr0h	equ	0xFEA
  3874                           fsr0l	equ	0xFE9
  3875                           wreg	equ	0xFE8
  3876                           indf1	equ	0xFE7
  3877                           postinc1	equ	0xFE6
  3878                           postdec1	equ	0xFE5
  3879                           preinc1	equ	0xFE4
  3880                           plusw1	equ	0xFE3
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           bsr	equ	0xFE0
  3884                           indf2	equ	0xFDF
  3885                           postinc2	equ	0xFDE
  3886                           postdec2	equ	0xFDD
  3887                           preinc2	equ	0xFDC
  3888                           plusw2	equ	0xFDB
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         27
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      57
    BANK0           160     14      39
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLowPrio in COMRAM

    _isrLowPrio->___lldiv
    ___lldiv->___lmul

Critical Paths under _isrHighPrio in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isrLowPrio in BANK0

    None.

Critical Paths under _isrHighPrio in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isrLowPrio in BANK1

    None.

Critical Paths under _isrHighPrio in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrLowPrio in BANK2

    None.

Critical Paths under _isrHighPrio in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLowPrio in BANK3

    None.

Critical Paths under _isrHighPrio in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLowPrio in BANK4

    None.

Critical Paths under _isrHighPrio in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLowPrio in BANK5

    None.

Critical Paths under _isrHighPrio in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLowPrio in BANK6

    None.

Critical Paths under _isrHighPrio in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLowPrio in BANK7

    None.

Critical Paths under _isrHighPrio in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLowPrio in BANK8

    None.

Critical Paths under _isrHighPrio in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLowPrio in BANK9

    None.

Critical Paths under _isrHighPrio in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLowPrio in BANK10

    None.

Critical Paths under _isrHighPrio in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLowPrio in BANK11

    None.

Critical Paths under _isrHighPrio in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLowPrio in BANK12

    None.

Critical Paths under _isrHighPrio in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLowPrio in BANK13

    None.

Critical Paths under _isrHighPrio in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLowPrio in BANK14

    None.

Critical Paths under _isrHighPrio in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isrLowPrio in BANK15

    None.

Critical Paths under _isrHighPrio in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3466
                                              8 BANK0      6     6      0
                         _EepromRead
                        _EepromWrite
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     973
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _EepromWrite                                          5     0      5     962
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _EepromRead                                           4     0      4     481
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isrLowPrio                                          20    20      0     845
                                             26 COMRAM    20    20      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                             13 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isrHighPrio                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EepromRead
   _EepromWrite
   ___awdiv
   ___awmod

 _isrLowPrio (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul

 _isrHighPrio (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      27       5       24.4%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     2E      39       1       60.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 23 19:51:51 2020

               ___awdiv@sign 0077                           bsr 000FE0                          l201 0668  
                        l202 0676                          l211 06D0                          l203 068C  
                        l221 09AE                          l213 0846                          l214 07CC  
                        l206 06AE                          l224 08A4                          l216 0846  
                        l233 0ADE                          l217 0818                          l170 041C  
                        l331 116C                          l332 116E                          l260 0B2C  
                        l164 0786                          l261 0B34                          l326 11AA  
                        l270 0C66                          l190 056E                          l174 0460  
                        l166 03F2                          l271 0C92                          l263 0B78  
                        l183 04B2                          l264 0C1E                          l192 05FC  
                        l184 04B8                          l329 115E                          l257 0B1C  
                        l177 0488                          l274 0CFA                          l194 0612  
                        l186 0554                          l259 0B24                          l195 0620  
                        l188 0562                          l189 0568                          l198 0644  
                        l566 0F7C                          l579 102E                          _PR2 000FBB  
                        _PR4 000F52                 ___awmod@sign 0077                          wreg 000FE8  
                       l3000 03B6                         l3010 03C4                         l3002 03BA  
                       l3100 088A                         l3020 03CE                         l3012 03C6  
                       l3004 03BE                         l3110 08F2                         l3102 089C  
                       l3022 03DC                         l3014 03C8                         l3006 03C0  
                       l3200 0B7E                         l3120 092E                         l3112 0900  
                       l3104 08C4                         l3032 0444                         l3024 0402  
                       l3016 03CA                         l3008 03C2                         l3210 0C60  
                       l3202 0BC0                         l3130 097E                         l3122 0946  
                       l3114 0904                         l3106 08D6                         l3050 0584  
                       l3034 0470                         l3026 0416                         l3018 03CC  
                       l3220 0CCC                         l3212 0C6A                         l3204 0BF6  
                       l3140 09CE                         l3132 0982                         l3124 0954  
                       l3116 091C                         l3108 08DA                         l3060 063E  
                       l3052 05BE                         l3028 042C                         l3044 04CE  
                       l3222 0CD2                         l3214 0C78                         l3206 0C26  
                       l3230 0D06                         l3150 0A0E                         l3142 09DC  
                       l3134 099A                         l3126 0958                         l3118 092A  
                       l3070 06BE                         l3062 0654                         l3054 05E4  
                       l3038 0496                         l3046 052A                         l3224 0CDA  
                       l3216 0C8A                         l3208 0C5E                         l3232 0D40  
                       l3160 0A3C                         l3152 0A16                         l3144 09EE  
                       l3128 0970                         l3136 09A8                         l3080 07A8  
                       l3064 0662                         l3056 05EE                         l3226 0CEC  
                       l3218 0C94                         l3170 0A76                         l3162 0A4E  
                       l3154 0A1C                         l3146 09F6                         l3138 09BC  
                       l3090 0840                         l3082 07B6                         l3066 069C  
                       l3058 0630                         l3172 0A7C                         l3164 0A56  
                       l3156 0A2E                         l3148 09FC                         l3180 0A9C  
                       l3092 0854                         l3084 07DA                         l3076 06E6  
                       l3174 0A8E                         l3166 0A5C                         l3158 0A36  
                       l3182 0AE2                         l3190 0B00                         l3094 0862  
                       l3086 0810                         l3078 075A                         l3184 0AF4  
                       l3176 0A96                         l3168 0A6E                         l3096 0870  
                       l3088 0826                         l3192 0B02                         l2810 119E  
                       l3530 0B92                         l3194 0B14                         l3186 0AFC  
                       l3098 0882                         l3522 04E4                         l2812 11A2  
                       l2820 113E                         l2900 0FD6                         l3532 0D1A  
                       l3196 0B3C                         l3188 0AFE                         l3524 0598  
                       l2814 11A4                         l2830 114E                         l2822 1142  
                       l2902 0FE4                         l2910 100E                         l3526 06FC  
                       l2816 11A6                         l2808 119A                         l2832 1150  
                       l2824 1146                         l2840 0EBE                         l2912 101E  
                       l2904 0FFA                         l3528 0AB0                         l2920 0282  
                       l2834 115A                         l2826 114A                         l2850 0EEE  
                       l2842 0ECC                         l2914 1026                         l2906 1002  
                       l2930 02B2                         l2922 028A                         l2836 115C  
                       l2828 114C                         l2860 0F1C                         l2852 0EF2  
                       l2844 0ED4                         l2908 1008                         l2940 02BE  
                       l2932 02B4                         l2924 028C                         l2870 0F50  
                       l2862 0F2A                         l2854 0EFA                         l2846 0ED8  
                       l2838 0EB8                         l2950 02CE                         l2942 02C0  
                       l2934 02B6                         l2926 02AC                         l2918 027C  
                       l2872 0F56                         l2864 0F30                         l2856 0F0C  
                       l2848 0EE6                         l2960 02E0                         l2952 02D2  
                       l2944 02C4                         l2936 02B8                         l2928 02AE  
                       l2866 0F46                         l2858 0F14                         l2874 0F5C  
                       l2890 0F9E                         l2882 0F7E                         l2970 02EE  
                       l2962 02E2                         l2954 02D6                         l2946 02C8  
                       l2938 02BA                         l2876 0F6C                         l2868 0F4E  
                       l2892 0FAC                         l2884 0F84                         l2980 0332  
                       l2972 02F2                         l2964 02E6                         l2956 02DA  
                       l2948 02CA                         l2878 0F74                         l2894 0FB4  
                       l2886 0F92                         l2990 036A                         l2982 033E  
                       l2974 030A                         l2966 02E8                         l2958 02DC  
                       l2896 0FC6                         l2888 0F9A                         l2992 0382  
                       l2984 0342                         l2976 0316                         l2968 02EC  
                       l2898 0FCE                         l2994 038E                         l2986 035A  
                       l2978 031A                         l2996 0392                         l2988 0366  
                       l2998 03AA           EepromWrite@address 0072                         u3110 0686  
                       u3030 060C                         u3111 0680                         u3031 0606  
                       u3015 05EE                         u3008 05D6                         u3105 0672  
                       u3025 05F8                         u3210 0798                         u3130 069C  
                       u3211 0792                         u3131 0698                         u3300 0862  
                       u3140 06AA                         u3060 0630                         u3301 085E  
                       u3141 06A6                         u3125 0688                         u3061 062C  
                       u3045 060E                         u3310 0870                         u3230 07A8  
                       u3150 06BE                         u3070 063E                         u3311 086C  
                       u3231 07A4                         u3151 06BA                         u3071 063A  
                       u3055 061C                         u3400 09EE                         u3320 0882  
                       u3240 07B6                         u3208 0772                         u3160 06CC  
                       u3080 0654                         u3401 09EA                         u3321 087E  
                       u3241 07B2                         u3225 079A                         u3161 06C8  
                       u3081 0650                         u3410 0A0E                         u3330 089C  
                       u3250 07DA                         u3170 06E0                         u3090 0662  
                       u3411 0A0A                         u3331 0898                         u3251 07D6  
                       u3171 06DA                         u3091 065E                         u2700 0F46  
                       u3500 0BF6                         u3420 0A2E                         u3340 08B4  
                       u3260 0810                         u2701 0F42                         u3501 0BF2  
                       u3421 0A2A                         u3341 08AE                         u3261 080C  
                       u2710 0F6C                         u3510 0C06                         u3430 0A4E  
                       u3270 0826                         u3190 076E                         u2711 0F68  
                       u3511 0C00                         u3431 0A4A                         u3271 0822  
                       u3191 0764                         u2720 0F92                         u3600 0D6A  
                       u3520 0C18                         u3440 0A6E                         u3360 08C4  
                       u3280 0840                         u2721 0F8E                         u3601 0D62  
                       u3521 0C12                         u3441 0A6A                         u3361 08C0  
                       u3281 083C                         u3185 06E2                         u2650 116C  
                       u2730 0FAC                         u3450 0A8E                         u3370 09BC  
                       u3290 0854                         u2810 0402                         u2651 1168  
                       u2731 0FA8                         u3451 0A8A                         u3371 09B8  
                       u3355 08B6                         u3291 0850                         u2811 03FE  
                       u2660 0ECC                         u2740 0FC6                         u3620 0D8C  
                       u3540 0C78                         u3460 0AF4                         u3380 09CE  
                       u2900 04AC                         u2820 0416                         u2661 0EC8  
                       u2741 0FC2                         u3621 0D84                         u3541 0C74  
                       u3525 0C08                         u3461 0AF0                         u3381 09CA  
                       u2901 04A6                         u2821 0412                         u2805 03EE  
                       u2670 0EE6                         u2750 0FE4                         u3550 0C88  
                       u3470 0B14                         u3390 09DC                         u2830 042C  
                       u2671 0EE2                         u2751 0FE0                         u3551 0C82  
                       u3535 0C1A                         u3471 0B10                         u3391 09D8  
                       u2831 0428                         u2680 0F0C                         u2760 0FFA  
                       u3480 0BD0                         u2920 04C8                         u2840 0440  
                       u2681 0F08                         u2761 0FF6                         u3481 0BCA  
                       u2921 04C2                         u2841 043C                         u2690 0F2A  
                       u2770 101E                         u3618 0D6E                         u3570 0CEA  
                       u3490 0BE4                         u3482 0BD2                         u2850 045A  
                       u2691 0F26                         u2771 101A                         u3571 0CE4  
                       u3491 0BDE                         u2915 04AE                         u2851 0454  
                       u3492 0BE6                         u2940 053E                         u2780 03DC  
                       u3565 0C8A                         u2941 0534                         u2781 03D8  
                       u3638 0D90                         u2870 0470                         u2790 03EC  
                       u2935 04CA                         u2871 046C                         u2791 03E6  
                       u2880 0484                         u3585 0CEC                         u2881 0480  
                       u2865 045C                         u2970 057E                         u2890 0496  
                       u3595 0CF6                         u2971 0578                         u2891 0492  
                       u2965 055E                         u2990 05D2                         u2958 0542  
                       u2991 05C8                         u2985 0580                         _TMR2 000FBC  
                       _main 027C                         btemp 003A                         start 0278  
               main@tg43Mode 0083          __end_of_EepromWrite 1170                 ___param_bank 000000  
               main@headLoad 0180                 ?_isrHighPrio 0001                        ?_main 0001  
            __end_of___awdiv 0F7E                        _EEADR 000FA9              __end_of___awmod 1030  
            __end_of___lldiv 10D4                   _EepromRead 119A                        _T0CON 000FD5  
            ___awdiv@divisor 0074                        _T1CON 000FCD                        _T2CON 000FBA  
                      _T4CON 000F51                        i1l300 01FA                        i1l302 0240  
                      i1l304 0250                        i1l305 0268                        i1l362 10C2  
                      i1l346 112C                        i1l347 113C                        i2l311 0E48  
                      i1l296 0174                        i1l369 10D2                        i2l323 0EB4  
            ___awdiv@counter 0076                        _PORTA 000F80                        _PORTC 000F82  
               main@menuEdit 0178                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                 main@menuMode 006D          ___lmul@multiplicand 0006  
                      _blink 0185                        _track 0071               __pbitbssCOMRAM 0178  
              _counter1000Hz 0068                        ttemp5 003B                        ttemp6 003E  
                      ttemp7 0042                        status 000FD8                _counter6000Hz 0036  
                      wtemp8 003B              __initialization 1170                 __end_of_main 0DA6  
              main@cmdSwitch 0181                       ??_main 007A             main@headLoadMode 0085  
              __activetblptr 000002                       _EEADRH 000FAA                       _EEDATA 000FA8  
                     _EECON2 000FA7             ___awdiv@dividend 0072                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A                       i1l2010 10D4  
                     i1l2020 1030                       i1l2012 10E4                       i1l2030 1078  
                     i1l2022 1040                       i1l2014 10F2                       i1l2040 10BC  
                     i1l2032 1082                       i1l2024 1056                       i1l2016 1102  
                     i1l2034 10A0                       i1l2026 105E                       i1l2018 110C  
                     i1l2036 10B0                       i1l2028 106A                       i1l2038 10B2  
                     i1l2500 0082                       i1l2502 0086                       i1l2510 00DE  
                     i1l2520 0130                       i1l2512 00EC                       i1l2504 0094  
                     i1l2530 020A                       i1l2522 0140                       i1l2514 00FC  
                     i1l2506 00BC                       i1l2532 0254                       i1l2524 015C  
                     i1l2516 010A                       i1l2508 00CC                       i1l2526 018E  
                     i1l2518 010E                       i1l2528 01EA                       i1l2490 0036  
                     i1l2492 0054                       i1l2494 0060                       i1l2486 0026  
                     i1l2496 006E                       i1l2488 0034                       i1l2498 0070  
                     i2l2540 0DEC                       i2l2550 0E40                       i2l2542 0DFA  
                     i2l2534 0DA6                       i2l2560 0E7E                       i2l2544 0E08  
                     i2l2536 0DB4                       i2l2552 0E48                       i2l2562 0E8C  
                     i2l2554 0E56                       i2l2546 0E26                       i2l2538 0DC4  
                     i2l2564 0E9C                       i2l2556 0E66                       i2l2548 0E2E  
                     i2l2566 0EAE                       i2l2558 0E78                  _EepromWrite 113E  
                     _OSCCON 000FD3                       ___lmul 10D4                    ??___awdiv 0076  
                  ??___awmod 0076                    ??___lldiv 0016                       clear_0 1176  
                     clear_1 1186             ___awdiv@quotient 0078              ___awmod@divisor 0074  
            ___awmod@counter 0076                  ?_EepromRead 0072                       tblptru 000FF8  
       main@startDisplayMode 0082                   __accesstop 0060      __end_of__initialization 118C  
              ___rparam_used 000001               __pcstackCOMRAM 0001         __size_of_isrHighPrio 0EB0  
             main@diskChange 0182                   __pbssBANK0 0060          __size_of_EepromRead 0012  
          main@cmdSwitchLast 017B            main@cmdSwitchLong 0179                      ?___lmul 0002  
                    _CCP2CON 000F66                      _CCP3CON 000F5D                      _CCP4CON 000F57  
                    _CCP5CON 000F54               ___lmul@product 000A  _speedDeviationPercentTenths 0070  
                    _OSCTUNE 000F9B                      __Hparam 0000                      __Lparam 0000  
        main@readyDiskChange 017F                      ___awdiv 0EB8              __size_of___lmul 006A  
                    ___awmod 0F7E                      ___lldiv 1030                      __pcinit 1170  
                    __ramtop 1000                      __ptext0 027C                      __ptext1 0F7E  
                    __ptext2 0EB8                      __ptext3 113E                      __ptext4 119A  
                    __ptext6 10D4                      __ptext7 1030                   _isrLowPrio 0018  
            _isrLowPrio$1006 0022             ___awmod@dividend 0072               __pintcode_body 0DA6  
       end_of_initialization 118C                 ?_EepromWrite 0072                __Lmediumconst 0000  
                    int_func 0DA6              ___lldiv@divisor 0012              ___lldiv@counter 001A  
                    postinc0 000FEE          isrLowPrio@deviation 0026           main@externalSignal 0184  
                  _PORTAbits 000F80                    _PORTBbits 000F81                 ??_EepromRead 0076  
    main@readyDiskChangeMode 0084                   main@counts 007C           __end_of_EepromRead 11AC  
             __end_of___lmul 113E                  ?_isrLowPrio 0001          start_initialization 1170  
          main@eepromAddress 0060                     ??___lmul 000A                ??_isrHighPrio 0001  
                __pbssCOMRAM 0031                __pcstackBANK0 0072              main@eepromValue 0080  
       __size_of_EepromWrite 0032                    __pnvBANK0 0080          __size_of_isrLowPrio 0260  
                  __pintcode 0008                     ?___awdiv 0072                     ?___awmod 0072  
                   ?___lldiv 000E              main@displayMode 0081      main@cmdSwitchStartCount 0064  
         main@cmdSwitchShort 017A                  __pintcodelo 0018                     _CCPTMRS0 000F49  
                   _CCPTMRS1 000F48          __end_of_isrHighPrio 0EB8                     _IPR1bits 000F9F  
                   _IPR2bits 000FA2                     _PIE1bits 000F9D                     _IPR4bits 000F7C  
                   _PIE2bits 000FA0                     _IPR5bits 000F7F                     _PIE4bits 000F7A  
                   _PIE5bits 000F7D                     i1u134_20 10F2                     i1u134_21 10EE  
                   i1u135_20 112C                     i1u135_21 1128                     i1u136_20 1056  
                   i1u240_20 0082                     i1u136_21 1052                     i1u240_21 007E  
                   i1u137_20 1078                     i1u241_20 00BC                     i1u137_21 1074  
                   i1u241_21 00B8                     i1u138_20 10A0                     i1u250_20 018E  
                   i1u242_20 00DC                     i1u138_21 109C                     i1u250_21 018A  
                   i1u242_21 00D6                     i1u251_20 020A                     i1u251_21 0206  
                   i1u243_25 00DE                     i1u244_20 00EC                     i1u244_21 00E8  
                   i1u245_20 00FC                     i1u237_20 0034                     i1u245_21 00F8  
                   i1u237_21 0030                     i1u246_20 010A                     i1u238_20 0054  
                   i1u246_21 0106                     i1u238_21 0050                     i1u247_20 012C  
                   i1u239_20 006E                     i1u247_21 0126                     i1u239_21 006A  
                   i1u248_20 012E                     i1u249_20 0140                     i1u249_21 013C  
                   i2u260_40 0E66                     i2u252_40 0DB4                     i2u260_41 0E62  
                   i2u252_41 0DB0                     i2u261_40 0E78                     i2u253_40 0DC4  
                   i2u261_41 0E74                     i2u253_41 0DC0                     i2u262_40 0E8C  
                   i2u254_40 0DEC                     i2u262_41 0E88                     i2u254_41 0DE8  
                   i2u263_40 0E9C                     i2u255_40 0DFA                     i2u263_41 0E98  
                   i2u255_41 0DF6                     i2u264_40 0EAE                     i2u256_40 0E08  
                   i2u264_41 0EAA                     i2u256_41 0E04                     i2u257_40 0E26  
                   i2u257_41 0E22                     _PIR1bits 000F9E                     i2u258_40 0E40  
                   i2u258_41 0E3C                     i2u259_40 0E56                     i2u259_41 0E52  
                   _PIR2bits 000FA1                     _PIR4bits 000F7B                     _PIR5bits 000F7E  
                   _RCONbits 000FD0                    main@ready 0183                    main@speed 006C  
     isrLowPrio@clockDivider 0035            ___lmul@multiplier 0002                  _INTCON2bits 000FF1  
                 _EECON1bits 000FA6                     __Hrparam 0000                     __Lrparam 0000  
           __size_of___awdiv 00C6             __size_of___awmod 00B2             __size_of___lldiv 00A4  
               ??_isrLowPrio 001B                  _isrHighPrio 0008                     _maxTrack 0086  
              __size_of_main 0B2A           __end_of_isrLowPrio 0278                     int$flags 003A  
                   main@bcd1 006F                     main@bcd2 006E                     main@tg43 017E  
                   main@dot1 017D                     main@dot2 017C            isrLowPrio@percent 002A  
            EepromWrite@data 0076                   _INTCONbits 000FF2                     intlevel1 0000  
                   intlevel2 0000             ___lldiv@dividend 000E            EepromRead@address 0072  
           ___lldiv@quotient 0016                ??_EepromWrite 0077               isrLowPrio@sign 002E  
       isrLowPrio@counter500 0031  
